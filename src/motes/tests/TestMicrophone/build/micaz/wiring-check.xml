<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="14:TestMicrophoneAppC.nc">
      <from><interface-ref name="MicWarnupTimer" scoped="" ref="0x40767c58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077cb60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4077cb60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407751b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:TestMicrophoneAppC.nc">
      <from><interface-ref name="MicPower" scoped="" ref="0x40755f28"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x40562850"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x40562850"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x40466c08"/></to>
    </wire>
    <wire loc="16:TestMicrophoneAppC.nc">
      <from><interface-ref name="MicMuxSel" scoped="" ref="0x40765950"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x40560730"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x40560730"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x4046ea98"/></to>
    </wire>
    <wire loc="17:TestMicrophoneAppC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40761428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40688858"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40688858"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4069f348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestMicrophoneAppC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40764488"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40687010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40687010"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x4069fe80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:TestMicrophoneAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4087ed00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404415f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404415f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405371c8"/></to>
    </wire>
    <wire loc="23:TestMicrophoneAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40885b90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40545df8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40545df8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405434b0"/></to>
    </wire>
    <wire loc="24:TestMicrophoneAppC.nc">
      <from><interface-ref name="Microphone" scoped="" ref="0x40881258"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40757980"/></to>
    </wire>
    <wire loc="25:TestMicrophoneAppC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x408854c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x405d5670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:TestMicrophoneAppC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40882810"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x405e2300"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x405e2300"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x405ea4a0"/></to>
    </wire>
    <wire loc="27:TestMicrophoneAppC.nc">
      <from><interface-ref name="MicAdcChannel" scoped="" ref="0x40882df8"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x405717b0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x405717b0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x4057a010"/></to>
    </wire>
    <wire loc="33:TestMicrophoneAppC.nc">
      <from><interface-ref name="PrintfControl" scoped="" ref="0x4087e8d8"/></from>
      <to><interface-ref name="PrintfControl" scoped="" ref="0x4088d0b8"/></to>
    </wire>
    <wire loc="56:./radioprintf/PrintfC.nc">
      <from><interface-ref name="PrintfControl" scoped="" ref="0x4088d0b8"/></from>
      <to><interface-ref name="PrintfControl" scoped="" ref="0x40eabaa8"/></to>
    </wire>
    <wire loc="34:TestMicrophoneAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40880180"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4088db80"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4088db80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408b23c8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40da89a0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d90b48"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40da1040"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d835f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cc21e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c42380"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40997010"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411ef2c8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b1b128"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4093ef20"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40789ae8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410ec750"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410a0c20"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40537560"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4034eed8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4034eed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403c2ea8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40537b28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4044cb48"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4044cb48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4044ae90"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40536010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40451b20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a14db8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40451b20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405d9c20"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404513c0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4052dc08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x4044f690"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4052d858"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4044f288"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40559870"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4044f288"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404499c0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404499c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404549c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40449d90"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40451b20"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x40457ef8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x40465210"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x40465210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404ae7d0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4045b8f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40449d90"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4047b4b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404f93e8"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x4046ca28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404c7790"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404c7790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f76de0"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404790a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404c9410"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404c9410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fe1c08"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x4047e210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404d9c88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404d9c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4101a7f8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x40464670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404adac8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404adac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed29e8"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40475ce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404ce968"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404ce968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fe43b0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40463a98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404b4b00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404b4b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f10938"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x40466210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404b76b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404b76b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f419e8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404748e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404c54f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404c54f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa8c08"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40478ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404d3170"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404d3170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fdca88"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x4045d2f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404a4b80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404a4b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40edb538"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404618e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404b27d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404b27d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f0b7f8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4046e0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404c0330"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404c0330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f719e8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40472750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404c3170"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404c3170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa3a88"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x4047c0a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404d7988"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404d7988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410156c0"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x40485590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404ff3b0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40471c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404ca090"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404ca090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fac7f8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404ae7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed5538"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40469830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404b04f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404b04f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f3c6c0"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4047a0c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405048f0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40468ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404b83d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404b83d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f44538"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x4046b4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404c6170"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404c6170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f747f8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x40479a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404c9d68"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404c9d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fdf6c0"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x4047ec08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404d86b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404d86b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41018228"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x404630a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404ac4f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404ac4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed0538"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404624b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404b34f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404b34f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f0e3b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x40466c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404b6030"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404b6030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f3e538"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404732f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404c5e48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404c5e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa66c0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404768e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404d3ac8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404d3ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fda538"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x4045dce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404af4f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404af4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed9010"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x4046a2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404b1170"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404b1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f09228"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4046ea98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404c0c88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404c0c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f6f538"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4047ca98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404d6330"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404d6330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410130b0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4046dea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404bcdc8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404bcdc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f77418"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x40470670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404ca9e8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404ca9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40faa228"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x4047f750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404d9330"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404d9330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fe3d70"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40484010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4050a8a0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x40465c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404ad170"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404ad170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed3010"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404682f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404b0e48"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404b0e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f3a0b0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404752f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404ce010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404ce010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fe6938"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x40467750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404b8d30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404b8d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f42010"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x4046bea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404c6ac8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404c6ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa9228"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404784b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404c8790"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404c8790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fdd0b0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x4047d670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404d7030"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404d7030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41017c08"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404538d8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404a4228"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404a4228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40edda08"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40462ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404b3e48"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404b3e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f0dd70"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4046f670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404b6988"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404b6988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f72010"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40473ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404c47d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404c47d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa40b0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4047aab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40502dd8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x40471210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404cb6f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404cb6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fb2de8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4046d4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404bf6b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404bf6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f6d010"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x4045c750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404afe48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404afe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed89e8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x4046ad68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404b1ac8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404b1ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f08c08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9720"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403c63a0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40349bd8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403dc690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407f4010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40559870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40543168"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40550240"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x4055ba70"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4055ba70"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x4045dce8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40550c28"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x4055a4c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4055a4c0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x4045d2f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4054f660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x4055aec8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4055aec8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x404538d8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x40569368"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x405c2e20"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x40571010"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x4056f7d0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x40571b80"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x4057a3e0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x405703e0"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x4057ab80"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x4056c580"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x404784b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x40573d38"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x4046bea8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x40563490"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x40467750"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x405612d0"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x4046f670"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x40568198"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x405c5010"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x405713e0"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x4056fba0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x40573318"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x4046b4b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x4055f118"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x4046d4b0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x40566b98"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x405cacb8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x405708b0"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x40579010"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x4056b010"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x40478ea8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x40563e68"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x40466210"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x40561ca8"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x4046e0a0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x40570010"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x4057a7b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x4055fb00"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x40479a98"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x40569a58"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x405c8ed0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x40568838"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x404732f0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x40570c80"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x405793e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x4053fa38"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x40468ce8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x4056b9f8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x404768e0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x405b3350"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x4057b010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x4057b010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x405b1bd0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x405c9430"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x4057b890"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x4057b890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x405afe68"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x405c74e0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x4058a168"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x4058a168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x405ac050"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x405c5608"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x4058a9e8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x4058a9e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x405ba2b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x405805d8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x405a86c0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40580e58"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x405a67a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x4057dce0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40587570"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x4057f6f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x405a4920"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40587d28"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x405845e8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x405a8e78"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x40584a60"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x405a5010"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x40584ed8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x405a3190"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x40586360"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x405b0430"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x405867d8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x405ae630"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x40586c50"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x405ac808"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x405851a0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x405baa68"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x40585618"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x405de870"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x405eaa28"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x405d5670"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4062a910"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4062a910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4109d170"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40673010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x405d9010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x405ef338"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x405d8938"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x405d8938"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x406045f0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x405e87a8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404513c0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x406729f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x405ea010"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40671150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40674470"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40674470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4109dcb8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40612a58"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403d88a8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40674068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4109d8b0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40674b08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4109b3f0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4109b8b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40673010"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x4109bcd8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x4109e010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x4109af28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x410bc9b8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x406729f0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x410bcdb0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40672de8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410ba150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40671150"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x410ba7e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x406717e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4069f348"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406b8010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4069fe80"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x406b8800"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x406d47a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406995f8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406995f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410ebbf0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x406d4f20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x406e3ec8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x406e6dd8"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x40714dd8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x406bbeb8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x406e3a20"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406ba5f8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406bd158"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406bd158"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410e97b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40713190"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x407249b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x407249b0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40720a80"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x40712890"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4073e520"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x40711510"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4073e520"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40699d38"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x410e93a8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x406bd7f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410e9e48"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410e8338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406bdca0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x410e8760"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x410eca88"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x410e7970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x40731240"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x4046dea8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x40731c40"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x4046ca28"/></to>
    </wire>
    <wire loc="23:MicrophoneC.nc">
      <from><interface-ref name="gainOk" scoped="" ref="0x40760c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:MicrophoneC.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x4075fb38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:MicrophoneC.nc">
      <from><interface-ref name="gainFail" scoped="" ref="0x4075f3c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407751b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407862b0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407862b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4083bea8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40789ae8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407829d8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40780310"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40876940"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407829d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407a2c78"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40861220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077ff08"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4083f248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x407961c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x407961c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x408260c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40874360"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x4078cda0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x4078cda0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40825b70"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40825b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x411156f8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407a2c78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41118818"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x408260c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41118c50"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x411148b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407d6ca8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407d6ca8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407e57d8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41111a78"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407e8010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407e8010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407e0af0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x411102e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407e8970"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407e8970"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407df4f8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4110fce8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407e64f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x407e64f8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407f4470"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x4083ebd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4085e4b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:TestMicrophoneC.nc">
      <from><interface-ref name="getMicrophoneData" scoped="" ref="0x4087fb00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:./radioprintf/PrintfC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40eabf10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40545df8"/></to>
    </wire>
    <wire loc="59:./radioprintf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40eaab48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e62e08"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e62e08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4126b2c8"/></to>
    </wire>
    <wire loc="60:./radioprintf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ea9270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40e614d0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e614d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4126b960"/></to>
    </wire>
    <wire loc="62:./radioprintf/PrintfC.nc">
      <from><interface-ref name="FlushTimer" scoped="" ref="0x40ea9a98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40eac238"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40eac238"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407751b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408b23c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408d8aa0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4089e670"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408b2ca0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408b2ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40def4e8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40888798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x408b1db0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408b1db0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40dee580"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408969d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408b0dc0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408b0dc0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ded518"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408ba408"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d2d010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d2d010"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d24980"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408b3ba8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408c33c0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408c33c0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408e4110"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40888100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408b1718"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408b1718"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40defea8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a5a90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c5b30"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c5b30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408ce770"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408a77b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408b01a8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408b01a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40dee8f0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408a8db8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d2b9d8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d2b9d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d223a0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408d8aa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ddaf18"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x408bfab8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40deb5a8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x408d28e8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40dedf10"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x408c52d8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x408cff00"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x408cff00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d03620"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408e4110"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40dda8e0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408ce770"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40d03ec8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x408d5df0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x408e4730"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x408e4730"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40dfe858"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408c9010"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408ced00"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408ced00"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d2e918"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x40e186f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408d03e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40debdf8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x408cf3e0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x408cf3e0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40dadb40"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e1b5a0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x408cfb68"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x408cfb68"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40dac320"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40e19700"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c3c140"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40e1b938"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d03620"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40d03620"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d25010"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e1a1f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d2e468"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d2e468"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d25e38"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40e1a670"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40922ce8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40922ce8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x4093aa00"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x40e19e40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x408dde18"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x408dde18"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x408f5b78"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e18db8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40545df8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ddaf18"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40dd79c0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408e6860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dad090"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40dad090"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40da7e58"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x40dadb40"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40da69b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40dda8e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40dd6600"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408cf010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40dad770"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40dad770"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x40da65e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40d03ec8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40d258b8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408d03e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dae9a0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40dae9a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40da7718"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x40dac320"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40da5160"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40dfe858"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40dfdcb0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d2e918"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d24328"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40dd79c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408ded20"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408ded20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408dcda0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40dacaf8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d78300"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d78300"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d75938"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d78a70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dfe158"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40dfe158"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40dfd010"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40dfd010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d94d98"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d94d98"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40dd9df0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40dd9df0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408dd360"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408dd360"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408f5440"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40dac748"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40dda518"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40dda518"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40dd75a0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40dd75a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d77d68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d77d68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d903d8"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d93688"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408dda60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408dda60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cc60b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40cc60b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cc1010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408f4388"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4092a168"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4092a168"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4093a2c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x408ee4a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40929ce0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40929ce0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40939a40"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x408eeee8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40c31af8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x408eeee8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40cc96c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40cc96c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40cc2588"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40c31af8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40c42720"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x408ea538"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x40c2e010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x40c2e010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c42c18"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x408eacf8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40c2e728"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40c2e728"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40c413b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x408e93b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d03620"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x409004b0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d2e468"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40903210"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40d84948"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40d84948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40d80478"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x408fdcb0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40d87608"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40d87608"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b1e100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40903658"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40545df8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x408fce88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x408fc678"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x40902da0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x4093cb70"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x409385a0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x409373d8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x409975d8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x409975d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a8ee78"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40935de0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40999e90"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40999e90"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40463a98"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40934840"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40a88cd0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a88cd0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x40464670"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40933300"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x40a86128"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40a86128"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x40465c08"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40933d80"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x40aa4188"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40aa4188"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x40ab69b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40946aa8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bfd918"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40bfd918"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad4340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40947978"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x40bfb010"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40bfb010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40947d90"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x40bfba18"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40bfba18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40946688"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x40bfc880"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40bfc880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40946268"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x40bfbd70"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40bfbd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40948bc8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x40bf6db8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40bf6db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4094e180"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x40bf5f18"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40bf5f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4094e688"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x40bf4368"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40bf4368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4094eba8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x40bf8e50"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40bf8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4094b0d8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40bf72b0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40bf72b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40949468"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x40bf1a00"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40bf1a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4094b5e8"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x40bf6880"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40bf6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x4094bae0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x40bf76e8"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40bf76e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x40945b20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c11060"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c11060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad4340"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x40945270"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c28798"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c28798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad4340"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4094dd98"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c3c140"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x4095cdf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x4095c610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40997010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409937f8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409937f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a8fbb0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a8ee78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x411927c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x411927c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4118b0a0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x41188de0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4118e558"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4118e558"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41182560"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4118ab90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a2f928"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a2f928"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a5be60"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41180010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409a67e8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x409a67e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409af010"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x4117d2d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x409b5998"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x409ba818"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x409ac370"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x409b66a8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x409cb078"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409b5998"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x409c9010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409b5998"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x409c7c08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409b5998"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x409c5830"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x409c23d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407e8010"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a13220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409a67e8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40a6c0e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a4b3a0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a4b3a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a48b30"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a47d50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409a67e8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40a89890"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x404682f0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40a882e8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x40478ea8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x409994b8"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40473ce8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40a87730"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x404748e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40aa2a28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40a97f00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40aa4898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40ab8648"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x40aa15a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x409b66a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40ab8c40"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x4058a168"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x40ab20a0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x409994b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x40ab18a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x40bfcbd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40bf56a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x40bf5ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40befcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40bf0b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40bfb6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bf02b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40bf6010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x40bf2468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40bfc010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad4a90"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad4a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad19a8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40bfa4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40bfa840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40bfac18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40bf06e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40bf7b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40bef880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40bef010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x40bf28a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40bf1e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40bf47a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40bee190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40bfc528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x40bf8a18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40bf6448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40bf5270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40bf8010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x40bf86c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40bf15c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40bfa190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40bf1190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x40bef448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40bf2cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40bfb368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x40bf2030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40bf4bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40bf8368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40beea68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40acec28"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40acc6a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x40ad2600"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40acce48"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ad4340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ace1f8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40aef630"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x40aed308"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b20e40"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40b20e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b1e100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40aefa70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b1fbe8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b1fbe8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bc7570"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40aeea80"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40bc5330"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40bc5330"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40b32d48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40aeadc8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40bc5668"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40bc5668"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40b2e648"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40aedab0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40545df8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x40ae6818"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40b1e100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b1b758"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40b2e648"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40b29d10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40b32d48"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40b29370"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b1f8b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b329c8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b329c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b29010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x40bc7d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b2ed98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40bc4488"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40463a98"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40b2e010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40b296f8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b2ed98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b28488"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40b4b158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b9fd40"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b9fd40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411ee630"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b4b860"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40bcb898"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40bcb898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411ed230"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40b3d4d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40b2ae40"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40b2ae40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40b7d1c8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40b4bce0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403d88a8"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40b4e1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40b78898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403d88a8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40b7b010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40463a98"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40b7b9e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x404624b0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40b7a4a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40462ea8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40b7ae88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x404618e0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40bcb490"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x411eed70"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411ed6f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40bcbd48"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x411edb18"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x411ef600"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x411ec190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40c0ae38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x40c0f368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40c0c4b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40c09cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x40c08190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40c02448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40c032b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40c0fd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c05a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40c0cd28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40c0a5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x40c07b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40c085c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40c11718"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad4a90"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40c0eb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40c0eef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40c0d308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c05e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40c0e4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40c0a190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40c0c8f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40c0f010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40c02010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40c036e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x40c06010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40c055c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40c08e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40c02880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40c11c30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x40c0c080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40c0aa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40c08a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40c09468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40c0f6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40c098a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40c0d660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x40c0dd10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40c05190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40c06cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40c0e840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c06880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x40c03b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40c06448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40c0fa18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x40c076e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40c0e190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40c072b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40c0d9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40c01190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40c215c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x40c27a40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40c23b68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40c20448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x40c20880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40c1ab20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40c1ba00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40c264e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c1b190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40c22448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40c22cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x40c1d2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40c20cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40c28e50"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad4a90"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40c24260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40c245b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40c24990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c1b5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40c26b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40c22880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40c22010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40c276e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40c1a6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40c1be38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x40c1d6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40c1ccb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40c1e5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40c19010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40c27390"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x40c23730"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40c21190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40c1e190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40c21b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40c27d98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40c20010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40c24ce8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x40c233d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40c1c880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40c1c448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40c26ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c1c010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x40c1a2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40c1db20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40c26190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x40c1ee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40c26840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40c1ea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40c23080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40c198e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x40c2d7f8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40c41ca8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x40c2dc60"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40c401b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x40c40778"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x409975d8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40c64d58"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x409994b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40c63830"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40999e90"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40c5f2f0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x40a87730"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40c646e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x40aa2a28"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40c5fd30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cb26e0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40cb26e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad4340"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40c5e4a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40cb2d98"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40cb2d98"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad4a90"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40c5dc48"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40cb1350"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40cb1350"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40c5c098"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40cb0190"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40cb0190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40c5c4c8"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40cb04e8"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40cb04e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40c5c8f8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40caf260"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40caf260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40c5d760"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40caccb8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40caccb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40c5ea68"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40ccf8e8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40ccf8e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c5d258"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40cd1190"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40cd1190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40c5cd38"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40cac010"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40cac010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40c5b7b0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40caa010"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40caa010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40c5bcd0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40caa448"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40caa448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40c5b370"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x40cad080"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40cad080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40c5abc8"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x40cd06e8"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40cd06e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40c5a220"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40cd1a00"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40cd1a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40c5a6e8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40cd1e38"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40cd1e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40c55970"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40cc9b60"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40cc9b60"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40cc2a28"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40c3e188"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d03620"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c3e9c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d2e468"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c67088"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d2d010"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c64010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d28218"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d28218"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d20af8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c55e98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40545df8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40cab5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x40cb1a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40cadb68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x40caa880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40cd0b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40cac448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x40cd32b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40caacb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40caf5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40caf990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40cd15c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40cb0b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40cac880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40cb16a8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x40cd36e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40cd2cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40ca95c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40ccf010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x40cad730"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40cab190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40ca9190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40cabb00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40cb1d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40cafce8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x40cad3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40cd2880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40cd2448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40cb0ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40cd2010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x40cd02b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40cd3b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x40ca9e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40cb0840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40ca9a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40cc6550"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40cc14a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ce2398"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40545df8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40cc1880"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40999e90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40cc0300"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x40a89890"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40cc0d10"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x40a882e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40cbf7e8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x40aa4898"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40cbfea8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d01328"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d01328"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad4340"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40cea668"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40d6eb20"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40d6eb20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40ce9268"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40d4ca18"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40d4ca18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40ceadf0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40d4b190"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40d4b190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40ce96a0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d03620"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ce9ee0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d2e468"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40ce7520"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d2d010"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40ce83a0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40922ce8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40ce4168"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40d47b00"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40d47b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40ce4688"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40d46010"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40d46010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40ce6ca0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x40d4b8c0"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40d4b8c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40ce3510"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x40d6e6e8"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40d6e6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40ce4b50"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40d6f5c8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40d6f5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40ce3030"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40d6fa00"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40d6fa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40ce3a10"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40d6f190"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40d6f190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40ce3ef8"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40d01ef8"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40d01ef8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40cdb570"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d54428"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a2f928"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40d1fa58"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40d26a60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40d1e4c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40780310"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d527d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407751b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40d47190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x40d4d5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40d497a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x40d46448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40d4c010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40d70cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40d48030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40d488a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x40d73e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40d46880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40d019e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad4a90"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40d4cd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40d4b568"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40d4c6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40d48468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40d49bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40d4d260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40d6e2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x40d712b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40d70880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40d73190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x40d49368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40d48cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40d46cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40d476c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40d4d910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x40d49010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40d70448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40d70010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40d71b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x40d6fe38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40d716e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40d4dc68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x40d73a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40d4c368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40d735c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40ad2600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40d4bc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40d6d430"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40d84088"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40d83b10"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40d88da8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d835f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40da1430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d78a70"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40da1b00"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40d74738"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40d74738"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b1e100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40da0350"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40d84948"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40da07f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d2e468"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40d93260"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40d90800"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d8f010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40d93688"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d8f3d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d2e468"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40da5550"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40dacaf8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40da5cb8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40dac748"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40da4060"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40d03620"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40da4880"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d2e468"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40da4d58"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40da8cd8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x40dc23c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40dd95a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40dd56a8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40dd56a8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b1e100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40dfa510"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408ce770"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4126b2c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41267c20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4126b960"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408969d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e61b68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4126a010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4126a010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408a77b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40eaf790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4126ac08"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4126ac08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a5a90"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41264340"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e7fda8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x412649d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408a77b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40e7fda8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e79da0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e85598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4089e670"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e85c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408a77b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e84850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408969d0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x40e84f28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x40e83370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:./radioprintf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x40ea4990"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010/06/29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010/06/29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010/06/29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010/06/29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010/06/29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TestMicrophoneAppC.I2CPot" loc="43(TestMicrophoneAppC.I2CPot):/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010/06/29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="75(Atm128I2CMasterP.Master):/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010/06/29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010/06/29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicrophoneC" loc="1:MicrophoneC.nc">
      <module/>
    </component>
    <component qname="TestMicrophoneAppC.MicWarnupTimerC" loc="44(TestMicrophoneAppC.MicWarnupTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4078e8f8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestMicrophoneC" loc="2:TestMicrophoneC.nc">
      <documentation loc="23:./radioprintf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1 $&#10; @date $Date: 2008/02/21 11:11:17 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC" loc="44:./radioprintf/PrintfC.nc">
      <documentation loc="23:./radioprintf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1 $&#10; @date $Date: 2008/02/21 11:11:17 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="59:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010/06/29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.3 $ $Date: 2010/06/29 22:07:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.8 $ $Date: 2009/10/28 16:18:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010/06/29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="TOne" ref="0x403c53d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="TOne" ref="0x403c53d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="TOne" ref="0x403c53d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x403c58d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="TOne" ref="0x403c53d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010/06/29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010/06/29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008/06/26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008/06/26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008/06/23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010/06/29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010/06/29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010/06/29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010/06/29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.22 $ $Date: 2009/10/28 21:09:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010/06/29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010/06/29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.AMSenderC" loc="47(PrintfC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.AMSenderC.SenderC" loc="47(PrintfC.AMSenderC.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.AMSenderC.SenderC.AMQueueEntryP" loc="43(PrintfC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="54:./radioprintf/PrintfP.nc">
      <module/>
    </component>
    <component qname="PrintfC.Timer" loc="44(PrintfC.Timer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40483dc8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40480010" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40480228" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40490238" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40490460" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40490688" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40490878" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404dd3d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404dd5f8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404dd820" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404dda10" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x405884d0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x405886f8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x40588920" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40588b10" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40606e98" loc="89:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x406425a0" loc="42:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40645ca8" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x406984e8" loc="89:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010/06/29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x406a86f0" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4078e8f8" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4078e8f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4078eab8" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4079dbf8" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4079dbf8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4079ddb8" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40781ab0" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40781ab0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40839010" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40839010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x408391f0" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40877840" loc="46:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40877840"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010/06/29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40a12478" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40a12478"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40a12698" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40a2a428" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40a2a428"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40a2a870" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40a2a870"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40a2aa30" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40a46228" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40a46228"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40a46670" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40a46670"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40a4c618" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40a4c618"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40a4ca78" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40a4ca78"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40a4cce0" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40a4cce0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40a59168" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40a59168"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40a593d0" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40a59858" loc="60:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40a59858"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40a69158" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40a69158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40a695b8" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40a695b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40a69820" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40a69820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40a69c90" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40a69c90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40a69ef8" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40ba1c38" loc="83:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e63cb8" loc="47:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e5b0b8" loc="47:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40e59b90" loc="43:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40e78340" loc="45:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x4044c258" loc="58:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4044c258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044c430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404415f0" loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404415f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404417c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40451b20" loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40451b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40451cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4044cb48" loc="46:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4044cb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404513c0" loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404513c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40451598"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40451678"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40451758"/>
        <function-ref name="actualMicro" scoped="" ref="0x40451838"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40451918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x4044f288" loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x4044f288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044f460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4044ae90" loc="44:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4044ae90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044f080"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x4044f690" loc="46:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x4044f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044f868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40449d90" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40449d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40454010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404499c0" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404499c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40449b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4045b8f8" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4045b8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045bad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x40457ef8" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x40457ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x4045b1c0"/>
        <function-ref name="toggle" scoped="" ref="0x4045b2a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4045b380"/>
        <function-ref name="get" scoped="" ref="0x4045b460"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045b540"/>
        <function-ref name="set" scoped="" ref="0x4045b620"/>
        <function-ref name="clr" scoped="" ref="0x4045b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404549c0" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404549c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40454b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4047b4b0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4047b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b888"/>
        <function-ref name="isInput" scoped="" ref="0x4047b968"/>
        <function-ref name="toggle" scoped="" ref="0x4047ba48"/>
        <function-ref name="isOutput" scoped="" ref="0x4047bb28"/>
        <function-ref name="get" scoped="" ref="0x4047bc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047bce8"/>
        <function-ref name="set" scoped="" ref="0x4047bdc8"/>
        <function-ref name="clr" scoped="" ref="0x4047bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x4046ca28" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x4046ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046cc00"/>
        <function-ref name="isInput" scoped="" ref="0x4046cce0"/>
        <function-ref name="toggle" scoped="" ref="0x4046cdc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046cea0"/>
        <function-ref name="get" scoped="" ref="0x4046b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b0f0"/>
        <function-ref name="set" scoped="" ref="0x4046b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4046b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404790a0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404790a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479278"/>
        <function-ref name="isInput" scoped="" ref="0x40479358"/>
        <function-ref name="toggle" scoped="" ref="0x40479438"/>
        <function-ref name="isOutput" scoped="" ref="0x40479518"/>
        <function-ref name="get" scoped="" ref="0x404795f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404796d8"/>
        <function-ref name="set" scoped="" ref="0x404797b8"/>
        <function-ref name="clr" scoped="" ref="0x40479898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x4047e210" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x4047e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4047e4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4047e5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e688"/>
        <function-ref name="get" scoped="" ref="0x4047e768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e848"/>
        <function-ref name="set" scoped="" ref="0x4047e928"/>
        <function-ref name="clr" scoped="" ref="0x4047ea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x40464670" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x40464670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464848"/>
        <function-ref name="isInput" scoped="" ref="0x40464928"/>
        <function-ref name="toggle" scoped="" ref="0x40464a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40464ae8"/>
        <function-ref name="get" scoped="" ref="0x40464bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40464ca8"/>
        <function-ref name="set" scoped="" ref="0x40464d88"/>
        <function-ref name="clr" scoped="" ref="0x40464e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40475ce8" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40475ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475ec0"/>
        <function-ref name="isInput" scoped="" ref="0x4047f010"/>
        <function-ref name="toggle" scoped="" ref="0x4047f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f1d0"/>
        <function-ref name="get" scoped="" ref="0x4047f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f390"/>
        <function-ref name="set" scoped="" ref="0x4047f470"/>
        <function-ref name="clr" scoped="" ref="0x4047f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40463a98" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40463a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463c70"/>
        <function-ref name="isInput" scoped="" ref="0x40463d50"/>
        <function-ref name="toggle" scoped="" ref="0x40463e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40463f10"/>
        <function-ref name="get" scoped="" ref="0x40462010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404620f0"/>
        <function-ref name="set" scoped="" ref="0x404621d0"/>
        <function-ref name="clr" scoped="" ref="0x404622b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x40466210" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x40466210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404663e8"/>
        <function-ref name="isInput" scoped="" ref="0x404664c8"/>
        <function-ref name="toggle" scoped="" ref="0x404665a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40466688"/>
        <function-ref name="get" scoped="" ref="0x40466768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40466848"/>
        <function-ref name="set" scoped="" ref="0x40466928"/>
        <function-ref name="clr" scoped="" ref="0x40466a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404748e0" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404748e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40474ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40474b98"/>
        <function-ref name="toggle" scoped="" ref="0x40474c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40474d58"/>
        <function-ref name="get" scoped="" ref="0x40474e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474f18"/>
        <function-ref name="set" scoped="" ref="0x40473010"/>
        <function-ref name="clr" scoped="" ref="0x404730f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40478ea8" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40478ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404760c0"/>
        <function-ref name="isInput" scoped="" ref="0x404761a0"/>
        <function-ref name="toggle" scoped="" ref="0x40476280"/>
        <function-ref name="isOutput" scoped="" ref="0x40476360"/>
        <function-ref name="get" scoped="" ref="0x40476440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476520"/>
        <function-ref name="set" scoped="" ref="0x40476600"/>
        <function-ref name="clr" scoped="" ref="0x404766e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x4045d2f0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x4045d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045d4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4045d5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4045d688"/>
        <function-ref name="isOutput" scoped="" ref="0x4045d768"/>
        <function-ref name="get" scoped="" ref="0x4045d848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045d928"/>
        <function-ref name="set" scoped="" ref="0x4045da08"/>
        <function-ref name="clr" scoped="" ref="0x4045dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404618e0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404618e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40461ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40461b98"/>
        <function-ref name="toggle" scoped="" ref="0x40461c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40461d58"/>
        <function-ref name="get" scoped="" ref="0x40461e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40461f18"/>
        <function-ref name="set" scoped="" ref="0x4046a010"/>
        <function-ref name="clr" scoped="" ref="0x4046a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4046e0a0" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4046e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e278"/>
        <function-ref name="isInput" scoped="" ref="0x4046e358"/>
        <function-ref name="toggle" scoped="" ref="0x4046e438"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e518"/>
        <function-ref name="get" scoped="" ref="0x4046e5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046e6d8"/>
        <function-ref name="set" scoped="" ref="0x4046e7b8"/>
        <function-ref name="clr" scoped="" ref="0x4046e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40472750" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40472750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472928"/>
        <function-ref name="isInput" scoped="" ref="0x40472a08"/>
        <function-ref name="toggle" scoped="" ref="0x40472ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40472bc8"/>
        <function-ref name="get" scoped="" ref="0x40472ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40472d88"/>
        <function-ref name="set" scoped="" ref="0x40472e68"/>
        <function-ref name="clr" scoped="" ref="0x40471010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x4047c0a0" loc="97:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x4047c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c278"/>
        <function-ref name="isInput" scoped="" ref="0x4047c358"/>
        <function-ref name="toggle" scoped="" ref="0x4047c438"/>
        <function-ref name="isOutput" scoped="" ref="0x4047c518"/>
        <function-ref name="get" scoped="" ref="0x4047c5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047c6d8"/>
        <function-ref name="set" scoped="" ref="0x4047c7b8"/>
        <function-ref name="clr" scoped="" ref="0x4047c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x40485590" loc="103:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x40485590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485768"/>
        <function-ref name="isInput" scoped="" ref="0x40485848"/>
        <function-ref name="toggle" scoped="" ref="0x40485928"/>
        <function-ref name="isOutput" scoped="" ref="0x40485a08"/>
        <function-ref name="get" scoped="" ref="0x40485ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485bc8"/>
        <function-ref name="set" scoped="" ref="0x40485ca8"/>
        <function-ref name="clr" scoped="" ref="0x40485d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40471c08" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40471c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471de0"/>
        <function-ref name="isInput" scoped="" ref="0x40471ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40470010"/>
        <function-ref name="isOutput" scoped="" ref="0x404700f0"/>
        <function-ref name="get" scoped="" ref="0x404701d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404702b0"/>
        <function-ref name="set" scoped="" ref="0x40470390"/>
        <function-ref name="clr" scoped="" ref="0x40470470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x40465210" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x40465210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404653e8"/>
        <function-ref name="isInput" scoped="" ref="0x404654c8"/>
        <function-ref name="toggle" scoped="" ref="0x404655a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40465688"/>
        <function-ref name="get" scoped="" ref="0x40465768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40465848"/>
        <function-ref name="set" scoped="" ref="0x40465928"/>
        <function-ref name="clr" scoped="" ref="0x40465a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40469830" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40469830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469a08"/>
        <function-ref name="isInput" scoped="" ref="0x40469ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40469bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40469ca8"/>
        <function-ref name="get" scoped="" ref="0x40469d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469e68"/>
        <function-ref name="set" scoped="" ref="0x40468010"/>
        <function-ref name="clr" scoped="" ref="0x404680f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4047a0c0" loc="101:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4047a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a298"/>
        <function-ref name="isInput" scoped="" ref="0x4047a378"/>
        <function-ref name="toggle" scoped="" ref="0x4047a458"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a538"/>
        <function-ref name="get" scoped="" ref="0x4047a618"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a6f8"/>
        <function-ref name="set" scoped="" ref="0x4047a7d8"/>
        <function-ref name="clr" scoped="" ref="0x4047a8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40468ce8" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40468ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40467010"/>
        <function-ref name="toggle" scoped="" ref="0x404670f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404671d0"/>
        <function-ref name="get" scoped="" ref="0x404672b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40467390"/>
        <function-ref name="set" scoped="" ref="0x40467470"/>
        <function-ref name="clr" scoped="" ref="0x40467550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x4046b4b0" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x4046b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b688"/>
        <function-ref name="isInput" scoped="" ref="0x4046b768"/>
        <function-ref name="toggle" scoped="" ref="0x4046b848"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b928"/>
        <function-ref name="get" scoped="" ref="0x4046ba08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046bae8"/>
        <function-ref name="set" scoped="" ref="0x4046bbc8"/>
        <function-ref name="clr" scoped="" ref="0x4046bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x40479a98" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x40479a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479c70"/>
        <function-ref name="isInput" scoped="" ref="0x40479d50"/>
        <function-ref name="toggle" scoped="" ref="0x40479e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40479f10"/>
        <function-ref name="get" scoped="" ref="0x40478010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404780f0"/>
        <function-ref name="set" scoped="" ref="0x404781d0"/>
        <function-ref name="clr" scoped="" ref="0x404782b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x4047ec08" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x4047ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047ede0"/>
        <function-ref name="isInput" scoped="" ref="0x4047eec0"/>
        <function-ref name="toggle" scoped="" ref="0x4047d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4047d0f0"/>
        <function-ref name="get" scoped="" ref="0x4047d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047d2b0"/>
        <function-ref name="set" scoped="" ref="0x4047d390"/>
        <function-ref name="clr" scoped="" ref="0x4047d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x404630a0" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x404630a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463278"/>
        <function-ref name="isInput" scoped="" ref="0x40463358"/>
        <function-ref name="toggle" scoped="" ref="0x40463438"/>
        <function-ref name="isOutput" scoped="" ref="0x40463518"/>
        <function-ref name="get" scoped="" ref="0x404635f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404636d8"/>
        <function-ref name="set" scoped="" ref="0x404637b8"/>
        <function-ref name="clr" scoped="" ref="0x40463898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404624b0" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404624b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40462688"/>
        <function-ref name="isInput" scoped="" ref="0x40462768"/>
        <function-ref name="toggle" scoped="" ref="0x40462848"/>
        <function-ref name="isOutput" scoped="" ref="0x40462928"/>
        <function-ref name="get" scoped="" ref="0x40462a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462ae8"/>
        <function-ref name="set" scoped="" ref="0x40462bc8"/>
        <function-ref name="clr" scoped="" ref="0x40462ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x40466c08" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x40466c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40466de0"/>
        <function-ref name="isInput" scoped="" ref="0x40466ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4046f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f0f0"/>
        <function-ref name="get" scoped="" ref="0x4046f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f2b0"/>
        <function-ref name="set" scoped="" ref="0x4046f390"/>
        <function-ref name="clr" scoped="" ref="0x4046f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404732f0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404732f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404734c8"/>
        <function-ref name="isInput" scoped="" ref="0x404735a8"/>
        <function-ref name="toggle" scoped="" ref="0x40473688"/>
        <function-ref name="isOutput" scoped="" ref="0x40473768"/>
        <function-ref name="get" scoped="" ref="0x40473848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473928"/>
        <function-ref name="set" scoped="" ref="0x40473a08"/>
        <function-ref name="clr" scoped="" ref="0x40473ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404768e0" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404768e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40476b98"/>
        <function-ref name="toggle" scoped="" ref="0x40476c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40476d58"/>
        <function-ref name="get" scoped="" ref="0x40476e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476f18"/>
        <function-ref name="set" scoped="" ref="0x40475010"/>
        <function-ref name="clr" scoped="" ref="0x404750f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x4045dce8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x4045dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045dec0"/>
        <function-ref name="isInput" scoped="" ref="0x4045c010"/>
        <function-ref name="toggle" scoped="" ref="0x4045c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4045c1d0"/>
        <function-ref name="get" scoped="" ref="0x4045c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045c390"/>
        <function-ref name="set" scoped="" ref="0x4045c470"/>
        <function-ref name="clr" scoped="" ref="0x4045c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x4046a2f0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x4046a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a548"/>
        <function-ref name="isInput" scoped="" ref="0x4046a628"/>
        <function-ref name="toggle" scoped="" ref="0x4046a708"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a7e8"/>
        <function-ref name="get" scoped="" ref="0x4046a8c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a9a8"/>
        <function-ref name="set" scoped="" ref="0x4046aa88"/>
        <function-ref name="clr" scoped="" ref="0x4046ab68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4046ea98" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4046ea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046ec70"/>
        <function-ref name="isInput" scoped="" ref="0x4046ed50"/>
        <function-ref name="toggle" scoped="" ref="0x4046ee30"/>
        <function-ref name="isOutput" scoped="" ref="0x4046ef10"/>
        <function-ref name="get" scoped="" ref="0x4046d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046d0f0"/>
        <function-ref name="set" scoped="" ref="0x4046d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4046d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4047ca98" loc="98:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4047ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047cc70"/>
        <function-ref name="isInput" scoped="" ref="0x4047cd50"/>
        <function-ref name="toggle" scoped="" ref="0x4047ce30"/>
        <function-ref name="isOutput" scoped="" ref="0x4047cf10"/>
        <function-ref name="get" scoped="" ref="0x4047b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b0f0"/>
        <function-ref name="set" scoped="" ref="0x4047b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4047b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4046dea8" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4046dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c208"/>
        <function-ref name="isInput" scoped="" ref="0x4046c2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4046c3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046c4a8"/>
        <function-ref name="get" scoped="" ref="0x4046c588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046c668"/>
        <function-ref name="set" scoped="" ref="0x4046c748"/>
        <function-ref name="clr" scoped="" ref="0x4046c828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x40470670" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x40470670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470848"/>
        <function-ref name="isInput" scoped="" ref="0x40470928"/>
        <function-ref name="toggle" scoped="" ref="0x40470a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40470ae8"/>
        <function-ref name="get" scoped="" ref="0x40470bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470ca8"/>
        <function-ref name="set" scoped="" ref="0x40470d88"/>
        <function-ref name="clr" scoped="" ref="0x40470e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x4047f750" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x4047f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f928"/>
        <function-ref name="isInput" scoped="" ref="0x4047fa08"/>
        <function-ref name="toggle" scoped="" ref="0x4047fae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047fbc8"/>
        <function-ref name="get" scoped="" ref="0x4047fca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047fd88"/>
        <function-ref name="set" scoped="" ref="0x4047fe68"/>
        <function-ref name="clr" scoped="" ref="0x4047e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40484010" loc="104:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40484010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404841e8"/>
        <function-ref name="isInput" scoped="" ref="0x404842c8"/>
        <function-ref name="toggle" scoped="" ref="0x404843a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40484488"/>
        <function-ref name="get" scoped="" ref="0x40484568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40484648"/>
        <function-ref name="set" scoped="" ref="0x40484728"/>
        <function-ref name="clr" scoped="" ref="0x40484808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x40465c08" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x40465c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40465de0"/>
        <function-ref name="isInput" scoped="" ref="0x40465ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40464010"/>
        <function-ref name="isOutput" scoped="" ref="0x404640f0"/>
        <function-ref name="get" scoped="" ref="0x404641d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404642b0"/>
        <function-ref name="set" scoped="" ref="0x40464390"/>
        <function-ref name="clr" scoped="" ref="0x40464470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404682f0" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404684c8"/>
        <function-ref name="isInput" scoped="" ref="0x404685a8"/>
        <function-ref name="toggle" scoped="" ref="0x40468688"/>
        <function-ref name="isOutput" scoped="" ref="0x40468768"/>
        <function-ref name="get" scoped="" ref="0x40468848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468928"/>
        <function-ref name="set" scoped="" ref="0x40468a08"/>
        <function-ref name="clr" scoped="" ref="0x40468ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404752f0" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404754c8"/>
        <function-ref name="isInput" scoped="" ref="0x404755a8"/>
        <function-ref name="toggle" scoped="" ref="0x40475688"/>
        <function-ref name="isOutput" scoped="" ref="0x40475768"/>
        <function-ref name="get" scoped="" ref="0x40475848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475928"/>
        <function-ref name="set" scoped="" ref="0x40475a08"/>
        <function-ref name="clr" scoped="" ref="0x40475ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x40467750" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x40467750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40467928"/>
        <function-ref name="isInput" scoped="" ref="0x40467a08"/>
        <function-ref name="toggle" scoped="" ref="0x40467ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40467bc8"/>
        <function-ref name="get" scoped="" ref="0x40467ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40467d88"/>
        <function-ref name="set" scoped="" ref="0x40467e68"/>
        <function-ref name="clr" scoped="" ref="0x40466010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x4046bea8" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x4046bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404740c0"/>
        <function-ref name="isInput" scoped="" ref="0x404741a0"/>
        <function-ref name="toggle" scoped="" ref="0x40474280"/>
        <function-ref name="isOutput" scoped="" ref="0x40474360"/>
        <function-ref name="get" scoped="" ref="0x40474440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474520"/>
        <function-ref name="set" scoped="" ref="0x40474600"/>
        <function-ref name="clr" scoped="" ref="0x404746e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404784b0" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404784b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478688"/>
        <function-ref name="isInput" scoped="" ref="0x40478768"/>
        <function-ref name="toggle" scoped="" ref="0x40478848"/>
        <function-ref name="isOutput" scoped="" ref="0x40478928"/>
        <function-ref name="get" scoped="" ref="0x40478a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478ae8"/>
        <function-ref name="set" scoped="" ref="0x40478bc8"/>
        <function-ref name="clr" scoped="" ref="0x40478ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x4047d670" loc="96:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x4047d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047d848"/>
        <function-ref name="isInput" scoped="" ref="0x4047d928"/>
        <function-ref name="toggle" scoped="" ref="0x4047da08"/>
        <function-ref name="isOutput" scoped="" ref="0x4047dae8"/>
        <function-ref name="get" scoped="" ref="0x4047dbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047dca8"/>
        <function-ref name="set" scoped="" ref="0x4047dd88"/>
        <function-ref name="clr" scoped="" ref="0x4047de68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404538d8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404538d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453ab0"/>
        <function-ref name="isInput" scoped="" ref="0x40453b90"/>
        <function-ref name="toggle" scoped="" ref="0x40453c70"/>
        <function-ref name="isOutput" scoped="" ref="0x40453d50"/>
        <function-ref name="get" scoped="" ref="0x40453e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453f10"/>
        <function-ref name="set" scoped="" ref="0x4045d010"/>
        <function-ref name="clr" scoped="" ref="0x4045d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40462ea8" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40462ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404610c0"/>
        <function-ref name="isInput" scoped="" ref="0x404611a0"/>
        <function-ref name="toggle" scoped="" ref="0x40461280"/>
        <function-ref name="isOutput" scoped="" ref="0x40461360"/>
        <function-ref name="get" scoped="" ref="0x40461440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40461520"/>
        <function-ref name="set" scoped="" ref="0x40461600"/>
        <function-ref name="clr" scoped="" ref="0x404616e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4046f670" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4046f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f848"/>
        <function-ref name="isInput" scoped="" ref="0x4046f928"/>
        <function-ref name="toggle" scoped="" ref="0x4046fa08"/>
        <function-ref name="isOutput" scoped="" ref="0x4046fae8"/>
        <function-ref name="get" scoped="" ref="0x4046fbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046fca8"/>
        <function-ref name="set" scoped="" ref="0x4046fd88"/>
        <function-ref name="clr" scoped="" ref="0x4046fe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40473ce8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40473ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40473ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40472010"/>
        <function-ref name="toggle" scoped="" ref="0x404720f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404721d0"/>
        <function-ref name="get" scoped="" ref="0x404722b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40472390"/>
        <function-ref name="set" scoped="" ref="0x40472470"/>
        <function-ref name="clr" scoped="" ref="0x40472550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4047aab8" loc="102:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4047aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047ac90"/>
        <function-ref name="isInput" scoped="" ref="0x4047ad70"/>
        <function-ref name="toggle" scoped="" ref="0x4047ae50"/>
        <function-ref name="isOutput" scoped="" ref="0x40485010"/>
        <function-ref name="get" scoped="" ref="0x404850f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404851d0"/>
        <function-ref name="set" scoped="" ref="0x404852b0"/>
        <function-ref name="clr" scoped="" ref="0x40485390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x40471210" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x40471210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404713e8"/>
        <function-ref name="isInput" scoped="" ref="0x404714c8"/>
        <function-ref name="toggle" scoped="" ref="0x404715a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40471688"/>
        <function-ref name="get" scoped="" ref="0x40471768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40471848"/>
        <function-ref name="set" scoped="" ref="0x40471928"/>
        <function-ref name="clr" scoped="" ref="0x40471a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4046d4b0" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4046d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046d688"/>
        <function-ref name="isInput" scoped="" ref="0x4046d768"/>
        <function-ref name="toggle" scoped="" ref="0x4046d848"/>
        <function-ref name="isOutput" scoped="" ref="0x4046d928"/>
        <function-ref name="get" scoped="" ref="0x4046da08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046dae8"/>
        <function-ref name="set" scoped="" ref="0x4046dbc8"/>
        <function-ref name="clr" scoped="" ref="0x4046dca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x4045c750" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x4045c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045c928"/>
        <function-ref name="isInput" scoped="" ref="0x4045ca08"/>
        <function-ref name="toggle" scoped="" ref="0x4045cae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045cbc8"/>
        <function-ref name="get" scoped="" ref="0x4045cca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045cd88"/>
        <function-ref name="set" scoped="" ref="0x4045ce68"/>
        <function-ref name="clr" scoped="" ref="0x40465010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x4046ad68" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x4046ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469010"/>
        <function-ref name="isInput" scoped="" ref="0x404690f0"/>
        <function-ref name="toggle" scoped="" ref="0x404691d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404692b0"/>
        <function-ref name="get" scoped="" ref="0x40469390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469470"/>
        <function-ref name="set" scoped="" ref="0x40469550"/>
        <function-ref name="clr" scoped="" ref="0x40469630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404af4f0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404af4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404af6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404af7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404af888"/>
        <function-ref name="isOutput" scoped="" ref="0x404af968"/>
        <function-ref name="get" scoped="" ref="0x404afa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404afb28"/>
        <function-ref name="set" scoped="" ref="0x404afc08"/>
        <function-ref name="clr" scoped="" ref="0x404afce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404ad170" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404ad170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad348"/>
        <function-ref name="isInput" scoped="" ref="0x404ad428"/>
        <function-ref name="toggle" scoped="" ref="0x404ad508"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad5e8"/>
        <function-ref name="get" scoped="" ref="0x404ad6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ad7a8"/>
        <function-ref name="set" scoped="" ref="0x404ad888"/>
        <function-ref name="clr" scoped="" ref="0x404ad968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404a4228" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404a4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a4400"/>
        <function-ref name="isInput" scoped="" ref="0x404a44e0"/>
        <function-ref name="toggle" scoped="" ref="0x404a45c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a46a0"/>
        <function-ref name="get" scoped="" ref="0x404a4780"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a4860"/>
        <function-ref name="set" scoped="" ref="0x404a4940"/>
        <function-ref name="clr" scoped="" ref="0x404a4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404afe48" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404afe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae050"/>
        <function-ref name="isInput" scoped="" ref="0x404ae130"/>
        <function-ref name="toggle" scoped="" ref="0x404ae210"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae2f0"/>
        <function-ref name="get" scoped="" ref="0x404ae3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae4b0"/>
        <function-ref name="set" scoped="" ref="0x404ae590"/>
        <function-ref name="clr" scoped="" ref="0x404ae670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404adac8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404adac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404adca0"/>
        <function-ref name="isInput" scoped="" ref="0x404add80"/>
        <function-ref name="toggle" scoped="" ref="0x404ade60"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac010"/>
        <function-ref name="get" scoped="" ref="0x404ac0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac1d0"/>
        <function-ref name="set" scoped="" ref="0x404ac2b0"/>
        <function-ref name="clr" scoped="" ref="0x404ac390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404a4b80" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404a4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a4d58"/>
        <function-ref name="isInput" scoped="" ref="0x404a4e38"/>
        <function-ref name="toggle" scoped="" ref="0x404a4f18"/>
        <function-ref name="isOutput" scoped="" ref="0x404af010"/>
        <function-ref name="get" scoped="" ref="0x404af0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404af1d0"/>
        <function-ref name="set" scoped="" ref="0x404af2b0"/>
        <function-ref name="clr" scoped="" ref="0x404af390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404ae7d0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404ae7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae9a8"/>
        <function-ref name="isInput" scoped="" ref="0x404aea88"/>
        <function-ref name="toggle" scoped="" ref="0x404aeb68"/>
        <function-ref name="isOutput" scoped="" ref="0x404aec48"/>
        <function-ref name="get" scoped="" ref="0x404aed28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aee08"/>
        <function-ref name="set" scoped="" ref="0x404aeee8"/>
        <function-ref name="clr" scoped="" ref="0x404ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404ac4f0" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404ac4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ac7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ac888"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac968"/>
        <function-ref name="get" scoped="" ref="0x404aca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404acb28"/>
        <function-ref name="set" scoped="" ref="0x404acc08"/>
        <function-ref name="clr" scoped="" ref="0x404acce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40edda08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40edda08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eddbe0"/>
        <function-ref name="isInput" scoped="" ref="0x40eddcc0"/>
        <function-ref name="toggle" scoped="" ref="0x40eddda0"/>
        <function-ref name="isOutput" scoped="" ref="0x40edde80"/>
        <function-ref name="get" scoped="" ref="0x40edc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40edc0f0"/>
        <function-ref name="set" scoped="" ref="0x40edc1d0"/>
        <function-ref name="clr" scoped="" ref="0x40edc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40edb538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40edb538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40edb710"/>
        <function-ref name="isInput" scoped="" ref="0x40edb7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40edb8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40edb9b0"/>
        <function-ref name="get" scoped="" ref="0x40edba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40edbb70"/>
        <function-ref name="set" scoped="" ref="0x40edbc50"/>
        <function-ref name="clr" scoped="" ref="0x40edbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed9010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed91e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ed92c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ed93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed9488"/>
        <function-ref name="get" scoped="" ref="0x40ed9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed9648"/>
        <function-ref name="set" scoped="" ref="0x40ed9728"/>
        <function-ref name="clr" scoped="" ref="0x40ed9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed89e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed89e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed8bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ed8ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed8d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed8e60"/>
        <function-ref name="get" scoped="" ref="0x40ed6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed60f0"/>
        <function-ref name="set" scoped="" ref="0x40ed61d0"/>
        <function-ref name="clr" scoped="" ref="0x40ed62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed5538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed5538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed5710"/>
        <function-ref name="isInput" scoped="" ref="0x40ed57f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed58d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed59b0"/>
        <function-ref name="get" scoped="" ref="0x40ed5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed5b70"/>
        <function-ref name="set" scoped="" ref="0x40ed5c50"/>
        <function-ref name="clr" scoped="" ref="0x40ed5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed3010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed31e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ed32c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ed33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed3488"/>
        <function-ref name="get" scoped="" ref="0x40ed3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed3648"/>
        <function-ref name="set" scoped="" ref="0x40ed3728"/>
        <function-ref name="clr" scoped="" ref="0x40ed3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed29e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed29e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed2bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ed2ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed2d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed2e60"/>
        <function-ref name="get" scoped="" ref="0x40ed1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed10f0"/>
        <function-ref name="set" scoped="" ref="0x40ed11d0"/>
        <function-ref name="clr" scoped="" ref="0x40ed12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed0538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed0538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed0710"/>
        <function-ref name="isInput" scoped="" ref="0x40ed07f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed08d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed09b0"/>
        <function-ref name="get" scoped="" ref="0x40ed0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed0b70"/>
        <function-ref name="set" scoped="" ref="0x40ed0c50"/>
        <function-ref name="clr" scoped="" ref="0x40ed0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404b3e48" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404b3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2050"/>
        <function-ref name="isInput" scoped="" ref="0x404b2130"/>
        <function-ref name="toggle" scoped="" ref="0x404b2210"/>
        <function-ref name="isOutput" scoped="" ref="0x404b22f0"/>
        <function-ref name="get" scoped="" ref="0x404b23d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b24b0"/>
        <function-ref name="set" scoped="" ref="0x404b2590"/>
        <function-ref name="clr" scoped="" ref="0x404b2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404b1ac8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404b1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404b1d80"/>
        <function-ref name="toggle" scoped="" ref="0x404b1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0010"/>
        <function-ref name="get" scoped="" ref="0x404b00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b01d0"/>
        <function-ref name="set" scoped="" ref="0x404b02b0"/>
        <function-ref name="clr" scoped="" ref="0x404b0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404b4b00" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404b4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4cd8"/>
        <function-ref name="isInput" scoped="" ref="0x404b4db8"/>
        <function-ref name="toggle" scoped="" ref="0x404b4e98"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3010"/>
        <function-ref name="get" scoped="" ref="0x404b30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b31d0"/>
        <function-ref name="set" scoped="" ref="0x404b32b0"/>
        <function-ref name="clr" scoped="" ref="0x404b3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404b27d0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404b27d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b29a8"/>
        <function-ref name="isInput" scoped="" ref="0x404b2a88"/>
        <function-ref name="toggle" scoped="" ref="0x404b2b68"/>
        <function-ref name="isOutput" scoped="" ref="0x404b2c48"/>
        <function-ref name="get" scoped="" ref="0x404b2d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2e08"/>
        <function-ref name="set" scoped="" ref="0x404b2ee8"/>
        <function-ref name="clr" scoped="" ref="0x404b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404b04f0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404b04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b06c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b07a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b0888"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0968"/>
        <function-ref name="get" scoped="" ref="0x404b0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0b28"/>
        <function-ref name="set" scoped="" ref="0x404b0c08"/>
        <function-ref name="clr" scoped="" ref="0x404b0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404b34f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404b34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b36c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b37a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b3888"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3968"/>
        <function-ref name="get" scoped="" ref="0x404b3a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3b28"/>
        <function-ref name="set" scoped="" ref="0x404b3c08"/>
        <function-ref name="clr" scoped="" ref="0x404b3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404b1170" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404b1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1348"/>
        <function-ref name="isInput" scoped="" ref="0x404b1428"/>
        <function-ref name="toggle" scoped="" ref="0x404b1508"/>
        <function-ref name="isOutput" scoped="" ref="0x404b15e8"/>
        <function-ref name="get" scoped="" ref="0x404b16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b17a8"/>
        <function-ref name="set" scoped="" ref="0x404b1888"/>
        <function-ref name="clr" scoped="" ref="0x404b1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404b0e48" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404b0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bb050"/>
        <function-ref name="isInput" scoped="" ref="0x404bb130"/>
        <function-ref name="toggle" scoped="" ref="0x404bb210"/>
        <function-ref name="isOutput" scoped="" ref="0x404bb2f0"/>
        <function-ref name="get" scoped="" ref="0x404bb3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bb4b0"/>
        <function-ref name="set" scoped="" ref="0x404bb590"/>
        <function-ref name="clr" scoped="" ref="0x404bb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f10938" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f10938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f10b10"/>
        <function-ref name="isInput" scoped="" ref="0x40f10bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40f10cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f10db0"/>
        <function-ref name="get" scoped="" ref="0x40f10e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f0f010"/>
        <function-ref name="set" scoped="" ref="0x40f0f0f0"/>
        <function-ref name="clr" scoped="" ref="0x40f0f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f0e3b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f0e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f0e588"/>
        <function-ref name="isInput" scoped="" ref="0x40f0e668"/>
        <function-ref name="toggle" scoped="" ref="0x40f0e748"/>
        <function-ref name="isOutput" scoped="" ref="0x40f0e828"/>
        <function-ref name="get" scoped="" ref="0x40f0e908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f0e9e8"/>
        <function-ref name="set" scoped="" ref="0x40f0eac8"/>
        <function-ref name="clr" scoped="" ref="0x40f0eba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f0dd70" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f0dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f0c010"/>
        <function-ref name="isInput" scoped="" ref="0x40f0c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f0c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f0c2b0"/>
        <function-ref name="get" scoped="" ref="0x40f0c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f0c470"/>
        <function-ref name="set" scoped="" ref="0x40f0c550"/>
        <function-ref name="clr" scoped="" ref="0x40f0c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f0b7f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f0b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f0b9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f0bab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f0bb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f0bc70"/>
        <function-ref name="get" scoped="" ref="0x40f0bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f0be30"/>
        <function-ref name="set" scoped="" ref="0x40f0bf10"/>
        <function-ref name="clr" scoped="" ref="0x40f0a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f09228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f09228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f09400"/>
        <function-ref name="isInput" scoped="" ref="0x40f094e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f095c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f096a0"/>
        <function-ref name="get" scoped="" ref="0x40f09780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f09860"/>
        <function-ref name="set" scoped="" ref="0x40f09940"/>
        <function-ref name="clr" scoped="" ref="0x40f09a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f08c08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f08c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f08de0"/>
        <function-ref name="isInput" scoped="" ref="0x40f08ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f07010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f070f0"/>
        <function-ref name="get" scoped="" ref="0x40f071d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f072b0"/>
        <function-ref name="set" scoped="" ref="0x40f07390"/>
        <function-ref name="clr" scoped="" ref="0x40f07470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f3c6c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f3c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f3c898"/>
        <function-ref name="isInput" scoped="" ref="0x40f3c978"/>
        <function-ref name="toggle" scoped="" ref="0x40f3ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f3cb38"/>
        <function-ref name="get" scoped="" ref="0x40f3cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f3ccf8"/>
        <function-ref name="set" scoped="" ref="0x40f3cdd8"/>
        <function-ref name="clr" scoped="" ref="0x40f3ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f3a0b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f3a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f3a288"/>
        <function-ref name="isInput" scoped="" ref="0x40f3a368"/>
        <function-ref name="toggle" scoped="" ref="0x40f3a448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f3a528"/>
        <function-ref name="get" scoped="" ref="0x40f3a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f3a6e8"/>
        <function-ref name="set" scoped="" ref="0x40f3a7c8"/>
        <function-ref name="clr" scoped="" ref="0x40f3a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404b76b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404b76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7888"/>
        <function-ref name="isInput" scoped="" ref="0x404b7968"/>
        <function-ref name="toggle" scoped="" ref="0x404b7a48"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7b28"/>
        <function-ref name="get" scoped="" ref="0x404b7c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7ce8"/>
        <function-ref name="set" scoped="" ref="0x404b7dc8"/>
        <function-ref name="clr" scoped="" ref="0x404b7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404c0330" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404c0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c0508"/>
        <function-ref name="isInput" scoped="" ref="0x404c05e8"/>
        <function-ref name="toggle" scoped="" ref="0x404c06c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c07a8"/>
        <function-ref name="get" scoped="" ref="0x404c0888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0968"/>
        <function-ref name="set" scoped="" ref="0x404c0a48"/>
        <function-ref name="clr" scoped="" ref="0x404c0b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404b83d8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404b83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b85b0"/>
        <function-ref name="isInput" scoped="" ref="0x404b8690"/>
        <function-ref name="toggle" scoped="" ref="0x404b8770"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8850"/>
        <function-ref name="get" scoped="" ref="0x404b8930"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8a10"/>
        <function-ref name="set" scoped="" ref="0x404b8af0"/>
        <function-ref name="clr" scoped="" ref="0x404b8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404b6030" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404b6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6208"/>
        <function-ref name="isInput" scoped="" ref="0x404b62e8"/>
        <function-ref name="toggle" scoped="" ref="0x404b63c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b64a8"/>
        <function-ref name="get" scoped="" ref="0x404b6588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6668"/>
        <function-ref name="set" scoped="" ref="0x404b6748"/>
        <function-ref name="clr" scoped="" ref="0x404b6828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404c0c88" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404c0c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c0e60"/>
        <function-ref name="isInput" scoped="" ref="0x404bf010"/>
        <function-ref name="toggle" scoped="" ref="0x404bf0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bf1d0"/>
        <function-ref name="get" scoped="" ref="0x404bf2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bf390"/>
        <function-ref name="set" scoped="" ref="0x404bf470"/>
        <function-ref name="clr" scoped="" ref="0x404bf550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404b8d30" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404b8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8f08"/>
        <function-ref name="isInput" scoped="" ref="0x404b7010"/>
        <function-ref name="toggle" scoped="" ref="0x404b70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b71d0"/>
        <function-ref name="get" scoped="" ref="0x404b72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7390"/>
        <function-ref name="set" scoped="" ref="0x404b7470"/>
        <function-ref name="clr" scoped="" ref="0x404b7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404b6988" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404b6988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6b60"/>
        <function-ref name="isInput" scoped="" ref="0x404b6c40"/>
        <function-ref name="toggle" scoped="" ref="0x404b6d20"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6e00"/>
        <function-ref name="get" scoped="" ref="0x404b6ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0010"/>
        <function-ref name="set" scoped="" ref="0x404c00f0"/>
        <function-ref name="clr" scoped="" ref="0x404c01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404bf6b0" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404bf6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bf888"/>
        <function-ref name="isInput" scoped="" ref="0x404bf968"/>
        <function-ref name="toggle" scoped="" ref="0x404bfa48"/>
        <function-ref name="isOutput" scoped="" ref="0x404bfb28"/>
        <function-ref name="get" scoped="" ref="0x404bfc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bfce8"/>
        <function-ref name="set" scoped="" ref="0x404bfdc8"/>
        <function-ref name="clr" scoped="" ref="0x404bfea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f44538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f44538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f44710"/>
        <function-ref name="isInput" scoped="" ref="0x40f447f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f448d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f449b0"/>
        <function-ref name="get" scoped="" ref="0x40f44a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f44b70"/>
        <function-ref name="set" scoped="" ref="0x40f44c50"/>
        <function-ref name="clr" scoped="" ref="0x40f44d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f42010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f42010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f421e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f422c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f423a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f42488"/>
        <function-ref name="get" scoped="" ref="0x40f42568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f42648"/>
        <function-ref name="set" scoped="" ref="0x40f42728"/>
        <function-ref name="clr" scoped="" ref="0x40f42808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f419e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f419e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f41bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f41ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f41d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f41e60"/>
        <function-ref name="get" scoped="" ref="0x40f3f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f3f0f0"/>
        <function-ref name="set" scoped="" ref="0x40f3f1d0"/>
        <function-ref name="clr" scoped="" ref="0x40f3f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f3e538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f3e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f3e710"/>
        <function-ref name="isInput" scoped="" ref="0x40f3e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f3e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f3e9b0"/>
        <function-ref name="get" scoped="" ref="0x40f3ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f3eb70"/>
        <function-ref name="set" scoped="" ref="0x40f3ec50"/>
        <function-ref name="clr" scoped="" ref="0x40f3ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f72010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f72010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f721e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f722c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f723a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f72488"/>
        <function-ref name="get" scoped="" ref="0x40f72568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f72648"/>
        <function-ref name="set" scoped="" ref="0x40f72728"/>
        <function-ref name="clr" scoped="" ref="0x40f72808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f719e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f719e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f71bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f71ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f71d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f71e60"/>
        <function-ref name="get" scoped="" ref="0x40f70010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f700f0"/>
        <function-ref name="set" scoped="" ref="0x40f701d0"/>
        <function-ref name="clr" scoped="" ref="0x40f702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f6f538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f6f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f6f710"/>
        <function-ref name="isInput" scoped="" ref="0x40f6f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f6f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f6f9b0"/>
        <function-ref name="get" scoped="" ref="0x40f6fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f6fb70"/>
        <function-ref name="set" scoped="" ref="0x40f6fc50"/>
        <function-ref name="clr" scoped="" ref="0x40f6fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f6d010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f6d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f6d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f6d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f6d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f6d488"/>
        <function-ref name="get" scoped="" ref="0x40f6d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f6d648"/>
        <function-ref name="set" scoped="" ref="0x40f6d728"/>
        <function-ref name="clr" scoped="" ref="0x40f6d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404c6170" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404c6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6348"/>
        <function-ref name="isInput" scoped="" ref="0x404c6428"/>
        <function-ref name="toggle" scoped="" ref="0x404c6508"/>
        <function-ref name="isOutput" scoped="" ref="0x404c65e8"/>
        <function-ref name="get" scoped="" ref="0x404c66c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c67a8"/>
        <function-ref name="set" scoped="" ref="0x404c6888"/>
        <function-ref name="clr" scoped="" ref="0x404c6968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404c5e48" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404c5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c4050"/>
        <function-ref name="isInput" scoped="" ref="0x404c4130"/>
        <function-ref name="toggle" scoped="" ref="0x404c4210"/>
        <function-ref name="isOutput" scoped="" ref="0x404c42f0"/>
        <function-ref name="get" scoped="" ref="0x404c43d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c44b0"/>
        <function-ref name="set" scoped="" ref="0x404c4590"/>
        <function-ref name="clr" scoped="" ref="0x404c4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404bcdc8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404bcdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7010"/>
        <function-ref name="isInput" scoped="" ref="0x404c70f0"/>
        <function-ref name="toggle" scoped="" ref="0x404c71d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c72b0"/>
        <function-ref name="get" scoped="" ref="0x404c7390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7470"/>
        <function-ref name="set" scoped="" ref="0x404c7550"/>
        <function-ref name="clr" scoped="" ref="0x404c7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404c6ac8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404c6ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404c6d80"/>
        <function-ref name="toggle" scoped="" ref="0x404c6e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5010"/>
        <function-ref name="get" scoped="" ref="0x404c50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c51d0"/>
        <function-ref name="set" scoped="" ref="0x404c52b0"/>
        <function-ref name="clr" scoped="" ref="0x404c5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404c47d0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404c47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c49a8"/>
        <function-ref name="isInput" scoped="" ref="0x404c4a88"/>
        <function-ref name="toggle" scoped="" ref="0x404c4b68"/>
        <function-ref name="isOutput" scoped="" ref="0x404c4c48"/>
        <function-ref name="get" scoped="" ref="0x404c4d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4e08"/>
        <function-ref name="set" scoped="" ref="0x404c4ee8"/>
        <function-ref name="clr" scoped="" ref="0x404c3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404c7790" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404c7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7968"/>
        <function-ref name="isInput" scoped="" ref="0x404c7a48"/>
        <function-ref name="toggle" scoped="" ref="0x404c7b28"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7c08"/>
        <function-ref name="get" scoped="" ref="0x404c7ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7dc8"/>
        <function-ref name="set" scoped="" ref="0x404c7ea8"/>
        <function-ref name="clr" scoped="" ref="0x404c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404c54f0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404c54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c56c8"/>
        <function-ref name="isInput" scoped="" ref="0x404c57a8"/>
        <function-ref name="toggle" scoped="" ref="0x404c5888"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5968"/>
        <function-ref name="get" scoped="" ref="0x404c5a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c5b28"/>
        <function-ref name="set" scoped="" ref="0x404c5c08"/>
        <function-ref name="clr" scoped="" ref="0x404c5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404c3170" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404c3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c3348"/>
        <function-ref name="isInput" scoped="" ref="0x404c3428"/>
        <function-ref name="toggle" scoped="" ref="0x404c3508"/>
        <function-ref name="isOutput" scoped="" ref="0x404c35e8"/>
        <function-ref name="get" scoped="" ref="0x404c36c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c37a8"/>
        <function-ref name="set" scoped="" ref="0x404c3888"/>
        <function-ref name="clr" scoped="" ref="0x404c3968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f77418" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f77418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f775f0"/>
        <function-ref name="isInput" scoped="" ref="0x40f776d0"/>
        <function-ref name="toggle" scoped="" ref="0x40f777b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f77890"/>
        <function-ref name="get" scoped="" ref="0x40f77970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f77a50"/>
        <function-ref name="set" scoped="" ref="0x40f77b30"/>
        <function-ref name="clr" scoped="" ref="0x40f77c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f76de0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f76de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f75010"/>
        <function-ref name="isInput" scoped="" ref="0x40f750f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f751d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f752b0"/>
        <function-ref name="get" scoped="" ref="0x40f75390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f75470"/>
        <function-ref name="set" scoped="" ref="0x40f75550"/>
        <function-ref name="clr" scoped="" ref="0x40f75630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f747f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f747f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f749d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f74ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f74b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f74c70"/>
        <function-ref name="get" scoped="" ref="0x40f74d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f74e30"/>
        <function-ref name="set" scoped="" ref="0x40f74f10"/>
        <function-ref name="clr" scoped="" ref="0x40f73010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa9228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa9400"/>
        <function-ref name="isInput" scoped="" ref="0x40fa94e0"/>
        <function-ref name="toggle" scoped="" ref="0x40fa95c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa96a0"/>
        <function-ref name="get" scoped="" ref="0x40fa9780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa9860"/>
        <function-ref name="set" scoped="" ref="0x40fa9940"/>
        <function-ref name="clr" scoped="" ref="0x40fa9a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa8c08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa8de0"/>
        <function-ref name="isInput" scoped="" ref="0x40fa8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40fa7010"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa70f0"/>
        <function-ref name="get" scoped="" ref="0x40fa71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa72b0"/>
        <function-ref name="set" scoped="" ref="0x40fa7390"/>
        <function-ref name="clr" scoped="" ref="0x40fa7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa66c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa6898"/>
        <function-ref name="isInput" scoped="" ref="0x40fa6978"/>
        <function-ref name="toggle" scoped="" ref="0x40fa6a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa6b38"/>
        <function-ref name="get" scoped="" ref="0x40fa6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa6cf8"/>
        <function-ref name="set" scoped="" ref="0x40fa6dd8"/>
        <function-ref name="clr" scoped="" ref="0x40fa6eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa40b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa4288"/>
        <function-ref name="isInput" scoped="" ref="0x40fa4368"/>
        <function-ref name="toggle" scoped="" ref="0x40fa4448"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa4528"/>
        <function-ref name="get" scoped="" ref="0x40fa4608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa46e8"/>
        <function-ref name="set" scoped="" ref="0x40fa47c8"/>
        <function-ref name="clr" scoped="" ref="0x40fa48a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa3a88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa3c60"/>
        <function-ref name="isInput" scoped="" ref="0x40fa3d40"/>
        <function-ref name="toggle" scoped="" ref="0x40fa3e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa3f00"/>
        <function-ref name="get" scoped="" ref="0x40fa2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa20f0"/>
        <function-ref name="set" scoped="" ref="0x40fa21d0"/>
        <function-ref name="clr" scoped="" ref="0x40fa22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404ca9e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404ca9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cabc0"/>
        <function-ref name="isInput" scoped="" ref="0x404caca0"/>
        <function-ref name="toggle" scoped="" ref="0x404cad80"/>
        <function-ref name="isOutput" scoped="" ref="0x404cae60"/>
        <function-ref name="get" scoped="" ref="0x404c9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c90f0"/>
        <function-ref name="set" scoped="" ref="0x404c91d0"/>
        <function-ref name="clr" scoped="" ref="0x404c92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404c8790" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404c8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c8968"/>
        <function-ref name="isInput" scoped="" ref="0x404c8a48"/>
        <function-ref name="toggle" scoped="" ref="0x404c8b28"/>
        <function-ref name="isOutput" scoped="" ref="0x404c8c08"/>
        <function-ref name="get" scoped="" ref="0x404c8ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c8dc8"/>
        <function-ref name="set" scoped="" ref="0x404c8ea8"/>
        <function-ref name="clr" scoped="" ref="0x404d3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404cb6f8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404cb6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cb8d0"/>
        <function-ref name="isInput" scoped="" ref="0x404cb9b0"/>
        <function-ref name="toggle" scoped="" ref="0x404cba90"/>
        <function-ref name="isOutput" scoped="" ref="0x404cbb70"/>
        <function-ref name="get" scoped="" ref="0x404cbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cbd30"/>
        <function-ref name="set" scoped="" ref="0x404cbe10"/>
        <function-ref name="clr" scoped="" ref="0x404cbef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404c9410" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404c9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c95e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c96c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c97a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c9888"/>
        <function-ref name="get" scoped="" ref="0x404c9968"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c9a48"/>
        <function-ref name="set" scoped="" ref="0x404c9b28"/>
        <function-ref name="clr" scoped="" ref="0x404c9c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404d3170" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404d3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d3348"/>
        <function-ref name="isInput" scoped="" ref="0x404d3428"/>
        <function-ref name="toggle" scoped="" ref="0x404d3508"/>
        <function-ref name="isOutput" scoped="" ref="0x404d35e8"/>
        <function-ref name="get" scoped="" ref="0x404d36c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d37a8"/>
        <function-ref name="set" scoped="" ref="0x404d3888"/>
        <function-ref name="clr" scoped="" ref="0x404d3968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404ca090" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404ca090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ca268"/>
        <function-ref name="isInput" scoped="" ref="0x404ca348"/>
        <function-ref name="toggle" scoped="" ref="0x404ca428"/>
        <function-ref name="isOutput" scoped="" ref="0x404ca508"/>
        <function-ref name="get" scoped="" ref="0x404ca5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ca6c8"/>
        <function-ref name="set" scoped="" ref="0x404ca7a8"/>
        <function-ref name="clr" scoped="" ref="0x404ca888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404c9d68" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404c9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c8010"/>
        <function-ref name="isInput" scoped="" ref="0x404c80f0"/>
        <function-ref name="toggle" scoped="" ref="0x404c81d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c82b0"/>
        <function-ref name="get" scoped="" ref="0x404c8390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c8470"/>
        <function-ref name="set" scoped="" ref="0x404c8550"/>
        <function-ref name="clr" scoped="" ref="0x404c8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404d3ac8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404d3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d3ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404d3d80"/>
        <function-ref name="toggle" scoped="" ref="0x404d3e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404d2010"/>
        <function-ref name="get" scoped="" ref="0x404d20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d21d0"/>
        <function-ref name="set" scoped="" ref="0x404d22b0"/>
        <function-ref name="clr" scoped="" ref="0x404d2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fb2de8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fb2de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fad010"/>
        <function-ref name="isInput" scoped="" ref="0x40fad0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fad1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fad2b0"/>
        <function-ref name="get" scoped="" ref="0x40fad390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fad470"/>
        <function-ref name="set" scoped="" ref="0x40fad550"/>
        <function-ref name="clr" scoped="" ref="0x40fad630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fac7f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fac7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fac9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40facab0"/>
        <function-ref name="toggle" scoped="" ref="0x40facb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40facc70"/>
        <function-ref name="get" scoped="" ref="0x40facd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40face30"/>
        <function-ref name="set" scoped="" ref="0x40facf10"/>
        <function-ref name="clr" scoped="" ref="0x40fab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40faa228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40faa228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40faa400"/>
        <function-ref name="isInput" scoped="" ref="0x40faa4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40faa5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40faa6a0"/>
        <function-ref name="get" scoped="" ref="0x40faa780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40faa860"/>
        <function-ref name="set" scoped="" ref="0x40faa940"/>
        <function-ref name="clr" scoped="" ref="0x40faaa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fe1c08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fe1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fe1de0"/>
        <function-ref name="isInput" scoped="" ref="0x40fe1ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40fe0010"/>
        <function-ref name="isOutput" scoped="" ref="0x40fe00f0"/>
        <function-ref name="get" scoped="" ref="0x40fe01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fe02b0"/>
        <function-ref name="set" scoped="" ref="0x40fe0390"/>
        <function-ref name="clr" scoped="" ref="0x40fe0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fdf6c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fdf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fdf898"/>
        <function-ref name="isInput" scoped="" ref="0x40fdf978"/>
        <function-ref name="toggle" scoped="" ref="0x40fdfa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40fdfb38"/>
        <function-ref name="get" scoped="" ref="0x40fdfc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fdfcf8"/>
        <function-ref name="set" scoped="" ref="0x40fdfdd8"/>
        <function-ref name="clr" scoped="" ref="0x40fdfeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fdd0b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fdd0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fdd288"/>
        <function-ref name="isInput" scoped="" ref="0x40fdd368"/>
        <function-ref name="toggle" scoped="" ref="0x40fdd448"/>
        <function-ref name="isOutput" scoped="" ref="0x40fdd528"/>
        <function-ref name="get" scoped="" ref="0x40fdd608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fdd6e8"/>
        <function-ref name="set" scoped="" ref="0x40fdd7c8"/>
        <function-ref name="clr" scoped="" ref="0x40fdd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fdca88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fdca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fdcc60"/>
        <function-ref name="isInput" scoped="" ref="0x40fdcd40"/>
        <function-ref name="toggle" scoped="" ref="0x40fdce20"/>
        <function-ref name="isOutput" scoped="" ref="0x40fdcf00"/>
        <function-ref name="get" scoped="" ref="0x40fdb010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fdb0f0"/>
        <function-ref name="set" scoped="" ref="0x40fdb1d0"/>
        <function-ref name="clr" scoped="" ref="0x40fdb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fda538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fda538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fda710"/>
        <function-ref name="isInput" scoped="" ref="0x40fda7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fda8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fda9b0"/>
        <function-ref name="get" scoped="" ref="0x40fdaa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fdab70"/>
        <function-ref name="set" scoped="" ref="0x40fdac50"/>
        <function-ref name="clr" scoped="" ref="0x40fdad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404d9330" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404d9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d9508"/>
        <function-ref name="isInput" scoped="" ref="0x404d95e8"/>
        <function-ref name="toggle" scoped="" ref="0x404d96c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d97a8"/>
        <function-ref name="get" scoped="" ref="0x404d9888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d9968"/>
        <function-ref name="set" scoped="" ref="0x404d9a48"/>
        <function-ref name="clr" scoped="" ref="0x404d9b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404d7030" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404d7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d7208"/>
        <function-ref name="isInput" scoped="" ref="0x404d72e8"/>
        <function-ref name="toggle" scoped="" ref="0x404d73c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d74a8"/>
        <function-ref name="get" scoped="" ref="0x404d7588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d7668"/>
        <function-ref name="set" scoped="" ref="0x404d7748"/>
        <function-ref name="clr" scoped="" ref="0x404d7828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404ce010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ce1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ce2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ce3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ce488"/>
        <function-ref name="get" scoped="" ref="0x404ce568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ce648"/>
        <function-ref name="set" scoped="" ref="0x404ce728"/>
        <function-ref name="clr" scoped="" ref="0x404ce808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404d9c88" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404d9c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d9e60"/>
        <function-ref name="isInput" scoped="" ref="0x404d8010"/>
        <function-ref name="toggle" scoped="" ref="0x404d80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d81d0"/>
        <function-ref name="get" scoped="" ref="0x404d82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d8390"/>
        <function-ref name="set" scoped="" ref="0x404d8470"/>
        <function-ref name="clr" scoped="" ref="0x404d8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404d7988" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404d7988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d7b60"/>
        <function-ref name="isInput" scoped="" ref="0x404d7c40"/>
        <function-ref name="toggle" scoped="" ref="0x404d7d20"/>
        <function-ref name="isOutput" scoped="" ref="0x404d7e00"/>
        <function-ref name="get" scoped="" ref="0x404d7ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6010"/>
        <function-ref name="set" scoped="" ref="0x404d60f0"/>
        <function-ref name="clr" scoped="" ref="0x404d61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404ce968" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404ce968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ceb40"/>
        <function-ref name="isInput" scoped="" ref="0x404cec20"/>
        <function-ref name="toggle" scoped="" ref="0x404ced00"/>
        <function-ref name="isOutput" scoped="" ref="0x404cede0"/>
        <function-ref name="get" scoped="" ref="0x404ceec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d9010"/>
        <function-ref name="set" scoped="" ref="0x404d90f0"/>
        <function-ref name="clr" scoped="" ref="0x404d91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404d86b0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404d86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d8888"/>
        <function-ref name="isInput" scoped="" ref="0x404d8968"/>
        <function-ref name="toggle" scoped="" ref="0x404d8a48"/>
        <function-ref name="isOutput" scoped="" ref="0x404d8b28"/>
        <function-ref name="get" scoped="" ref="0x404d8c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d8ce8"/>
        <function-ref name="set" scoped="" ref="0x404d8dc8"/>
        <function-ref name="clr" scoped="" ref="0x404d8ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404d6330" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404d6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d6508"/>
        <function-ref name="isInput" scoped="" ref="0x404d65e8"/>
        <function-ref name="toggle" scoped="" ref="0x404d66c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d67a8"/>
        <function-ref name="get" scoped="" ref="0x404d6888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6968"/>
        <function-ref name="set" scoped="" ref="0x404d6a48"/>
        <function-ref name="clr" scoped="" ref="0x404d6b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fe6938" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fe6938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fe6b10"/>
        <function-ref name="isInput" scoped="" ref="0x40fe6bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40fe6cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fe6db0"/>
        <function-ref name="get" scoped="" ref="0x40fe6e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fe5010"/>
        <function-ref name="set" scoped="" ref="0x40fe50f0"/>
        <function-ref name="clr" scoped="" ref="0x40fe51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fe43b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fe43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fe4588"/>
        <function-ref name="isInput" scoped="" ref="0x40fe4668"/>
        <function-ref name="toggle" scoped="" ref="0x40fe4748"/>
        <function-ref name="isOutput" scoped="" ref="0x40fe4828"/>
        <function-ref name="get" scoped="" ref="0x40fe4908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fe49e8"/>
        <function-ref name="set" scoped="" ref="0x40fe4ac8"/>
        <function-ref name="clr" scoped="" ref="0x40fe4ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fe3d70" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fe3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fe2010"/>
        <function-ref name="isInput" scoped="" ref="0x40fe20f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fe21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fe22b0"/>
        <function-ref name="get" scoped="" ref="0x40fe2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fe2470"/>
        <function-ref name="set" scoped="" ref="0x40fe2550"/>
        <function-ref name="clr" scoped="" ref="0x40fe2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4101a7f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4101a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4101a9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4101aab0"/>
        <function-ref name="toggle" scoped="" ref="0x4101ab90"/>
        <function-ref name="isOutput" scoped="" ref="0x4101ac70"/>
        <function-ref name="get" scoped="" ref="0x4101ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4101ae30"/>
        <function-ref name="set" scoped="" ref="0x4101af10"/>
        <function-ref name="clr" scoped="" ref="0x41019010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41018228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41018228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41018400"/>
        <function-ref name="isInput" scoped="" ref="0x410184e0"/>
        <function-ref name="toggle" scoped="" ref="0x410185c0"/>
        <function-ref name="isOutput" scoped="" ref="0x410186a0"/>
        <function-ref name="get" scoped="" ref="0x41018780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41018860"/>
        <function-ref name="set" scoped="" ref="0x41018940"/>
        <function-ref name="clr" scoped="" ref="0x41018a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41017c08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41017c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41017de0"/>
        <function-ref name="isInput" scoped="" ref="0x41017ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41016010"/>
        <function-ref name="isOutput" scoped="" ref="0x410160f0"/>
        <function-ref name="get" scoped="" ref="0x410161d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410162b0"/>
        <function-ref name="set" scoped="" ref="0x41016390"/>
        <function-ref name="clr" scoped="" ref="0x41016470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410156c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410156c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41015898"/>
        <function-ref name="isInput" scoped="" ref="0x41015978"/>
        <function-ref name="toggle" scoped="" ref="0x41015a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41015b38"/>
        <function-ref name="get" scoped="" ref="0x41015c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41015cf8"/>
        <function-ref name="set" scoped="" ref="0x41015dd8"/>
        <function-ref name="clr" scoped="" ref="0x41015eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410130b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410130b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41013288"/>
        <function-ref name="isInput" scoped="" ref="0x41013368"/>
        <function-ref name="toggle" scoped="" ref="0x41013448"/>
        <function-ref name="isOutput" scoped="" ref="0x41013528"/>
        <function-ref name="get" scoped="" ref="0x41013608"/>
        <function-ref name="makeOutput" scoped="" ref="0x410136e8"/>
        <function-ref name="set" scoped="" ref="0x410137c8"/>
        <function-ref name="clr" scoped="" ref="0x410138a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404df2d0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404df2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404df4a8"/>
        <function-ref name="isInput" scoped="" ref="0x404df588"/>
        <function-ref name="toggle" scoped="" ref="0x404df668"/>
        <function-ref name="isOutput" scoped="" ref="0x404df748"/>
        <function-ref name="get" scoped="" ref="0x404df828"/>
        <function-ref name="makeOutput" scoped="" ref="0x404df908"/>
        <function-ref name="set" scoped="" ref="0x404df9e8"/>
        <function-ref name="clr" scoped="" ref="0x404dfac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e88a0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e8a78"/>
        <function-ref name="isInput" scoped="" ref="0x404e8b58"/>
        <function-ref name="toggle" scoped="" ref="0x404e8c38"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8d18"/>
        <function-ref name="get" scoped="" ref="0x404e8df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8ed8"/>
        <function-ref name="set" scoped="" ref="0x404e7010"/>
        <function-ref name="clr" scoped="" ref="0x404e70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f1ec0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f1ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f00c0"/>
        <function-ref name="isInput" scoped="" ref="0x404f01a0"/>
        <function-ref name="toggle" scoped="" ref="0x404f0280"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0360"/>
        <function-ref name="get" scoped="" ref="0x404f0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0520"/>
        <function-ref name="set" scoped="" ref="0x404f0600"/>
        <function-ref name="clr" scoped="" ref="0x404f06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ee538" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ee538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ee710"/>
        <function-ref name="isInput" scoped="" ref="0x404ee7f0"/>
        <function-ref name="toggle" scoped="" ref="0x404ee8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ee9b0"/>
        <function-ref name="get" scoped="" ref="0x404eea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eeb70"/>
        <function-ref name="set" scoped="" ref="0x404eec50"/>
        <function-ref name="clr" scoped="" ref="0x404eed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f7b68" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f7b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f7d40"/>
        <function-ref name="isInput" scoped="" ref="0x404f7e20"/>
        <function-ref name="toggle" scoped="" ref="0x404f7f00"/>
        <function-ref name="isOutput" scoped="" ref="0x404f6010"/>
        <function-ref name="get" scoped="" ref="0x404f60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f61d0"/>
        <function-ref name="set" scoped="" ref="0x404f62b0"/>
        <function-ref name="clr" scoped="" ref="0x404f6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f4228" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f4400"/>
        <function-ref name="isInput" scoped="" ref="0x404f44e0"/>
        <function-ref name="toggle" scoped="" ref="0x404f45c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f46a0"/>
        <function-ref name="get" scoped="" ref="0x404f4780"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f4860"/>
        <function-ref name="set" scoped="" ref="0x404f4940"/>
        <function-ref name="clr" scoped="" ref="0x404f4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f28f0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2ac8"/>
        <function-ref name="isInput" scoped="" ref="0x404f2ba8"/>
        <function-ref name="toggle" scoped="" ref="0x404f2c88"/>
        <function-ref name="isOutput" scoped="" ref="0x404f2d68"/>
        <function-ref name="get" scoped="" ref="0x404f2e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2f28"/>
        <function-ref name="set" scoped="" ref="0x404fe018"/>
        <function-ref name="clr" scoped="" ref="0x404fe0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404fcec0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404fcec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404fb1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404fb280"/>
        <function-ref name="isOutput" scoped="" ref="0x404fb360"/>
        <function-ref name="get" scoped="" ref="0x404fb440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fb520"/>
        <function-ref name="set" scoped="" ref="0x404fb600"/>
        <function-ref name="clr" scoped="" ref="0x404fb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f93e8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f93e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f95c0"/>
        <function-ref name="isInput" scoped="" ref="0x404f96a0"/>
        <function-ref name="toggle" scoped="" ref="0x404f9780"/>
        <function-ref name="isOutput" scoped="" ref="0x404f9860"/>
        <function-ref name="get" scoped="" ref="0x404f9940"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f9a20"/>
        <function-ref name="set" scoped="" ref="0x404f9b00"/>
        <function-ref name="clr" scoped="" ref="0x404f9be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405048f0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405048f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504ac8"/>
        <function-ref name="isInput" scoped="" ref="0x40504ba8"/>
        <function-ref name="toggle" scoped="" ref="0x40504c88"/>
        <function-ref name="isOutput" scoped="" ref="0x40504d68"/>
        <function-ref name="get" scoped="" ref="0x40504e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40504f28"/>
        <function-ref name="set" scoped="" ref="0x40503018"/>
        <function-ref name="clr" scoped="" ref="0x405030f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40502dd8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40502dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501010"/>
        <function-ref name="isInput" scoped="" ref="0x405010f0"/>
        <function-ref name="toggle" scoped="" ref="0x405011d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405012b0"/>
        <function-ref name="get" scoped="" ref="0x40501390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40501470"/>
        <function-ref name="set" scoped="" ref="0x40501550"/>
        <function-ref name="clr" scoped="" ref="0x40501630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ff3b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ff3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ff588"/>
        <function-ref name="isInput" scoped="" ref="0x404ff668"/>
        <function-ref name="toggle" scoped="" ref="0x404ff748"/>
        <function-ref name="isOutput" scoped="" ref="0x404ff828"/>
        <function-ref name="get" scoped="" ref="0x404ff908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ff9e8"/>
        <function-ref name="set" scoped="" ref="0x404ffac8"/>
        <function-ref name="clr" scoped="" ref="0x404ffba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4050a8a0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4050a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050aa78"/>
        <function-ref name="isInput" scoped="" ref="0x4050ab58"/>
        <function-ref name="toggle" scoped="" ref="0x4050ac38"/>
        <function-ref name="isOutput" scoped="" ref="0x4050ad18"/>
        <function-ref name="get" scoped="" ref="0x4050adf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050aed8"/>
        <function-ref name="set" scoped="" ref="0x40509010"/>
        <function-ref name="clr" scoped="" ref="0x405090f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4052d858" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4052d858"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034b7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034b7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4052da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4052dc08" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4052dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4052dde0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4052dec0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4052c010"/>
        <function-ref name="actualMicro" scoped="" ref="0x4052c0f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4052c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40536010" loc="60:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40536010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405361e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x405371c8" loc="57:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x405371c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405373a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40537b28" loc="59:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40537b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40537d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40537560" loc="58:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40537560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40537738"/>
        <function-ref name="taskLoop" scoped="" ref="0x40537818"/>
        <function-ref name="runNextTask" scoped="" ref="0x405378f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40354600" loc="48:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403547d8"/>
        <function-ref name="runTask" scoped="" ref="0x403548b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4034eed8" loc="47:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4034eed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4034a0c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x4034a1a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x4034a280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403c9720" loc="56:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403c9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403c98f8"/>
        <function-ref name="runTask" scoped="" ref="0x403c99d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403c63a0" loc="57:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403c63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403c6578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403c2ea8" loc="55:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403c2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c90c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403c91a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403c9280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403dc690" loc="54:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403dc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403dc868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40349bd8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40349bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40349db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403d88a8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403d88a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403d8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40545df8" loc="46:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40545df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4053e010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4053e0f0"/>
        <function-ref name="led1On" scoped="" ref="0x4053e1d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4053e2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4053e390"/>
        <function-ref name="get" scoped="" ref="0x4053e470"/>
        <function-ref name="led1Off" scoped="" ref="0x4053e550"/>
        <function-ref name="led2Off" scoped="" ref="0x4053e8d0"/>
        <function-ref name="set" scoped="" ref="0x4053e630"/>
        <function-ref name="led0On" scoped="" ref="0x4053e710"/>
        <function-ref name="led2On" scoped="" ref="0x4053e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40550240" loc="50:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40550240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40550418"/>
        <function-ref name="isInput" scoped="" ref="0x405504f8"/>
        <function-ref name="toggle" scoped="" ref="0x405505d8"/>
        <function-ref name="isOutput" scoped="" ref="0x405506b8"/>
        <function-ref name="get" scoped="" ref="0x40550798"/>
        <function-ref name="makeOutput" scoped="" ref="0x40550878"/>
        <function-ref name="set" scoped="" ref="0x40550958"/>
        <function-ref name="clr" scoped="" ref="0x40550a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40543168" loc="46:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40543168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40543340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40550c28" loc="51:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40550c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40550e00"/>
        <function-ref name="isInput" scoped="" ref="0x40550ee0"/>
        <function-ref name="toggle" scoped="" ref="0x4054f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4054f0f0"/>
        <function-ref name="get" scoped="" ref="0x4054f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054f2b0"/>
        <function-ref name="set" scoped="" ref="0x4054f390"/>
        <function-ref name="clr" scoped="" ref="0x4054f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x405434b0" loc="47:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405434b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40543688"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40543768"/>
        <function-ref name="led1On" scoped="" ref="0x40543848"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40543928"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40543a08"/>
        <function-ref name="get" scoped="" ref="0x40543ae8"/>
        <function-ref name="led1Off" scoped="" ref="0x40543bc8"/>
        <function-ref name="led2Off" scoped="" ref="0x40550010"/>
        <function-ref name="set" scoped="" ref="0x40543ca8"/>
        <function-ref name="led0On" scoped="" ref="0x40543d88"/>
        <function-ref name="led2On" scoped="" ref="0x40543e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4054f660" loc="52:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4054f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054f838"/>
        <function-ref name="isInput" scoped="" ref="0x4054f918"/>
        <function-ref name="toggle" scoped="" ref="0x4054f9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4054fad8"/>
        <function-ref name="get" scoped="" ref="0x4054fbb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054fc98"/>
        <function-ref name="set" scoped="" ref="0x4054fd78"/>
        <function-ref name="clr" scoped="" ref="0x4054fe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x4055ba70" loc="44:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4055ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055bc48"/>
        <function-ref name="isInput" scoped="" ref="0x4055bd28"/>
        <function-ref name="toggle" scoped="" ref="0x4055be08"/>
        <function-ref name="isOutput" scoped="" ref="0x4055bee8"/>
        <function-ref name="get" scoped="" ref="0x4055a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055a0f0"/>
        <function-ref name="set" scoped="" ref="0x4055a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4055a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x4055a4c0" loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4055a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055a698"/>
        <function-ref name="isInput" scoped="" ref="0x4055a778"/>
        <function-ref name="toggle" scoped="" ref="0x4055a858"/>
        <function-ref name="isOutput" scoped="" ref="0x4055a938"/>
        <function-ref name="get" scoped="" ref="0x4055aa18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055aaf8"/>
        <function-ref name="set" scoped="" ref="0x4055abd8"/>
        <function-ref name="clr" scoped="" ref="0x4055acb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40559870" loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40559870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40559a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x4055aec8" loc="46:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4055aec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405590c0"/>
        <function-ref name="isInput" scoped="" ref="0x405591a0"/>
        <function-ref name="toggle" scoped="" ref="0x40559280"/>
        <function-ref name="isOutput" scoped="" ref="0x40559360"/>
        <function-ref name="get" scoped="" ref="0x40559440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40559520"/>
        <function-ref name="set" scoped="" ref="0x40559600"/>
        <function-ref name="clr" scoped="" ref="0x405596e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x40569368" loc="36:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x40569368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40569540"/>
        <function-ref name="disable" scoped="" ref="0x40569620"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40569700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x405697e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x40571010" loc="45:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x40571010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x405711e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x40562850" loc="23:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x40562850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40562a28"/>
        <function-ref name="isInput" scoped="" ref="0x40562b08"/>
        <function-ref name="toggle" scoped="" ref="0x40562be8"/>
        <function-ref name="isOutput" scoped="" ref="0x40562cc8"/>
        <function-ref name="get" scoped="" ref="0x40562da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40562e88"/>
        <function-ref name="set" scoped="" ref="0x40561010"/>
        <function-ref name="clr" scoped="" ref="0x405610f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x40560730" loc="26:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x40560730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40560908"/>
        <function-ref name="isInput" scoped="" ref="0x405609e8"/>
        <function-ref name="toggle" scoped="" ref="0x40560ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40560ba8"/>
        <function-ref name="get" scoped="" ref="0x40560c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40560d68"/>
        <function-ref name="set" scoped="" ref="0x40560e48"/>
        <function-ref name="clr" scoped="" ref="0x40560f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x40571b80" loc="48:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x40571b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40571d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x405703e0" loc="50:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x405703e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x405706b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x4056c580" loc="30:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x4056c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056c758"/>
        <function-ref name="isInput" scoped="" ref="0x4056c838"/>
        <function-ref name="toggle" scoped="" ref="0x4056c918"/>
        <function-ref name="isOutput" scoped="" ref="0x4056c9f8"/>
        <function-ref name="get" scoped="" ref="0x4056cad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056cbb8"/>
        <function-ref name="set" scoped="" ref="0x4056cc98"/>
        <function-ref name="clr" scoped="" ref="0x4056cd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x40573d38" loc="42:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x40573d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40573f10"/>
        <function-ref name="isInput" scoped="" ref="0x40572010"/>
        <function-ref name="toggle" scoped="" ref="0x405720f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405721d0"/>
        <function-ref name="get" scoped="" ref="0x405722b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40572390"/>
        <function-ref name="set" scoped="" ref="0x40572470"/>
        <function-ref name="clr" scoped="" ref="0x40572550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x40563490" loc="21:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x40563490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40563668"/>
        <function-ref name="isInput" scoped="" ref="0x40563748"/>
        <function-ref name="toggle" scoped="" ref="0x40563828"/>
        <function-ref name="isOutput" scoped="" ref="0x40563908"/>
        <function-ref name="get" scoped="" ref="0x405639e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40563ac8"/>
        <function-ref name="set" scoped="" ref="0x40563ba8"/>
        <function-ref name="clr" scoped="" ref="0x40563c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x405612d0" loc="24:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x405612d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405614a8"/>
        <function-ref name="isInput" scoped="" ref="0x40561588"/>
        <function-ref name="toggle" scoped="" ref="0x40561668"/>
        <function-ref name="isOutput" scoped="" ref="0x40561748"/>
        <function-ref name="get" scoped="" ref="0x40561828"/>
        <function-ref name="makeOutput" scoped="" ref="0x40561908"/>
        <function-ref name="set" scoped="" ref="0x405619e8"/>
        <function-ref name="clr" scoped="" ref="0x40561ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x40568198" loc="38:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x40568198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40568370"/>
        <function-ref name="disable" scoped="" ref="0x40568450"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40568530"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40568610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x405713e0" loc="46:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x405713e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x405715b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x40573318" loc="41:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x40573318"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405734f0"/>
        <function-ref name="isInput" scoped="" ref="0x405735d0"/>
        <function-ref name="toggle" scoped="" ref="0x405736b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40573790"/>
        <function-ref name="get" scoped="" ref="0x40573870"/>
        <function-ref name="makeOutput" scoped="" ref="0x40573950"/>
        <function-ref name="set" scoped="" ref="0x40573a30"/>
        <function-ref name="clr" scoped="" ref="0x40573b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x4055f118" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x4055f118"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055f2f0"/>
        <function-ref name="isInput" scoped="" ref="0x4055f3d0"/>
        <function-ref name="toggle" scoped="" ref="0x4055f4b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4055f590"/>
        <function-ref name="get" scoped="" ref="0x4055f670"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055f750"/>
        <function-ref name="set" scoped="" ref="0x4055f830"/>
        <function-ref name="clr" scoped="" ref="0x4055f910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x40566b98" loc="35:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x40566b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40566df0"/>
        <function-ref name="disable" scoped="" ref="0x40566ed0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40569010"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x405690f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x405708b0" loc="51:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x405708b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40570a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x4056b010" loc="31:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x4056b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4056b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4056b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4056b488"/>
        <function-ref name="get" scoped="" ref="0x4056b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056b648"/>
        <function-ref name="set" scoped="" ref="0x4056b728"/>
        <function-ref name="clr" scoped="" ref="0x4056b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x40563e68" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x40563e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40562050"/>
        <function-ref name="isInput" scoped="" ref="0x40562130"/>
        <function-ref name="toggle" scoped="" ref="0x40562210"/>
        <function-ref name="isOutput" scoped="" ref="0x405622f0"/>
        <function-ref name="get" scoped="" ref="0x405623d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405624b0"/>
        <function-ref name="set" scoped="" ref="0x40562590"/>
        <function-ref name="clr" scoped="" ref="0x40562670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x40561ca8" loc="25:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x40561ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40561e80"/>
        <function-ref name="isInput" scoped="" ref="0x40560010"/>
        <function-ref name="toggle" scoped="" ref="0x405600f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405601d0"/>
        <function-ref name="get" scoped="" ref="0x405602b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40560390"/>
        <function-ref name="set" scoped="" ref="0x40560470"/>
        <function-ref name="clr" scoped="" ref="0x40560550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x405717b0" loc="47:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x405717b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40571988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x40570010" loc="49:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x40570010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x405701e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x4055fb00" loc="29:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x4055fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055fcd8"/>
        <function-ref name="isInput" scoped="" ref="0x4055fdb8"/>
        <function-ref name="toggle" scoped="" ref="0x4055fe98"/>
        <function-ref name="isOutput" scoped="" ref="0x4056c010"/>
        <function-ref name="get" scoped="" ref="0x4056c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056c1d0"/>
        <function-ref name="set" scoped="" ref="0x4056c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4056c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x40569a58" loc="37:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x40569a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40569c30"/>
        <function-ref name="disable" scoped="" ref="0x40569d10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40569df0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40569ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x40568838" loc="40:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x40568838"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40568a10"/>
        <function-ref name="isInput" scoped="" ref="0x40568af0"/>
        <function-ref name="toggle" scoped="" ref="0x40568bd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40568cb0"/>
        <function-ref name="get" scoped="" ref="0x40568d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40568e70"/>
        <function-ref name="set" scoped="" ref="0x40573010"/>
        <function-ref name="clr" scoped="" ref="0x405730f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x40570c80" loc="52:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x40570c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40570e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x4053fa38" loc="20:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x4053fa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053fc10"/>
        <function-ref name="isInput" scoped="" ref="0x4053fcf0"/>
        <function-ref name="toggle" scoped="" ref="0x4053fdd0"/>
        <function-ref name="isOutput" scoped="" ref="0x4053feb0"/>
        <function-ref name="get" scoped="" ref="0x40563010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405630f0"/>
        <function-ref name="set" scoped="" ref="0x405631d0"/>
        <function-ref name="clr" scoped="" ref="0x405632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x4056b9f8" loc="32:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x4056b9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056bbd0"/>
        <function-ref name="isInput" scoped="" ref="0x4056bcb0"/>
        <function-ref name="toggle" scoped="" ref="0x4056bd90"/>
        <function-ref name="isOutput" scoped="" ref="0x4056be70"/>
        <function-ref name="get" scoped="" ref="0x4056a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056a0f0"/>
        <function-ref name="set" scoped="" ref="0x4056a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4056a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x4056f7d0" loc="18:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x4056f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4056f9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x4057a3e0" loc="21:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x4057a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4057a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x4057ab80" loc="23:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x4057ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4057ad58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x4056fba0" loc="19:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x4056fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4056fd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40579010" loc="24:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40579010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x405791e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x4057a010" loc="20:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x4057a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4057a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x4057a7b0" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x4057a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4057a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x405793e0" loc="25:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x405793e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x405795b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x4058a168" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x4058a168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4058a340"/>
        <function-ref name="fired" scoped="" ref="0x4058a420"/>
        <function-ref name="disable" scoped="" ref="0x4058a500"/>
        <function-ref name="edge" scoped="" ref="0x4058a5e0"/>
        <function-ref name="enable" scoped="" ref="0x4058a6c0"/>
        <function-ref name="getValue" scoped="" ref="0x4058a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x405805d8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x405805d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405807b0"/>
        <function-ref name="fired" scoped="" ref="0x40580890"/>
        <function-ref name="disable" scoped="" ref="0x40580970"/>
        <function-ref name="edge" scoped="" ref="0x40580a50"/>
        <function-ref name="enable" scoped="" ref="0x40580b30"/>
        <function-ref name="getValue" scoped="" ref="0x40580c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x4057b010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x4057b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4057b1e8"/>
        <function-ref name="fired" scoped="" ref="0x4057b2c8"/>
        <function-ref name="disable" scoped="" ref="0x4057b3a8"/>
        <function-ref name="edge" scoped="" ref="0x4057b488"/>
        <function-ref name="enable" scoped="" ref="0x4057b568"/>
        <function-ref name="getValue" scoped="" ref="0x4057b648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x4058a9e8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x4058a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4058abc0"/>
        <function-ref name="fired" scoped="" ref="0x4058aca0"/>
        <function-ref name="disable" scoped="" ref="0x4058ad80"/>
        <function-ref name="edge" scoped="" ref="0x4058ae60"/>
        <function-ref name="enable" scoped="" ref="0x40589010"/>
        <function-ref name="getValue" scoped="" ref="0x405890f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40580e58" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40580e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4057f050"/>
        <function-ref name="fired" scoped="" ref="0x4057f130"/>
        <function-ref name="disable" scoped="" ref="0x4057f210"/>
        <function-ref name="edge" scoped="" ref="0x4057f2f0"/>
        <function-ref name="enable" scoped="" ref="0x4057f3d0"/>
        <function-ref name="getValue" scoped="" ref="0x4057f4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x4057b890" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x4057b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4057ba68"/>
        <function-ref name="fired" scoped="" ref="0x4057bb48"/>
        <function-ref name="disable" scoped="" ref="0x4057bc28"/>
        <function-ref name="edge" scoped="" ref="0x4057bd08"/>
        <function-ref name="enable" scoped="" ref="0x4057bde8"/>
        <function-ref name="getValue" scoped="" ref="0x4057bec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x4057dce0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x4057dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4057deb8"/>
        <function-ref name="fired" scoped="" ref="0x40580010"/>
        <function-ref name="disable" scoped="" ref="0x405800f0"/>
        <function-ref name="edge" scoped="" ref="0x405801d0"/>
        <function-ref name="enable" scoped="" ref="0x405802b0"/>
        <function-ref name="getValue" scoped="" ref="0x40580390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x4057f6f8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x4057f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4057f8d0"/>
        <function-ref name="fired" scoped="" ref="0x4057f9b0"/>
        <function-ref name="disable" scoped="" ref="0x4057fa90"/>
        <function-ref name="edge" scoped="" ref="0x4057fb70"/>
        <function-ref name="enable" scoped="" ref="0x4057fc50"/>
        <function-ref name="getValue" scoped="" ref="0x4057fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x405851a0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x405851a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40585378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x40584a60" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x40584a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40584c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x405867d8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x405867d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405869b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x40585618" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x40585618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405857f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x40584ed8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x40584ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405860c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x40586c50" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x40586c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40586e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x405845e8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x405845e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405847c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x40586360" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x40586360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40586538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40587570" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40587570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40587748"/>
        <function-ref name="fired" scoped="" ref="0x40587828"/>
        <function-ref name="disable" scoped="" ref="0x40587908"/>
        <function-ref name="edge" scoped="" ref="0x405879e8"/>
        <function-ref name="enable" scoped="" ref="0x40587ac8"/>
        <function-ref name="getValue" scoped="" ref="0x40587ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40587d28" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40587d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40587f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x405a86c0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x405a86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a8898"/>
        <function-ref name="fired" scoped="" ref="0x405a8978"/>
        <function-ref name="disable" scoped="" ref="0x405a8a58"/>
        <function-ref name="edge" scoped="" ref="0x405a8b38"/>
        <function-ref name="enable" scoped="" ref="0x405a8c18"/>
        <function-ref name="getValue" scoped="" ref="0x405a8cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x405a8e78" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x405a8e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405a7070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x405a67a8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x405a67a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a6980"/>
        <function-ref name="fired" scoped="" ref="0x405a6a60"/>
        <function-ref name="disable" scoped="" ref="0x405a6b40"/>
        <function-ref name="edge" scoped="" ref="0x405a6c20"/>
        <function-ref name="enable" scoped="" ref="0x405a6d00"/>
        <function-ref name="getValue" scoped="" ref="0x405a6de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x405a5010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x405a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405a51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x405a4920" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x405a4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a4af8"/>
        <function-ref name="fired" scoped="" ref="0x405a4bd8"/>
        <function-ref name="disable" scoped="" ref="0x405a4cb8"/>
        <function-ref name="edge" scoped="" ref="0x405a4d98"/>
        <function-ref name="enable" scoped="" ref="0x405a4e78"/>
        <function-ref name="getValue" scoped="" ref="0x405a3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x405a3190" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x405a3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405a3368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x405b1bd0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x405b1bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b1da8"/>
        <function-ref name="fired" scoped="" ref="0x405b1e88"/>
        <function-ref name="disable" scoped="" ref="0x405b0010"/>
        <function-ref name="edge" scoped="" ref="0x405b00f0"/>
        <function-ref name="enable" scoped="" ref="0x405b01d0"/>
        <function-ref name="getValue" scoped="" ref="0x405b02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x405b0430" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x405b0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405b0608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x405afe68" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x405afe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405ae050"/>
        <function-ref name="fired" scoped="" ref="0x405ae130"/>
        <function-ref name="disable" scoped="" ref="0x405ae210"/>
        <function-ref name="edge" scoped="" ref="0x405ae2f0"/>
        <function-ref name="enable" scoped="" ref="0x405ae3d0"/>
        <function-ref name="getValue" scoped="" ref="0x405ae4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x405ae630" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x405ae630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405ae808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x405ac050" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x405ac050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405ac228"/>
        <function-ref name="fired" scoped="" ref="0x405ac308"/>
        <function-ref name="disable" scoped="" ref="0x405ac3e8"/>
        <function-ref name="edge" scoped="" ref="0x405ac4c8"/>
        <function-ref name="enable" scoped="" ref="0x405ac5a8"/>
        <function-ref name="getValue" scoped="" ref="0x405ac688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x405ac808" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x405ac808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405ac9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x405ba2b0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x405ba2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405ba488"/>
        <function-ref name="fired" scoped="" ref="0x405ba568"/>
        <function-ref name="disable" scoped="" ref="0x405ba648"/>
        <function-ref name="edge" scoped="" ref="0x405ba728"/>
        <function-ref name="enable" scoped="" ref="0x405ba808"/>
        <function-ref name="getValue" scoped="" ref="0x405ba8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x405baa68" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x405baa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405bac40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x405b3350" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x405b3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b3528"/>
        <function-ref name="fired" scoped="" ref="0x405b3608"/>
        <function-ref name="disable" scoped="" ref="0x405b36e8"/>
        <function-ref name="edge" scoped="" ref="0x405b37c8"/>
        <function-ref name="enable" scoped="" ref="0x405b38a8"/>
        <function-ref name="getValue" scoped="" ref="0x405b3988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x405cacb8" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x405cacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405cae90"/>
        <function-ref name="disable" scoped="" ref="0x405b3010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x405b30f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x405b31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x405c9430" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x405c9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405c9608"/>
        <function-ref name="fired" scoped="" ref="0x405c96e8"/>
        <function-ref name="disable" scoped="" ref="0x405c97c8"/>
        <function-ref name="edge" scoped="" ref="0x405c98a8"/>
        <function-ref name="enable" scoped="" ref="0x405c9988"/>
        <function-ref name="getValue" scoped="" ref="0x405c9a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x405c2e20" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x405c2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405c9010"/>
        <function-ref name="disable" scoped="" ref="0x405c90f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x405c91d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x405c92b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x405c74e0" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x405c74e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405c76b8"/>
        <function-ref name="fired" scoped="" ref="0x405c7798"/>
        <function-ref name="disable" scoped="" ref="0x405c7878"/>
        <function-ref name="edge" scoped="" ref="0x405c7958"/>
        <function-ref name="enable" scoped="" ref="0x405c7a38"/>
        <function-ref name="getValue" scoped="" ref="0x405c7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x405c8ed0" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x405c8ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405c70c0"/>
        <function-ref name="disable" scoped="" ref="0x405c71a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x405c7280"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x405c7360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x405c5608" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x405c5608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405c57e0"/>
        <function-ref name="fired" scoped="" ref="0x405c58c0"/>
        <function-ref name="disable" scoped="" ref="0x405c59a0"/>
        <function-ref name="edge" scoped="" ref="0x405c5a80"/>
        <function-ref name="enable" scoped="" ref="0x405c5b60"/>
        <function-ref name="getValue" scoped="" ref="0x405c5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x405c5010" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x405c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405c51e8"/>
        <function-ref name="disable" scoped="" ref="0x405c52c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x405c53a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x405c5488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x405d9010" loc="58:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x405d9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x405d91e8"/>
        <function-ref name="configure" scoped="" ref="0x405d92c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x405de870" loc="56:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x405de870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x405dea48"/>
        <function-ref name="dataReady" scoped="" ref="0x405deb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x405e2300" loc="55:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x405e2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x405e24d8"/>
        <function-ref name="cancel" scoped="" ref="0x405e25b8"/>
        <function-ref name="dataReady" scoped="" ref="0x405e2698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x405d5670" loc="54:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x405d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405d5848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405d5928"/>
        <function-ref name="request" scoped="" ref="0x405d5a08"/>
        <function-ref name="granted" scoped="" ref="0x405d5ae8"/>
        <function-ref name="isOwner" scoped="" ref="0x405d5bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405d9c20" loc="85:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405d9c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405d9df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x405eaa28" loc="88:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x405eaa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x405eac00"/>
        <function-ref name="dataReady" scoped="" ref="0x405eace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x405ea4a0" loc="87:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x405ea4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x405ea678"/>
        <function-ref name="cancel" scoped="" ref="0x405ea758"/>
        <function-ref name="dataReady" scoped="" ref="0x405ea838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x405ef338" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x405ef338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x405ef510"/>
        <function-ref name="getAdmux" scoped="" ref="0x405ef5f0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x405ef6d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x405ef7b0"/>
        <function-ref name="enableAdc" scoped="" ref="0x405ef890"/>
        <function-ref name="setAdmux" scoped="" ref="0x405ef970"/>
        <function-ref name="enableInterruption" scoped="" ref="0x405efa50"/>
        <function-ref name="isComplete" scoped="" ref="0x405efb30"/>
        <function-ref name="cancel" scoped="" ref="0x405efc10"/>
        <function-ref name="disableAdc" scoped="" ref="0x405efcf0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x405efdd0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x405efeb0"/>
        <function-ref name="startConversion" scoped="" ref="0x405e8010"/>
        <function-ref name="isStarted" scoped="" ref="0x405e8170"/>
        <function-ref name="setAdcsra" scoped="" ref="0x405e8250"/>
        <function-ref name="setContinuous" scoped="" ref="0x405e8330"/>
        <function-ref name="getAdcsra" scoped="" ref="0x405e8410"/>
        <function-ref name="getValue" scoped="" ref="0x405e84f0"/>
        <function-ref name="dataReady" scoped="" ref="0x405e85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x405ea010" loc="86:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x405ea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405ea1e8"/>
        <function-ref name="stop" scoped="" ref="0x405ea2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x405e87a8" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x405e87a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x405e8980"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x405e8a60"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x405e8b40"/>
        <function-ref name="actualMicro" scoped="" ref="0x405e8c20"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x405e8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x405d8938" loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x405d8938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x405d8b10"/>
        <function-ref name="getAdmux" scoped="" ref="0x405d8bf0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x405d8cd0"/>
        <function-ref name="isEnabled" scoped="" ref="0x405d8db0"/>
        <function-ref name="enableAdc" scoped="" ref="0x405d8e90"/>
        <function-ref name="setAdmux" scoped="" ref="0x40605010"/>
        <function-ref name="enableInterruption" scoped="" ref="0x406050f0"/>
        <function-ref name="isComplete" scoped="" ref="0x406051d0"/>
        <function-ref name="cancel" scoped="" ref="0x406052b0"/>
        <function-ref name="disableAdc" scoped="" ref="0x40605390"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40605470"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40605550"/>
        <function-ref name="startConversion" scoped="" ref="0x40605630"/>
        <function-ref name="isStarted" scoped="" ref="0x40605790"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40605870"/>
        <function-ref name="setContinuous" scoped="" ref="0x40605950"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40605a30"/>
        <function-ref name="getValue" scoped="" ref="0x40605b10"/>
        <function-ref name="dataReady" scoped="" ref="0x40605bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x406045f0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x406045f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x406047c8"/>
        <function-ref name="getAdmux" scoped="" ref="0x406048a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40604988"/>
        <function-ref name="isEnabled" scoped="" ref="0x40604a68"/>
        <function-ref name="enableAdc" scoped="" ref="0x40604b48"/>
        <function-ref name="setAdmux" scoped="" ref="0x40604c28"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40604d08"/>
        <function-ref name="isComplete" scoped="" ref="0x40604de8"/>
        <function-ref name="cancel" scoped="" ref="0x40604ec8"/>
        <function-ref name="disableAdc" scoped="" ref="0x40612010"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x406120f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x406121d0"/>
        <function-ref name="startConversion" scoped="" ref="0x406122b0"/>
        <function-ref name="isStarted" scoped="" ref="0x40612410"/>
        <function-ref name="setAdcsra" scoped="" ref="0x406124f0"/>
        <function-ref name="setContinuous" scoped="" ref="0x406125d0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x406126b0"/>
        <function-ref name="getValue" scoped="" ref="0x40612790"/>
        <function-ref name="dataReady" scoped="" ref="0x40612870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40612a58" loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40612a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40612c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40674068" loc="92:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40674068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40674250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40674330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40673010" loc="96:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40673010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406731f8"/>
        <function-ref name="configure" scoped="" ref="0x406732d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40674470" loc="93:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40674470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40674648"/>
        <function-ref name="requested" scoped="" ref="0x40674728"/>
        <function-ref name="granted" scoped="" ref="0x40674808"/>
        <function-ref name="isOwner" scoped="" ref="0x406748e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406749c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4062a910" loc="91:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4062a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4062aaf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4062abd8"/>
        <function-ref name="request" scoped="" ref="0x4062acb8"/>
        <function-ref name="granted" scoped="" ref="0x4062ad98"/>
        <function-ref name="isOwner" scoped="" ref="0x4062ae78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40674b08" loc="94:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40674b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40674ce0"/>
        <function-ref name="userId" scoped="" ref="0x40674dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410a0c20" loc="44:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410a0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410a0df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x4109e010" loc="45:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x4109e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4109e1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4109e2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4109e3a8"/>
        <function-ref name="dequeue" scoped="" ref="0x4109e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4109d8b0" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4109d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4109da98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4109db78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4109b8b0" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4109b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4109ba98"/>
        <function-ref name="configure" scoped="" ref="0x4109bb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4109bcd8" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4109bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4109beb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x4109a010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4109a0f0"/>
        <function-ref name="dequeue" scoped="" ref="0x4109a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4109dcb8" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4109dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4109de90"/>
        <function-ref name="requested" scoped="" ref="0x4109b010"/>
        <function-ref name="granted" scoped="" ref="0x4109b0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4109b1d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4109b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4109a310" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4109a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4109a4e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4109a5c8"/>
        <function-ref name="led1On" scoped="" ref="0x4109a6a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4109a788"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4109a868"/>
        <function-ref name="get" scoped="" ref="0x4109a948"/>
        <function-ref name="led1Off" scoped="" ref="0x4109aa28"/>
        <function-ref name="led0On" scoped="" ref="0x4109ada8"/>
        <function-ref name="set" scoped="" ref="0x4109abe8"/>
        <function-ref name="led2On" scoped="" ref="0x4109ab08"/>
        <function-ref name="led2Off" scoped="" ref="0x4109acc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4109d170" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4109d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4109d358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4109d438"/>
        <function-ref name="request" scoped="" ref="0x4109d518"/>
        <function-ref name="granted" scoped="" ref="0x4109d5f8"/>
        <function-ref name="isOwner" scoped="" ref="0x4109d6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4109b3f0" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4109b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4109b5c8"/>
        <function-ref name="userId" scoped="" ref="0x4109b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4109af28" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4109af28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41099110"/>
        <function-ref name="runTask" scoped="" ref="0x410991f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40672de8" loc="72:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40672de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40671010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40671150" loc="73:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40671150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40671328"/>
        <function-ref name="requested" scoped="" ref="0x40671408"/>
        <function-ref name="granted" scoped="" ref="0x406714e8"/>
        <function-ref name="isOwner" scoped="" ref="0x406715c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406716a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x406729f0" loc="70:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x406729f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40672bc8"/>
        <function-ref name="stop" scoped="" ref="0x40672ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x406717e8" loc="74:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406717e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406719c0"/>
        <function-ref name="userId" scoped="" ref="0x40671aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x410bcdb0" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x410bcdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x410ba010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x410ba150" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410ba150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410ba328"/>
        <function-ref name="requested" scoped="" ref="0x410ba408"/>
        <function-ref name="granted" scoped="" ref="0x410ba4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x410ba5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410ba6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x410bc9b8" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x410bc9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410bcb90"/>
        <function-ref name="stop" scoped="" ref="0x410bcc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x410ba7e8" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410ba7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410ba9c0"/>
        <function-ref name="userId" scoped="" ref="0x410baaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40688858" loc="44:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="TestMicrophoneAppC.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40688858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40688a30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40688b10"/>
        <function-ref name="request" scoped="" ref="0x40688bf0"/>
        <function-ref name="granted" scoped="" ref="0x40688cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x40688db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40687010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="TestMicrophoneAppC.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40687010"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40684c48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40684db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40687658"/>
        <function-ref name="writeDone" scoped="" ref="0x407488e0"/>
        <function-ref name="write" scoped="" ref="0x40687c78"/>
        <function-ref name="readDone" scoped="" ref="0x407482c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4069f348" loc="45:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4069f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4069f520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4069f600"/>
        <function-ref name="request" scoped="" ref="0x4069f6e0"/>
        <function-ref name="granted" scoped="" ref="0x4069f7c0"/>
        <function-ref name="isOwner" scoped="" ref="0x4069f8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x4069fe80" loc="46:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4069fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40684c48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40684db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4069e4d8"/>
        <function-ref name="writeDone" scoped="" ref="0x4069c778"/>
        <function-ref name="write" scoped="" ref="0x4069eaf8"/>
        <function-ref name="readDone" scoped="" ref="0x4069c158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40699d38" loc="92:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40699d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40699f20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406bd018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406bdca0" loc="96:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406bdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406bde88"/>
        <function-ref name="configure" scoped="" ref="0x406bb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x406bd158" loc="93:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406bd158"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406bd330"/>
        <function-ref name="requested" scoped="" ref="0x406bd410"/>
        <function-ref name="granted" scoped="" ref="0x406bd4f0"/>
        <function-ref name="isOwner" scoped="" ref="0x406bd5d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406bd6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406995f8" loc="91:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406995f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406997e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406998c0"/>
        <function-ref name="request" scoped="" ref="0x406999a0"/>
        <function-ref name="granted" scoped="" ref="0x40699a80"/>
        <function-ref name="isOwner" scoped="" ref="0x40699b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x406bd7f0" loc="94:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406bd7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406bd9c8"/>
        <function-ref name="userId" scoped="" ref="0x406bdaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410ec750" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410ec750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410ec928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x410eca88" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x410eca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410ecc60"/>
        <function-ref name="isEmpty" scoped="" ref="0x410ecd40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410ece20"/>
        <function-ref name="dequeue" scoped="" ref="0x410ecf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410e93a8" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410e93a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410e9590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410e9670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410e8338" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410e8338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410e8520"/>
        <function-ref name="configure" scoped="" ref="0x410e8600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x410e8760" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410e8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410e8938"/>
        <function-ref name="isEmpty" scoped="" ref="0x410e8a18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410e8af8"/>
        <function-ref name="dequeue" scoped="" ref="0x410e8bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x410e97b0" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410e97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410e9988"/>
        <function-ref name="requested" scoped="" ref="0x410e9a68"/>
        <function-ref name="granted" scoped="" ref="0x410e9b48"/>
        <function-ref name="isOwner" scoped="" ref="0x410e9c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410e9d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x410e8d18" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410e8d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x410e8ef0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x410e7010"/>
        <function-ref name="led1On" scoped="" ref="0x410e70f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410e71d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410e72b0"/>
        <function-ref name="get" scoped="" ref="0x410e7390"/>
        <function-ref name="led1Off" scoped="" ref="0x410e7470"/>
        <function-ref name="led0On" scoped="" ref="0x410e77f0"/>
        <function-ref name="set" scoped="" ref="0x410e7630"/>
        <function-ref name="led2On" scoped="" ref="0x410e7550"/>
        <function-ref name="led2Off" scoped="" ref="0x410e7710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410ebbf0" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410ebbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410ebdd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410ebeb8"/>
        <function-ref name="request" scoped="" ref="0x410e9010"/>
        <function-ref name="granted" scoped="" ref="0x410e90f0"/>
        <function-ref name="isOwner" scoped="" ref="0x410e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410e9e48" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410e9e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410e8050"/>
        <function-ref name="userId" scoped="" ref="0x410e8130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x410e7970" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x410e7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410e7b48"/>
        <function-ref name="runTask" scoped="" ref="0x410e7c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x406ba2e0" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x406ba2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x406ba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x406ba5f8" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406ba5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406ba7d0"/>
        <function-ref name="requested" scoped="" ref="0x406ba8b0"/>
        <function-ref name="granted" scoped="" ref="0x406ba990"/>
        <function-ref name="isOwner" scoped="" ref="0x406baa70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406bab50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x406bbeb8" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x406bbeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406ba0c0"/>
        <function-ref name="stop" scoped="" ref="0x406ba1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x406bac90" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406bac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406bae68"/>
        <function-ref name="userId" scoped="" ref="0x406b9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x406e6dd8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x406e6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x406e4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x406d4f20" loc="44:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x406d4f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40684c48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40684db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406d3580"/>
        <function-ref name="writeDone" scoped="" ref="0x406e6800"/>
        <function-ref name="write" scoped="" ref="0x406d3ba0"/>
        <function-ref name="readDone" scoped="" ref="0x406e61e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406b8010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406b81f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406b82d8"/>
        <function-ref name="request" scoped="" ref="0x406b83b8"/>
        <function-ref name="granted" scoped="" ref="0x406b8498"/>
        <function-ref name="isOwner" scoped="" ref="0x406b8578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x406b8800" loc="42:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x406b8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40684c48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40684db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406b8e58"/>
        <function-ref name="writeDone" scoped="" ref="0x406d4128"/>
        <function-ref name="write" scoped="" ref="0x406d5498"/>
        <function-ref name="readDone" scoped="" ref="0x406d5ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x406d47a8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x406d47a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406d4990"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406d4a70"/>
        <function-ref name="request" scoped="" ref="0x406d4b50"/>
        <function-ref name="granted" scoped="" ref="0x406d4c30"/>
        <function-ref name="isOwner" scoped="" ref="0x406d4d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x40714dd8" loc="78:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40714dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40713010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x40713190" loc="80:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40713190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40713368"/>
        <function-ref name="sendCommand" scoped="" ref="0x40713448"/>
        <function-ref name="setStart" scoped="" ref="0x40713528"/>
        <function-ref name="status" scoped="" ref="0x40713608"/>
        <function-ref name="hasAcks" scoped="" ref="0x407136e8"/>
        <function-ref name="isEnabled" scoped="" ref="0x407137c8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x407138a8"/>
        <function-ref name="read" scoped="" ref="0x40713988"/>
        <function-ref name="init" scoped="" ref="0x40713a68"/>
        <function-ref name="enableAck" scoped="" ref="0x40713b48"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40713c28"/>
        <function-ref name="hasStart" scoped="" ref="0x40713d08"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40713de8"/>
        <function-ref name="commandComplete" scoped="" ref="0x40712010"/>
        <function-ref name="enable" scoped="" ref="0x407120f0"/>
        <function-ref name="write" scoped="" ref="0x407121d0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x407122b0"/>
        <function-ref name="off" scoped="" ref="0x40712390"/>
        <function-ref name="setStop" scoped="" ref="0x40712470"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40712550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40712630"/>
        <function-ref name="hasStop" scoped="" ref="0x40712710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x40712890" loc="81:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x40712890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40712a68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40712b48"/>
        <function-ref name="led1On" scoped="" ref="0x40712c28"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40712d08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40712de8"/>
        <function-ref name="get" scoped="" ref="0x40712ec8"/>
        <function-ref name="led1Off" scoped="" ref="0x40711010"/>
        <function-ref name="led2On" scoped="" ref="0x40711390"/>
        <function-ref name="set" scoped="" ref="0x407111d0"/>
        <function-ref name="led2Off" scoped="" ref="0x407110f0"/>
        <function-ref name="led0On" scoped="" ref="0x407112b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x40711510" loc="82:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x40711510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407116e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407117c8"/>
        <function-ref name="led1On" scoped="" ref="0x407118a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40711988"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40711a68"/>
        <function-ref name="get" scoped="" ref="0x40711b48"/>
        <function-ref name="led1Off" scoped="" ref="0x40711c28"/>
        <function-ref name="led2On" scoped="" ref="0x40725010"/>
        <function-ref name="set" scoped="" ref="0x40711de8"/>
        <function-ref name="led2Off" scoped="" ref="0x40711d08"/>
        <function-ref name="led0On" scoped="" ref="0x40711ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x406e3a20" loc="76:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x406e3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406e3bf8"/>
        <function-ref name="stop" scoped="" ref="0x406e3cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x406e3ec8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x406e3ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40684c48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40684db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406e2578"/>
        <function-ref name="writeDone" scoped="" ref="0x40714800"/>
        <function-ref name="write" scoped="" ref="0x406e2b98"/>
        <function-ref name="readDone" scoped="" ref="0x407141e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x407249b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x407249b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40724b88"/>
        <function-ref name="sendCommand" scoped="" ref="0x40724c68"/>
        <function-ref name="setStart" scoped="" ref="0x40724d48"/>
        <function-ref name="status" scoped="" ref="0x40724e28"/>
        <function-ref name="hasAcks" scoped="" ref="0x40724f08"/>
        <function-ref name="isEnabled" scoped="" ref="0x40721010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x407210f0"/>
        <function-ref name="read" scoped="" ref="0x407211d0"/>
        <function-ref name="init" scoped="" ref="0x407212b0"/>
        <function-ref name="enableAck" scoped="" ref="0x40721390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40721470"/>
        <function-ref name="hasStart" scoped="" ref="0x40721550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40721630"/>
        <function-ref name="commandComplete" scoped="" ref="0x40721790"/>
        <function-ref name="enable" scoped="" ref="0x40721870"/>
        <function-ref name="write" scoped="" ref="0x40721950"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40721a30"/>
        <function-ref name="off" scoped="" ref="0x40721b10"/>
        <function-ref name="setStop" scoped="" ref="0x40721bf0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40721cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40721db0"/>
        <function-ref name="hasStop" scoped="" ref="0x40721e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40720a80" loc="50:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40720a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40720c58"/>
        <function-ref name="sendCommand" scoped="" ref="0x40720d38"/>
        <function-ref name="setStart" scoped="" ref="0x40720e18"/>
        <function-ref name="status" scoped="" ref="0x40720ef8"/>
        <function-ref name="hasAcks" scoped="" ref="0x4071c010"/>
        <function-ref name="isEnabled" scoped="" ref="0x4071c0f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x4071c1d0"/>
        <function-ref name="read" scoped="" ref="0x4071c2b0"/>
        <function-ref name="init" scoped="" ref="0x4071c390"/>
        <function-ref name="enableAck" scoped="" ref="0x4071c470"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4071c550"/>
        <function-ref name="hasStart" scoped="" ref="0x4071c630"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4071c710"/>
        <function-ref name="commandComplete" scoped="" ref="0x4071c870"/>
        <function-ref name="enable" scoped="" ref="0x4071c950"/>
        <function-ref name="write" scoped="" ref="0x4071ca30"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x4071cb10"/>
        <function-ref name="off" scoped="" ref="0x4071cbf0"/>
        <function-ref name="setStop" scoped="" ref="0x4071ccd0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x4071cdb0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x4071ce90"/>
        <function-ref name="hasStop" scoped="" ref="0x40731010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x40731240" loc="53:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x40731240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40731418"/>
        <function-ref name="isInput" scoped="" ref="0x407314f8"/>
        <function-ref name="toggle" scoped="" ref="0x407315d8"/>
        <function-ref name="isOutput" scoped="" ref="0x407316b8"/>
        <function-ref name="get" scoped="" ref="0x40731798"/>
        <function-ref name="makeOutput" scoped="" ref="0x40731878"/>
        <function-ref name="set" scoped="" ref="0x40731958"/>
        <function-ref name="clr" scoped="" ref="0x40731a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x40731c40" loc="54:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x40731c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40731e18"/>
        <function-ref name="isInput" scoped="" ref="0x40731ef8"/>
        <function-ref name="toggle" scoped="" ref="0x40730010"/>
        <function-ref name="isOutput" scoped="" ref="0x407300f0"/>
        <function-ref name="get" scoped="" ref="0x407301d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407302b0"/>
        <function-ref name="set" scoped="" ref="0x40730390"/>
        <function-ref name="clr" scoped="" ref="0x40730470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4073e1b8" loc="46:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4073e1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4073e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4073e520" loc="47:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4073e520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4073e6f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4073e7d8"/>
        <function-ref name="led1On" scoped="" ref="0x4073e8b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4073e998"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4073ea78"/>
        <function-ref name="get" scoped="" ref="0x4073eb58"/>
        <function-ref name="led1Off" scoped="" ref="0x4073ec38"/>
        <function-ref name="led2Off" scoped="" ref="0x4073d010"/>
        <function-ref name="set" scoped="" ref="0x4073ed18"/>
        <function-ref name="led0On" scoped="" ref="0x4073edf8"/>
        <function-ref name="led2On" scoped="" ref="0x4073eed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40757980" loc="3:MicrophoneC.nc">
      <component-ref qname="MicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40757980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40757b58"/>
        <function-ref name="stopDone" scoped="" ref="0x40757c38"/>
        <function-ref name="start" scoped="" ref="0x40757d18"/>
        <function-ref name="stop" scoped="" ref="0x40757df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicMuxSel" ref="0x40765950" loc="7:MicrophoneC.nc">
      <component-ref qname="MicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicMuxSel" scoped="" ref="0x40765950"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40765b28"/>
        <function-ref name="isInput" scoped="" ref="0x40765c08"/>
        <function-ref name="toggle" scoped="" ref="0x40765ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x40765dc8"/>
        <function-ref name="get" scoped="" ref="0x40765ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40764010"/>
        <function-ref name="set" scoped="" ref="0x407640f0"/>
        <function-ref name="clr" scoped="" ref="0x407641d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicWarnupTimer" ref="0x40767c58" loc="5:MicrophoneC.nc">
      <component-ref qname="MicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicWarnupTimer" scoped="" ref="0x40767c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40755790"/>
        <function-ref name="fired" scoped="" ref="0x40756a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40755150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40756ed0"/>
        <function-ref name="getdt" scoped="" ref="0x40755c40"/>
        <function-ref name="gett0" scoped="" ref="0x407559e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40756c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407562c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40755470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40756548"/>
        <function-ref name="stop" scoped="" ref="0x407567c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicPower" ref="0x40755f28" loc="6:MicrophoneC.nc">
      <component-ref qname="MicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicPower" scoped="" ref="0x40755f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40765110"/>
        <function-ref name="isInput" scoped="" ref="0x407651f0"/>
        <function-ref name="toggle" scoped="" ref="0x407652d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407653b0"/>
        <function-ref name="get" scoped="" ref="0x40765490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40765570"/>
        <function-ref name="set" scoped="" ref="0x40765650"/>
        <function-ref name="clr" scoped="" ref="0x40765730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="gainOk" ref="0x40760c20" loc="23:MicrophoneC.nc">
      <component-ref qname="MicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="gainOk" scoped="" ref="0x40760c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40760df8"/>
        <function-ref name="runTask" scoped="" ref="0x40760ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x4075fb38" loc="23:MicrophoneC.nc">
      <component-ref qname="MicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x4075fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4075fd10"/>
        <function-ref name="runTask" scoped="" ref="0x4075fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40761428" loc="9:MicrophoneC.nc">
      <component-ref qname="MicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40761428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40761600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407616e0"/>
        <function-ref name="request" scoped="" ref="0x407617c0"/>
        <function-ref name="granted" scoped="" ref="0x407618a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40761980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40764488" loc="8:MicrophoneC.nc">
      <component-ref qname="MicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40764488"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40684c48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40684db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40764ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x40763d68"/>
        <function-ref name="write" scoped="" ref="0x40763128"/>
        <function-ref name="readDone" scoped="" ref="0x40763748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="gainFail" ref="0x4075f3c8" loc="23:MicrophoneC.nc">
      <component-ref qname="MicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="gainFail" scoped="" ref="0x4075f3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4075f5a0"/>
        <function-ref name="runTask" scoped="" ref="0x4075f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4077cb60" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TestMicrophoneAppC.MicWarnupTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4077cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407766a8"/>
        <function-ref name="fired" scoped="" ref="0x4077b938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40776068"/>
        <function-ref name="isOneShot" scoped="" ref="0x4077bde8"/>
        <function-ref name="getdt" scoped="" ref="0x40776b58"/>
        <function-ref name="gett0" scoped="" ref="0x40776900"/>
        <function-ref name="isRunning" scoped="" ref="0x4077bb90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4077b1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40776388"/>
        <function-ref name="startOneShot" scoped="" ref="0x4077b460"/>
        <function-ref name="stop" scoped="" ref="0x4077b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x407751b0" loc="49:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407751b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40774d58"/>
        <function-ref name="fired" scoped="" ref="0x40774010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40774718"/>
        <function-ref name="isOneShot" scoped="" ref="0x407744c0"/>
        <function-ref name="getdt" scoped="" ref="0x40789268"/>
        <function-ref name="gett0" scoped="" ref="0x40789010"/>
        <function-ref name="isRunning" scoped="" ref="0x40774268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407757d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40774a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40775a58"/>
        <function-ref name="stop" scoped="" ref="0x40775cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x407862b0" loc="46:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407862b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40785d90"/>
        <function-ref name="fired" scoped="" ref="0x40785048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40785750"/>
        <function-ref name="isOneShot" scoped="" ref="0x407854f8"/>
        <function-ref name="getdt" scoped="" ref="0x40783268"/>
        <function-ref name="gett0" scoped="" ref="0x40783010"/>
        <function-ref name="isRunning" scoped="" ref="0x407852a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407868d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40785a70"/>
        <function-ref name="startOneShot" scoped="" ref="0x40786b58"/>
        <function-ref name="stop" scoped="" ref="0x40786dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40780310" loc="47:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40780310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40780958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40789ae8" loc="45:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40789ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40789cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x4078cda0" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x4078cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4078f508"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4078f9f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4078f780"/>
        <function-ref name="overflow" scoped="" ref="0x4078fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407829d8" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407829d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40782bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x407961c8" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x407961c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40795690"/>
        <function-ref name="fired" scoped="" ref="0x40796e30"/>
        <function-ref name="startAt" scoped="" ref="0x40795350"/>
        <function-ref name="isRunning" scoped="" ref="0x407950d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40795908"/>
        <function-ref name="start" scoped="" ref="0x40796918"/>
        <function-ref name="stop" scoped="" ref="0x40796bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x408260c0" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408260c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408255c8"/>
        <function-ref name="fired" scoped="" ref="0x40826d28"/>
        <function-ref name="startAt" scoped="" ref="0x40825288"/>
        <function-ref name="isRunning" scoped="" ref="0x40825010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40825840"/>
        <function-ref name="start" scoped="" ref="0x40826810"/>
        <function-ref name="stop" scoped="" ref="0x40826ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407a2c78" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407a2c78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034b5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034b5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407a2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40825b70" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40825b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40824308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408247f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40824580"/>
        <function-ref name="overflow" scoped="" ref="0x40824a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41111a78" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41111a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x41111c50"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41111d30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41111e10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41111ef0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x41110010"/>
        <function-ref name="setControl" scoped="" ref="0x411100f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41118c50" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41118c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41115150"/>
        <function-ref name="fired" scoped="" ref="0x41116908"/>
        <function-ref name="startAt" scoped="" ref="0x41116df8"/>
        <function-ref name="isRunning" scoped="" ref="0x41116b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x411153c8"/>
        <function-ref name="start" scoped="" ref="0x411163f0"/>
        <function-ref name="stop" scoped="" ref="0x41116690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41118818" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41118818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411189f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x411156f8" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x411156f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41115e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41114350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x411140d8"/>
        <function-ref name="overflow" scoped="" ref="0x411145c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x4110fce8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4110fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x4110fec0"/>
        <function-ref name="compareBusy" scoped="" ref="0x4110d010"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x4110d0f0"/>
        <function-ref name="countBusy" scoped="" ref="0x4110d1d0"/>
        <function-ref name="getAssr" scoped="" ref="0x4110d2b0"/>
        <function-ref name="setAssr" scoped="" ref="0x4110d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x411102e0" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x411102e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4110f840"/>
        <function-ref name="fired" scoped="" ref="0x41110e40"/>
        <function-ref name="get" scoped="" ref="0x41110928"/>
        <function-ref name="reset" scoped="" ref="0x4110f0d8"/>
        <function-ref name="isOn" scoped="" ref="0x4110fab8"/>
        <function-ref name="set" scoped="" ref="0x41110ba0"/>
        <function-ref name="start" scoped="" ref="0x4110f350"/>
        <function-ref name="stop" scoped="" ref="0x4110f5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x411148b8" loc="30:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411148b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41111330"/>
        <function-ref name="test" scoped="" ref="0x41113e20"/>
        <function-ref name="get" scoped="" ref="0x41114f00"/>
        <function-ref name="setScale" scoped="" ref="0x411115a8"/>
        <function-ref name="getScale" scoped="" ref="0x41111848"/>
        <function-ref name="reset" scoped="" ref="0x411136b8"/>
        <function-ref name="overflow" scoped="" ref="0x41113440"/>
        <function-ref name="isOn" scoped="" ref="0x411110b8"/>
        <function-ref name="set" scoped="" ref="0x411131a0"/>
        <function-ref name="start" scoped="" ref="0x41113930"/>
        <function-ref name="stop" scoped="" ref="0x41113ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407e8010" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x407e81e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407e82c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407e83a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407e8488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407e8568"/>
        <function-ref name="setControl" scoped="" ref="0x407e8648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407e64f8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407e64f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x407e66d0"/>
        <function-ref name="compareBusy" scoped="" ref="0x407e67b0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x407e6890"/>
        <function-ref name="countBusy" scoped="" ref="0x407e6970"/>
        <function-ref name="getAssr" scoped="" ref="0x407e6a50"/>
        <function-ref name="setAssr" scoped="" ref="0x407e6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407e8970" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407e8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407e7f08"/>
        <function-ref name="fired" scoped="" ref="0x407e7528"/>
        <function-ref name="get" scoped="" ref="0x407e7010"/>
        <function-ref name="reset" scoped="" ref="0x407e77a0"/>
        <function-ref name="isOn" scoped="" ref="0x407e61a0"/>
        <function-ref name="set" scoped="" ref="0x407e7288"/>
        <function-ref name="start" scoped="" ref="0x407e7a18"/>
        <function-ref name="stop" scoped="" ref="0x407e7c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407d6ca8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407d6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407e9778"/>
        <function-ref name="test" scoped="" ref="0x407e9288"/>
        <function-ref name="get" scoped="" ref="0x407d3308"/>
        <function-ref name="setScale" scoped="" ref="0x407e99f0"/>
        <function-ref name="getScale" scoped="" ref="0x407e9c90"/>
        <function-ref name="reset" scoped="" ref="0x407d3a98"/>
        <function-ref name="overflow" scoped="" ref="0x407d3820"/>
        <function-ref name="isOn" scoped="" ref="0x407e9500"/>
        <function-ref name="set" scoped="" ref="0x407d3580"/>
        <function-ref name="start" scoped="" ref="0x407d3d10"/>
        <function-ref name="stop" scoped="" ref="0x407e9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407e0af0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407e0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x407e0cc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407e0da8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407e0e88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407df010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407df0f0"/>
        <function-ref name="setControl" scoped="" ref="0x407df1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407f4010" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407f41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407f4470" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407f4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x407f4648"/>
        <function-ref name="compareBusy" scoped="" ref="0x407f4728"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x407f4808"/>
        <function-ref name="countBusy" scoped="" ref="0x407f48e8"/>
        <function-ref name="getAssr" scoped="" ref="0x407f49c8"/>
        <function-ref name="setAssr" scoped="" ref="0x407f4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407df4f8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407df4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407f6a48"/>
        <function-ref name="fired" scoped="" ref="0x407f6068"/>
        <function-ref name="get" scoped="" ref="0x407dfb40"/>
        <function-ref name="reset" scoped="" ref="0x407f62e0"/>
        <function-ref name="isOn" scoped="" ref="0x407f6cc0"/>
        <function-ref name="set" scoped="" ref="0x407dfdb8"/>
        <function-ref name="start" scoped="" ref="0x407f6558"/>
        <function-ref name="stop" scoped="" ref="0x407f67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407e57d8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407e57d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407e0288"/>
        <function-ref name="test" scoped="" ref="0x407e1d38"/>
        <function-ref name="get" scoped="" ref="0x407e5e20"/>
        <function-ref name="setScale" scoped="" ref="0x407e0500"/>
        <function-ref name="getScale" scoped="" ref="0x407e07a0"/>
        <function-ref name="reset" scoped="" ref="0x407e15d0"/>
        <function-ref name="overflow" scoped="" ref="0x407e1358"/>
        <function-ref name="isOn" scoped="" ref="0x407e0010"/>
        <function-ref name="set" scoped="" ref="0x407e10b8"/>
        <function-ref name="start" scoped="" ref="0x407e1848"/>
        <function-ref name="stop" scoped="" ref="0x407e1ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x4083ebd0" loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x4083ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4083eda8"/>
        <function-ref name="runTask" scoped="" ref="0x4083ee88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4083f248" loc="49:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4083f248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4083e708"/>
        <function-ref name="fired" scoped="" ref="0x4083feb0"/>
        <function-ref name="startAt" scoped="" ref="0x4083e3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4083e150"/>
        <function-ref name="getAlarm" scoped="" ref="0x4083e980"/>
        <function-ref name="start" scoped="" ref="0x4083f998"/>
        <function-ref name="stop" scoped="" ref="0x4083fc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4077ff08" loc="48:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4077ff08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40840a18"/>
        <function-ref name="fired" scoped="" ref="0x40841cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408403d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40840180"/>
        <function-ref name="getdt" scoped="" ref="0x40840ec8"/>
        <function-ref name="gett0" scoped="" ref="0x40840c70"/>
        <function-ref name="isRunning" scoped="" ref="0x40841f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40841558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408406f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x408417d8"/>
        <function-ref name="stop" scoped="" ref="0x40841a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4085e4b8" loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4085e4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4085e690"/>
        <function-ref name="runTask" scoped="" ref="0x4085e770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40861220" loc="49:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40861220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4085fd58"/>
        <function-ref name="fired" scoped="" ref="0x4085f010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4085f718"/>
        <function-ref name="isOneShot" scoped="" ref="0x4085f4c0"/>
        <function-ref name="getdt" scoped="" ref="0x4085e268"/>
        <function-ref name="gett0" scoped="" ref="0x4085e010"/>
        <function-ref name="isRunning" scoped="" ref="0x4085f268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40861848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4085fa38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40861ac8"/>
        <function-ref name="stop" scoped="" ref="0x40861d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4083bea8" loc="48:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4083bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40862a48"/>
        <function-ref name="fired" scoped="" ref="0x4083ac88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408623e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40862180"/>
        <function-ref name="getdt" scoped="" ref="0x40862f18"/>
        <function-ref name="gett0" scoped="" ref="0x40862cb0"/>
        <function-ref name="isRunning" scoped="" ref="0x4083aef0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4083a500"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40862718"/>
        <function-ref name="startOneShot" scoped="" ref="0x4083a790"/>
        <function-ref name="stop" scoped="" ref="0x4083aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40876940" loc="48:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40876940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40874010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40874360" loc="49:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40874360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40874ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4086f010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40874d28"/>
        <function-ref name="overflow" scoped="" ref="0x4086f288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4087ed00" loc="10:TestMicrophoneC.nc">
      <component-ref qname="TestMicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4087ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4087eed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40880180" loc="12:TestMicrophoneC.nc">
      <component-ref qname="TestMicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40880180"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40880358"/>
        <function-ref name="stopDone" scoped="" ref="0x40880438"/>
        <function-ref name="start" scoped="" ref="0x40880518"/>
        <function-ref name="stop" scoped="" ref="0x408805f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Microphone" ref="0x40881258" loc="8:TestMicrophoneC.nc">
      <component-ref qname="TestMicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Microphone" scoped="" ref="0x40881258"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40881430"/>
        <function-ref name="stopDone" scoped="" ref="0x40881510"/>
        <function-ref name="start" scoped="" ref="0x408815f0"/>
        <function-ref name="stop" scoped="" ref="0x408816d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x408854c8" loc="4:TestMicrophoneC.nc">
      <component-ref qname="TestMicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcResource" scoped="" ref="0x408854c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408856a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40885780"/>
        <function-ref name="request" scoped="" ref="0x40885860"/>
        <function-ref name="granted" scoped="" ref="0x40885940"/>
        <function-ref name="isOwner" scoped="" ref="0x40885a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40885b90" loc="5:TestMicrophoneC.nc">
      <component-ref qname="TestMicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40885b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40885d68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40885e48"/>
        <function-ref name="led1On" scoped="" ref="0x40885f28"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40882018"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408820f8"/>
        <function-ref name="get" scoped="" ref="0x408821d8"/>
        <function-ref name="led1Off" scoped="" ref="0x408822b8"/>
        <function-ref name="led2Off" scoped="" ref="0x40882638"/>
        <function-ref name="set" scoped="" ref="0x40882398"/>
        <function-ref name="led0On" scoped="" ref="0x40882478"/>
        <function-ref name="led2On" scoped="" ref="0x40882558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40882810" loc="6:TestMicrophoneC.nc">
      <component-ref qname="TestMicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40882810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x408829e8"/>
        <function-ref name="cancel" scoped="" ref="0x40882ac8"/>
        <function-ref name="dataReady" scoped="" ref="0x40882ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicAdcChannel" ref="0x40882df8" loc="7:TestMicrophoneC.nc">
      <component-ref qname="TestMicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAdcChannel" scoped="" ref="0x40882df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40881010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PrintfControl" ref="0x4087e8d8" loc="9:TestMicrophoneC.nc">
      <component-ref qname="TestMicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PrintfControl" scoped="" ref="0x4087e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4087eab0"/>
        <function-ref name="stop" scoped="" ref="0x4087eb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getMicrophoneData" ref="0x4087fb00" loc="21:TestMicrophoneC.nc">
      <component-ref qname="TestMicrophoneC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="getMicrophoneData" scoped="" ref="0x4087fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4087fcd8"/>
        <function-ref name="runTask" scoped="" ref="0x4087fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PrintfControl" ref="0x4088d0b8" loc="46:./radioprintf/PrintfC.nc">
      <component-ref qname="PrintfC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PrintfControl" scoped="" ref="0x4088d0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4088d290"/>
        <function-ref name="stop" scoped="" ref="0x4088d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4088db80" loc="61:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4088db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4088dd58"/>
        <function-ref name="stopDone" scoped="" ref="0x4088de38"/>
        <function-ref name="start" scoped="" ref="0x4088df18"/>
        <function-ref name="stop" scoped="" ref="0x4088a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4089e670" loc="63:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4089e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089e848"/>
        <function-ref name="getPayload" scoped="" ref="0x4089e928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4089ea08"/>
        <function-ref name="cancel" scoped="" ref="0x4089eae8"/>
        <function-ref name="sendDone" scoped="" ref="0x4089ebc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40888798" loc="65:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40888798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40888970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408969d0" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408969d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40896ba8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40896c88"/>
        <function-ref name="getPayload" scoped="" ref="0x40896d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40896e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40896f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x408ba408" loc="70:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408ba408"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408baf08"/>
        <function-ref name="clear" scoped="" ref="0x408a82d0"/>
        <function-ref name="isValid" scoped="" ref="0x408bab58"/>
        <function-ref name="set" scoped="" ref="0x408a8680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408b3ba8" loc="72:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408b3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408b3d80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408b3e60"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408b8010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408b80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40888100" loc="64:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40888100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408882d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408a5a90" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408a5c68"/>
        <function-ref name="noAck" scoped="" ref="0x408a5d48"/>
        <function-ref name="wasAcked" scoped="" ref="0x408a5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408a77b0" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408a77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408a7988"/>
        <function-ref name="source" scoped="" ref="0x408a7a68"/>
        <function-ref name="address" scoped="" ref="0x408a7b48"/>
        <function-ref name="destination" scoped="" ref="0x408a7c28"/>
        <function-ref name="setSource" scoped="" ref="0x408a7d08"/>
        <function-ref name="setDestination" scoped="" ref="0x408a7de8"/>
        <function-ref name="type" scoped="" ref="0x408a7ec8"/>
        <function-ref name="setType" scoped="" ref="0x4089c010"/>
        <function-ref name="isForMe" scoped="" ref="0x4089c0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x4089c1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x4089c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408a8db8" loc="71:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408a8db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408bb8c8"/>
        <function-ref name="clear" scoped="" ref="0x408bbc78"/>
        <function-ref name="isValid" scoped="" ref="0x408bb518"/>
        <function-ref name="set" scoped="" ref="0x408b9048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408b23c8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408b23c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408b25a0"/>
        <function-ref name="stopDone" scoped="" ref="0x408b2680"/>
        <function-ref name="start" scoped="" ref="0x408b2760"/>
        <function-ref name="stop" scoped="" ref="0x408b2840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x408bfab8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x408bfab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x408bfc90"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x408bfd70"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x408bfe50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x408c3010"/>
        <function-ref name="setCca" scoped="" ref="0x408c30f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x408c31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x408d28e8" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x408d28e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x408d2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408b0dc0" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408b0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408cb010"/>
        <function-ref name="payloadLength" scoped="" ref="0x408cb0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x408cb1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408cb2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408cb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408b2ca0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408b2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b2e78"/>
        <function-ref name="getPayload" scoped="" ref="0x408b1010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408b10f0"/>
        <function-ref name="cancel" scoped="" ref="0x408b11d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408b12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408b1db0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408b1db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x408c52d8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x408c52d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x408c54b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x408c5590"/>
        <function-ref name="getRssi" scoped="" ref="0x408c5670"/>
        <function-ref name="getNetwork" scoped="" ref="0x408c5750"/>
        <function-ref name="getPower" scoped="" ref="0x408c5830"/>
        <function-ref name="getLqi" scoped="" ref="0x408c5910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408c33c0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408c33c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408c3598"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408c3678"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408c3758"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408c3838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408b1718" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408b1718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408c5b30" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c5b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408c5d08"/>
        <function-ref name="noAck" scoped="" ref="0x408c5de8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408c5ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x408d5df0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x408d5df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x408be010"/>
        <function-ref name="setRetries" scoped="" ref="0x408be0f0"/>
        <function-ref name="getRetries" scoped="" ref="0x408be1d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408be2b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x408be390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408b01a8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408b01a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408b0380"/>
        <function-ref name="source" scoped="" ref="0x408b0460"/>
        <function-ref name="address" scoped="" ref="0x408b0540"/>
        <function-ref name="destination" scoped="" ref="0x408b0620"/>
        <function-ref name="setSource" scoped="" ref="0x408b0700"/>
        <function-ref name="setDestination" scoped="" ref="0x408b07e0"/>
        <function-ref name="type" scoped="" ref="0x408b08c0"/>
        <function-ref name="setType" scoped="" ref="0x408b09a0"/>
        <function-ref name="isForMe" scoped="" ref="0x408b0a80"/>
        <function-ref name="setGroup" scoped="" ref="0x408b0b60"/>
        <function-ref name="localGroup" scoped="" ref="0x408b0c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x408c9010" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x408c91e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408d8aa0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408d8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408d8c78"/>
        <function-ref name="stopDone" scoped="" ref="0x408d8d58"/>
        <function-ref name="start" scoped="" ref="0x408d8e38"/>
        <function-ref name="stop" scoped="" ref="0x408d8f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x408cff00" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x408cff00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x408ce0f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x408ce1d0"/>
        <function-ref name="getRssi" scoped="" ref="0x408ce2b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x408ce390"/>
        <function-ref name="getPower" scoped="" ref="0x408ce470"/>
        <function-ref name="getLqi" scoped="" ref="0x408ce550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408e6860" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408e6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e6a38"/>
        <function-ref name="getPayload" scoped="" ref="0x408e6b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e6bf8"/>
        <function-ref name="cancel" scoped="" ref="0x408e6cd8"/>
        <function-ref name="sendDone" scoped="" ref="0x408e6db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x408cf3e0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x408cf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408cf5b8"/>
        <function-ref name="getPayload" scoped="" ref="0x408cf698"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408cf778"/>
        <function-ref name="cancel" scoped="" ref="0x408cf858"/>
        <function-ref name="sendDone" scoped="" ref="0x408cf938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408e4110" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408e4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408e42e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408e43c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408e44a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408e4588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408cf010" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408cf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408ce770" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408ce770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408ce948"/>
        <function-ref name="noAck" scoped="" ref="0x408cea28"/>
        <function-ref name="wasAcked" scoped="" ref="0x408ceb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408d03e8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408d03e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408d05c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408d06a0"/>
        <function-ref name="request" scoped="" ref="0x408d0780"/>
        <function-ref name="granted" scoped="" ref="0x408d0860"/>
        <function-ref name="isOwner" scoped="" ref="0x408d0940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x408cfb68" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x408cfb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cfd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x408e4730" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x408e4730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x408e4908"/>
        <function-ref name="setRetries" scoped="" ref="0x408e49e8"/>
        <function-ref name="getRetries" scoped="" ref="0x408e4ac8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408e4ba8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x408e4c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x408ced00" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408ced00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x408ceed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408ded20" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408ded20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408deef8"/>
        <function-ref name="stopDone" scoped="" ref="0x408dd010"/>
        <function-ref name="start" scoped="" ref="0x408dd0f0"/>
        <function-ref name="stop" scoped="" ref="0x408dd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x408dde18" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x408dde18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x408dc010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x408dc0f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x408dc1d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x408dc2b0"/>
        <function-ref name="setCca" scoped="" ref="0x408dc390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x408dc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408dd360" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408dd360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408dd538"/>
        <function-ref name="getPayload" scoped="" ref="0x408dd618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408dd6f8"/>
        <function-ref name="cancel" scoped="" ref="0x408dd7d8"/>
        <function-ref name="sendDone" scoped="" ref="0x408dd8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408dda60" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408dda60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ddc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408dcda0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408dcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408f5010"/>
        <function-ref name="stopDone" scoped="" ref="0x408f50f0"/>
        <function-ref name="start" scoped="" ref="0x408f51d0"/>
        <function-ref name="stop" scoped="" ref="0x408f52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x408f5b78" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x408f5b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x408f5d50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x408f5e30"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x408f5f10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x408f4010"/>
        <function-ref name="setCca" scoped="" ref="0x408f40f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x408f41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x408eacf8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x408eacf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x408eaed0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x408ed010"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x408ed0f0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x408ed1d0"/>
        <function-ref name="setCca" scoped="" ref="0x408ed2b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x408ed390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x408e93b0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x408e93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x408e9588"/>
        <function-ref name="setNetwork" scoped="" ref="0x408e9668"/>
        <function-ref name="getRssi" scoped="" ref="0x408e9748"/>
        <function-ref name="getNetwork" scoped="" ref="0x408e9828"/>
        <function-ref name="getPower" scoped="" ref="0x408e9908"/>
        <function-ref name="getLqi" scoped="" ref="0x408e99e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x408ea538" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x408ea538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ea710"/>
        <function-ref name="cancel" scoped="" ref="0x408ea7f0"/>
        <function-ref name="modify" scoped="" ref="0x408ea8d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408ea9b0"/>
        <function-ref name="resend" scoped="" ref="0x408eaa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408f5440" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408f5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f5618"/>
        <function-ref name="getPayload" scoped="" ref="0x408f56f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f57d8"/>
        <function-ref name="cancel" scoped="" ref="0x408f58b8"/>
        <function-ref name="sendDone" scoped="" ref="0x408f5998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40903210" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40903210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409033e8"/>
        <function-ref name="rand32" scoped="" ref="0x409034c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408eeee8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408eeee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408f30e0"/>
        <function-ref name="stop" scoped="" ref="0x408f31c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x409004b0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x409004b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40900688"/>
        <function-ref name="getMetadata" scoped="" ref="0x40900768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x408ee4a0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x408ee4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x408ee678"/>
        <function-ref name="rfOff" scoped="" ref="0x408ee758"/>
        <function-ref name="rxOn" scoped="" ref="0x408ee838"/>
        <function-ref name="startVReg" scoped="" ref="0x408ee918"/>
        <function-ref name="stopVReg" scoped="" ref="0x408ee9f8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x408eead8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x408eebb8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x408eec98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40903658" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40903658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40903830"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40903910"/>
        <function-ref name="led1On" scoped="" ref="0x409039f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40903ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40903bb0"/>
        <function-ref name="get" scoped="" ref="0x40903c90"/>
        <function-ref name="led1Off" scoped="" ref="0x40903d70"/>
        <function-ref name="led2Off" scoped="" ref="0x408e91d0"/>
        <function-ref name="set" scoped="" ref="0x40903e50"/>
        <function-ref name="led0On" scoped="" ref="0x408e9010"/>
        <function-ref name="led2On" scoped="" ref="0x408e90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x408f4388" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408f4388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408f4560"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408f4640"/>
        <function-ref name="request" scoped="" ref="0x408f4720"/>
        <function-ref name="granted" scoped="" ref="0x408f4800"/>
        <function-ref name="isOwner" scoped="" ref="0x408f48e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x408fdcb0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x408fdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408fdf08"/>
        <function-ref name="toIdle" scoped="" ref="0x408e8010"/>
        <function-ref name="isState" scoped="" ref="0x408e80f0"/>
        <function-ref name="isIdle" scoped="" ref="0x408e81d0"/>
        <function-ref name="requestState" scoped="" ref="0x408e82b0"/>
        <function-ref name="forceState" scoped="" ref="0x408e8390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x408fce88" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x408fce88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408fb070"/>
        <function-ref name="runTask" scoped="" ref="0x408fb150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x408fc678" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x408fc678"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408fc850"/>
        <function-ref name="runTask" scoped="" ref="0x408fc930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x40902da0" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x40902da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408fc010"/>
        <function-ref name="runTask" scoped="" ref="0x408fc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40922ce8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40922ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40922ec0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40929010"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x409290f0"/>
        <function-ref name="syncDone" scoped="" ref="0x409291d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x409292b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40929390"/>
        <function-ref name="setChannel" scoped="" ref="0x40929470"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40929550"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40929630"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40929710"/>
        <function-ref name="getShortAddr" scoped="" ref="0x409297f0"/>
        <function-ref name="sync" scoped="" ref="0x409298d0"/>
        <function-ref name="getChannel" scoped="" ref="0x409299b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40929b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4093cb70" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4093cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093e1e0"/>
        <function-ref name="readDone" scoped="" ref="0x4093e438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40929ce0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40929ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40929eb8"/>
        <function-ref name="rfOff" scoped="" ref="0x40928010"/>
        <function-ref name="rxOn" scoped="" ref="0x409280f0"/>
        <function-ref name="startVReg" scoped="" ref="0x409281d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x409282b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40928390"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40928470"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40928550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4092a168" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4092a168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4092a340"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4092a420"/>
        <function-ref name="request" scoped="" ref="0x4092a500"/>
        <function-ref name="granted" scoped="" ref="0x4092a5e0"/>
        <function-ref name="isOwner" scoped="" ref="0x4092a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x4093aa00" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x4093aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x4093abd8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4093acb8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4093ad98"/>
        <function-ref name="syncDone" scoped="" ref="0x4093ae78"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40939010"/>
        <function-ref name="setShortAddr" scoped="" ref="0x409390f0"/>
        <function-ref name="setChannel" scoped="" ref="0x409391d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x409392b0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40939390"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40939470"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40939550"/>
        <function-ref name="sync" scoped="" ref="0x40939630"/>
        <function-ref name="getChannel" scoped="" ref="0x40939710"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40939870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x4094b5e8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4094b5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4094b7c0"/>
        <function-ref name="write" scoped="" ref="0x4094b8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x409373d8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x409373d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40935898"/>
        <function-ref name="fired" scoped="" ref="0x40935068"/>
        <function-ref name="startAt" scoped="" ref="0x40935558"/>
        <function-ref name="isRunning" scoped="" ref="0x409352e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40935b10"/>
        <function-ref name="start" scoped="" ref="0x40937b28"/>
        <function-ref name="stop" scoped="" ref="0x40937dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x4094eba8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4094eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4094ed80"/>
        <function-ref name="write" scoped="" ref="0x4094ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40934840" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40934840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40934a18"/>
        <function-ref name="isInput" scoped="" ref="0x40934af8"/>
        <function-ref name="toggle" scoped="" ref="0x40934bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x40934cb8"/>
        <function-ref name="get" scoped="" ref="0x40934d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40934e78"/>
        <function-ref name="set" scoped="" ref="0x40933010"/>
        <function-ref name="clr" scoped="" ref="0x409330f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x409385a0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x409385a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40938bc8"/>
        <function-ref name="readDone" scoped="" ref="0x40938e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x4095cdf0" loc="118:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x4095cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4095a010"/>
        <function-ref name="runTask" scoped="" ref="0x4095a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x4094bae0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4094bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4094bcb8"/>
        <function-ref name="write" scoped="" ref="0x4094bd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x4094e180" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4094e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4094e358"/>
        <function-ref name="write" scoped="" ref="0x4094e438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4094dd98" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4094dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40931010"/>
        <function-ref name="changed" scoped="" ref="0x409310f0"/>
        <function-ref name="amGroup" scoped="" ref="0x409311d0"/>
        <function-ref name="setAddress" scoped="" ref="0x409312b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40935de0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40935de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40934010"/>
        <function-ref name="isInput" scoped="" ref="0x409340f0"/>
        <function-ref name="toggle" scoped="" ref="0x409341d0"/>
        <function-ref name="isOutput" scoped="" ref="0x409342b0"/>
        <function-ref name="get" scoped="" ref="0x40934390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40934470"/>
        <function-ref name="set" scoped="" ref="0x40934550"/>
        <function-ref name="clr" scoped="" ref="0x40934630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x40946268" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40946268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40946440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x40933300" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x40933300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409334d8"/>
        <function-ref name="isInput" scoped="" ref="0x409335b8"/>
        <function-ref name="toggle" scoped="" ref="0x40933698"/>
        <function-ref name="isOutput" scoped="" ref="0x40933778"/>
        <function-ref name="get" scoped="" ref="0x40933858"/>
        <function-ref name="makeOutput" scoped="" ref="0x40933938"/>
        <function-ref name="set" scoped="" ref="0x40933a18"/>
        <function-ref name="clr" scoped="" ref="0x40933af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4093ef20" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4093ef20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4093a110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x4094b0d8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4094b0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4094b2b0"/>
        <function-ref name="write" scoped="" ref="0x4094b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x40946688" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40946688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40946860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40946aa8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40946aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40946c80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40946d60"/>
        <function-ref name="request" scoped="" ref="0x40946e40"/>
        <function-ref name="granted" scoped="" ref="0x40946f20"/>
        <function-ref name="isOwner" scoped="" ref="0x40945018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x40945b20" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x40945b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40945cf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40945dd8"/>
        <function-ref name="request" scoped="" ref="0x40945eb8"/>
        <function-ref name="granted" scoped="" ref="0x40942010"/>
        <function-ref name="isOwner" scoped="" ref="0x409420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40939a40" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40939a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40939c18"/>
        <function-ref name="rfOff" scoped="" ref="0x40939cf8"/>
        <function-ref name="rxOn" scoped="" ref="0x40939dd8"/>
        <function-ref name="startVReg" scoped="" ref="0x40939eb8"/>
        <function-ref name="stopVReg" scoped="" ref="0x40938010"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x409380f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x409381d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x409382b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x4094e688" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4094e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4094e860"/>
        <function-ref name="write" scoped="" ref="0x4094e940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x40948bc8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40948bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40948e20"/>
        <function-ref name="write" scoped="" ref="0x40948f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x40947978" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40947978"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40947b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40942280" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40942280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40942458"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40942538"/>
        <function-ref name="led1On" scoped="" ref="0x40942618"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409426f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409427d8"/>
        <function-ref name="get" scoped="" ref="0x409428b8"/>
        <function-ref name="led1Off" scoped="" ref="0x40942998"/>
        <function-ref name="led2Off" scoped="" ref="0x40942d18"/>
        <function-ref name="set" scoped="" ref="0x40942a78"/>
        <function-ref name="led0On" scoped="" ref="0x40942b58"/>
        <function-ref name="led2On" scoped="" ref="0x40942c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x4095c610" loc="117:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x4095c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4095c7e8"/>
        <function-ref name="runTask" scoped="" ref="0x4095c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4093a2c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4093a2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4093a4a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4093a580"/>
        <function-ref name="request" scoped="" ref="0x4093a660"/>
        <function-ref name="granted" scoped="" ref="0x4093a740"/>
        <function-ref name="isOwner" scoped="" ref="0x4093a820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x40949468" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40949468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40949640"/>
        <function-ref name="write" scoped="" ref="0x40949720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x40933d80" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x40933d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40932010"/>
        <function-ref name="disable" scoped="" ref="0x409320f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x409321d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x409322b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x40945270" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x40945270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40945548"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40945628"/>
        <function-ref name="request" scoped="" ref="0x40945708"/>
        <function-ref name="granted" scoped="" ref="0x409457e8"/>
        <function-ref name="isOwner" scoped="" ref="0x409458c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x40947d90" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40947d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40946010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40997010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40997010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409971e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x409975d8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x409975d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40996ab8"/>
        <function-ref name="fired" scoped="" ref="0x40996288"/>
        <function-ref name="startAt" scoped="" ref="0x40996778"/>
        <function-ref name="isRunning" scoped="" ref="0x40996500"/>
        <function-ref name="getAlarm" scoped="" ref="0x40996d30"/>
        <function-ref name="start" scoped="" ref="0x40997d28"/>
        <function-ref name="stop" scoped="" ref="0x40996010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a8ee78" loc="86:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a8ee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40993350"/>
        <function-ref name="fired" scoped="" ref="0x40994af8"/>
        <function-ref name="startAt" scoped="" ref="0x40993010"/>
        <function-ref name="isRunning" scoped="" ref="0x40994d70"/>
        <function-ref name="getAlarm" scoped="" ref="0x409935c8"/>
        <function-ref name="start" scoped="" ref="0x409945e0"/>
        <function-ref name="stop" scoped="" ref="0x40994880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409937f8" loc="87:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409937f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409939d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x411927c8" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x411927c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41191c78"/>
        <function-ref name="fired" scoped="" ref="0x41191448"/>
        <function-ref name="startAt" scoped="" ref="0x41191938"/>
        <function-ref name="isRunning" scoped="" ref="0x411916c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41191ef0"/>
        <function-ref name="start" scoped="" ref="0x41192f18"/>
        <function-ref name="stop" scoped="" ref="0x411911d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4118e558" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4118e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="TOne" ref="0x403c53d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4118dab8"/>
        <function-ref name="fired" scoped="" ref="0x4118d288"/>
        <function-ref name="startAt" scoped="" ref="0x4118d778"/>
        <function-ref name="isRunning" scoped="" ref="0x4118d500"/>
        <function-ref name="getAlarm" scoped="" ref="0x4118dd30"/>
        <function-ref name="start" scoped="" ref="0x4118eca8"/>
        <function-ref name="stop" scoped="" ref="0x4118d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x409ba818" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x409ba818"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x409ba9f0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x409baad0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x409babb0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x409bac90"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x409bad70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409bae50"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x409a0010"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x409a00f0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x409a01d0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x409a02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x409b66a8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x409b66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x409b5288"/>
        <function-ref name="test" scoped="" ref="0x409b9cb8"/>
        <function-ref name="get" scoped="" ref="0x409b6cf0"/>
        <function-ref name="captured" scoped="" ref="0x409b92b0"/>
        <function-ref name="reset" scoped="" ref="0x409b9550"/>
        <function-ref name="isOn" scoped="" ref="0x409b5010"/>
        <function-ref name="set" scoped="" ref="0x409b9010"/>
        <function-ref name="start" scoped="" ref="0x409b97c8"/>
        <function-ref name="stop" scoped="" ref="0x409b9a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x409b5998" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x409b5998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409b4f08"/>
        <function-ref name="fired" scoped="" ref="0x409b4528"/>
        <function-ref name="get" scoped="" ref="0x409b4010"/>
        <function-ref name="reset" scoped="" ref="0x409b47a0"/>
        <function-ref name="isOn" scoped="" ref="0x409b21a0"/>
        <function-ref name="set" scoped="" ref="0x409b4288"/>
        <function-ref name="start" scoped="" ref="0x409b4a18"/>
        <function-ref name="stop" scoped="" ref="0x409b4c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409a67e8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409a67e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x409a1288"/>
        <function-ref name="test" scoped="" ref="0x409a3d58"/>
        <function-ref name="get" scoped="" ref="0x409a6e30"/>
        <function-ref name="setScale" scoped="" ref="0x409a1500"/>
        <function-ref name="getScale" scoped="" ref="0x409a17a0"/>
        <function-ref name="reset" scoped="" ref="0x409a35f0"/>
        <function-ref name="overflow" scoped="" ref="0x409a3378"/>
        <function-ref name="isOn" scoped="" ref="0x409a1010"/>
        <function-ref name="set" scoped="" ref="0x409a30d8"/>
        <function-ref name="start" scoped="" ref="0x409a3868"/>
        <function-ref name="stop" scoped="" ref="0x409a3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x409ac370" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x409ac370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x409ac548"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x409ac628"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x409ac708"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x409ac7e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x409ac8c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409ac9a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x409aca88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x409acb68"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x409acc48"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x409acd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x409c23d0" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x409c23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x409c25a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x409c2688"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x409c2768"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x409c2848"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409c2928"/>
        <function-ref name="setControl" scoped="" ref="0x409c2a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x409c9010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x409c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409c7578"/>
        <function-ref name="fired" scoped="" ref="0x409c9b70"/>
        <function-ref name="get" scoped="" ref="0x409c9658"/>
        <function-ref name="reset" scoped="" ref="0x409c9de8"/>
        <function-ref name="isOn" scoped="" ref="0x409c77f0"/>
        <function-ref name="set" scoped="" ref="0x409c98d0"/>
        <function-ref name="start" scoped="" ref="0x409c7088"/>
        <function-ref name="stop" scoped="" ref="0x409c7300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x409cb078" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x409cb078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x409caaf0"/>
        <function-ref name="test" scoped="" ref="0x409ca600"/>
        <function-ref name="get" scoped="" ref="0x409cb6c0"/>
        <function-ref name="captured" scoped="" ref="0x409cbbd8"/>
        <function-ref name="reset" scoped="" ref="0x409cbe78"/>
        <function-ref name="isOn" scoped="" ref="0x409ca878"/>
        <function-ref name="set" scoped="" ref="0x409cb938"/>
        <function-ref name="start" scoped="" ref="0x409ca110"/>
        <function-ref name="stop" scoped="" ref="0x409ca388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x409c7c08" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x409c7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409c51a0"/>
        <function-ref name="fired" scoped="" ref="0x409c6790"/>
        <function-ref name="get" scoped="" ref="0x409c6278"/>
        <function-ref name="reset" scoped="" ref="0x409c6a08"/>
        <function-ref name="isOn" scoped="" ref="0x409c5418"/>
        <function-ref name="set" scoped="" ref="0x409c64f0"/>
        <function-ref name="start" scoped="" ref="0x409c6c80"/>
        <function-ref name="stop" scoped="" ref="0x409c6ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x409c5830" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x409c5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409c4d90"/>
        <function-ref name="fired" scoped="" ref="0x409c43b0"/>
        <function-ref name="get" scoped="" ref="0x409c5e78"/>
        <function-ref name="reset" scoped="" ref="0x409c4628"/>
        <function-ref name="isOn" scoped="" ref="0x409c2048"/>
        <function-ref name="set" scoped="" ref="0x409c4110"/>
        <function-ref name="start" scoped="" ref="0x409c48a0"/>
        <function-ref name="stop" scoped="" ref="0x409c4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409af010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x409aea68"/>
        <function-ref name="test" scoped="" ref="0x409ae578"/>
        <function-ref name="get" scoped="" ref="0x409af658"/>
        <function-ref name="setScale" scoped="" ref="0x409aece0"/>
        <function-ref name="getScale" scoped="" ref="0x409ac010"/>
        <function-ref name="reset" scoped="" ref="0x409afde8"/>
        <function-ref name="overflow" scoped="" ref="0x409afb70"/>
        <function-ref name="isOn" scoped="" ref="0x409ae7f0"/>
        <function-ref name="set" scoped="" ref="0x409af8d0"/>
        <function-ref name="start" scoped="" ref="0x409ae088"/>
        <function-ref name="stop" scoped="" ref="0x409ae300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a14db8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a14db8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034b5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034b5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a13010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40a13220" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a13220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40a2ec68"/>
        <function-ref name="test" scoped="" ref="0x40a2e778"/>
        <function-ref name="get" scoped="" ref="0x40a13868"/>
        <function-ref name="setScale" scoped="" ref="0x40a2eee0"/>
        <function-ref name="getScale" scoped="" ref="0x40a2c1c0"/>
        <function-ref name="reset" scoped="" ref="0x40a2e010"/>
        <function-ref name="overflow" scoped="" ref="0x40a13d80"/>
        <function-ref name="isOn" scoped="" ref="0x40a2e9f0"/>
        <function-ref name="set" scoped="" ref="0x40a13ae0"/>
        <function-ref name="start" scoped="" ref="0x40a2e288"/>
        <function-ref name="stop" scoped="" ref="0x40a2e500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41182560" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41182560"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4034b3d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x4034b3d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="TOne" ref="0x403c53d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41181ab8"/>
        <function-ref name="fired" scoped="" ref="0x41181288"/>
        <function-ref name="startAt" scoped="" ref="0x41181778"/>
        <function-ref name="isRunning" scoped="" ref="0x41181500"/>
        <function-ref name="getAlarm" scoped="" ref="0x41181d30"/>
        <function-ref name="start" scoped="" ref="0x41182cb0"/>
        <function-ref name="stop" scoped="" ref="0x41181010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x4117d2d0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x4117d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4117c840"/>
        <function-ref name="fired" scoped="" ref="0x4117de30"/>
        <function-ref name="get" scoped="" ref="0x4117d918"/>
        <function-ref name="reset" scoped="" ref="0x4117c0d8"/>
        <function-ref name="isOn" scoped="" ref="0x4117cab8"/>
        <function-ref name="set" scoped="" ref="0x4117db90"/>
        <function-ref name="start" scoped="" ref="0x4117c350"/>
        <function-ref name="stop" scoped="" ref="0x4117c5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41180010" loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41180010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4117fa68"/>
        <function-ref name="test" scoped="" ref="0x4117f578"/>
        <function-ref name="get" scoped="" ref="0x41180658"/>
        <function-ref name="setScale" scoped="" ref="0x4117fce0"/>
        <function-ref name="getScale" scoped="" ref="0x4117d010"/>
        <function-ref name="reset" scoped="" ref="0x41180de8"/>
        <function-ref name="overflow" scoped="" ref="0x41180b70"/>
        <function-ref name="isOn" scoped="" ref="0x4117f7f0"/>
        <function-ref name="set" scoped="" ref="0x411808d0"/>
        <function-ref name="start" scoped="" ref="0x4117f088"/>
        <function-ref name="stop" scoped="" ref="0x4117f300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a2f928" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a2f928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a4e088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a4e578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a4e300"/>
        <function-ref name="overflow" scoped="" ref="0x40a4e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a4b3a0" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a4b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="TOne" ref="0x403c53d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a4baf0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a4a010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a4bd68"/>
        <function-ref name="overflow" scoped="" ref="0x40a4a288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a48b30" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a48b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="TOne" ref="0x403c53d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a47308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a477f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a47580"/>
        <function-ref name="overflow" scoped="" ref="0x40a47a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40a47d50" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a47d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40a5d7f0"/>
        <function-ref name="test" scoped="" ref="0x40a5d300"/>
        <function-ref name="get" scoped="" ref="0x40a5f3e0"/>
        <function-ref name="setScale" scoped="" ref="0x40a5da68"/>
        <function-ref name="getScale" scoped="" ref="0x40a5dd08"/>
        <function-ref name="reset" scoped="" ref="0x40a5fb70"/>
        <function-ref name="overflow" scoped="" ref="0x40a5f8f8"/>
        <function-ref name="isOn" scoped="" ref="0x40a5d578"/>
        <function-ref name="set" scoped="" ref="0x40a5f658"/>
        <function-ref name="start" scoped="" ref="0x40a5fde8"/>
        <function-ref name="stop" scoped="" ref="0x40a5d088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40a6c0e0" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40a6c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="TOne" ref="0x403c53d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a6c830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a6cd20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a6caa8"/>
        <function-ref name="overflow" scoped="" ref="0x40a6b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a5be60" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a5be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a5a5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a5aad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a5a858"/>
        <function-ref name="overflow" scoped="" ref="0x40a5ad48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4118b0a0" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4118b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4118a5c8"/>
        <function-ref name="fired" scoped="" ref="0x4118bd08"/>
        <function-ref name="startAt" scoped="" ref="0x4118a288"/>
        <function-ref name="isRunning" scoped="" ref="0x4118a010"/>
        <function-ref name="getAlarm" scoped="" ref="0x4118a840"/>
        <function-ref name="start" scoped="" ref="0x4118b7f0"/>
        <function-ref name="stop" scoped="" ref="0x4118ba90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x41188de0" loc="73:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x41188de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="TOne" ref="0x403c53d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41186350"/>
        <function-ref name="fired" scoped="" ref="0x41187a88"/>
        <function-ref name="startAt" scoped="" ref="0x41186010"/>
        <function-ref name="isRunning" scoped="" ref="0x41187d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x411865c8"/>
        <function-ref name="start" scoped="" ref="0x41187570"/>
        <function-ref name="stop" scoped="" ref="0x41187810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4118ab90" loc="68:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4118ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41188308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x411887f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41188580"/>
        <function-ref name="overflow" scoped="" ref="0x41188a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a8fbb0" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a8fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a8fd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x40a89890" loc="87:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40a89890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a89a68"/>
        <function-ref name="isInput" scoped="" ref="0x40a89b48"/>
        <function-ref name="toggle" scoped="" ref="0x40a89c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40a89d08"/>
        <function-ref name="get" scoped="" ref="0x40a89de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a89ec8"/>
        <function-ref name="set" scoped="" ref="0x40a88010"/>
        <function-ref name="clr" scoped="" ref="0x40a880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x40a882e8" loc="88:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40a882e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a884c0"/>
        <function-ref name="isInput" scoped="" ref="0x40a885a0"/>
        <function-ref name="toggle" scoped="" ref="0x40a88680"/>
        <function-ref name="isOutput" scoped="" ref="0x40a88760"/>
        <function-ref name="get" scoped="" ref="0x40a88840"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a88920"/>
        <function-ref name="set" scoped="" ref="0x40a88a00"/>
        <function-ref name="clr" scoped="" ref="0x40a88ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40a88cd0" loc="89:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a88cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a88ea8"/>
        <function-ref name="isInput" scoped="" ref="0x40a87010"/>
        <function-ref name="toggle" scoped="" ref="0x40a870f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a871d0"/>
        <function-ref name="get" scoped="" ref="0x40a872b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a87390"/>
        <function-ref name="set" scoped="" ref="0x40a87470"/>
        <function-ref name="clr" scoped="" ref="0x40a87550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x40999e90" loc="86:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40999e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a89080"/>
        <function-ref name="isInput" scoped="" ref="0x40a89160"/>
        <function-ref name="toggle" scoped="" ref="0x40a89240"/>
        <function-ref name="isOutput" scoped="" ref="0x40a89320"/>
        <function-ref name="get" scoped="" ref="0x40a89400"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a894e0"/>
        <function-ref name="set" scoped="" ref="0x40a895c0"/>
        <function-ref name="clr" scoped="" ref="0x40a896a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x40a86128" loc="91:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x40a86128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a86300"/>
        <function-ref name="isInput" scoped="" ref="0x40a863e0"/>
        <function-ref name="toggle" scoped="" ref="0x40a864c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a865a0"/>
        <function-ref name="get" scoped="" ref="0x40a86680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a86760"/>
        <function-ref name="set" scoped="" ref="0x40a86840"/>
        <function-ref name="clr" scoped="" ref="0x40a86920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x409994b8" loc="85:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x409994b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40999690"/>
        <function-ref name="isInput" scoped="" ref="0x40999770"/>
        <function-ref name="toggle" scoped="" ref="0x40999850"/>
        <function-ref name="isOutput" scoped="" ref="0x40999930"/>
        <function-ref name="get" scoped="" ref="0x40999a10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40999af0"/>
        <function-ref name="set" scoped="" ref="0x40999bd0"/>
        <function-ref name="clr" scoped="" ref="0x40999cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x40a87730" loc="90:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40a87730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a87908"/>
        <function-ref name="isInput" scoped="" ref="0x40a879e8"/>
        <function-ref name="toggle" scoped="" ref="0x40a87ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a87ba8"/>
        <function-ref name="get" scoped="" ref="0x40a87c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a87d68"/>
        <function-ref name="set" scoped="" ref="0x40a87e48"/>
        <function-ref name="clr" scoped="" ref="0x40a87f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x40aa2a28" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40aa2a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40aa2c00"/>
        <function-ref name="disable" scoped="" ref="0x40aa2ce0"/>
        <function-ref name="captured" scoped="" ref="0x40aa2dc0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40aa2ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x40aa4188" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x40aa4188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40aa4360"/>
        <function-ref name="disable" scoped="" ref="0x40aa4440"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40aa4520"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40aa4600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x40aa4898" loc="41:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40aa4898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40aa4a70"/>
        <function-ref name="disable" scoped="" ref="0x40aa4b50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40aa4c30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40aa4d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40a97f00" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a97f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40aa10f0"/>
        <function-ref name="disable" scoped="" ref="0x40aa11d0"/>
        <function-ref name="captured" scoped="" ref="0x40aa12b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40aa1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x40aa15a0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x40aa15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40ab9048"/>
        <function-ref name="test" scoped="" ref="0x40aa0b38"/>
        <function-ref name="get" scoped="" ref="0x40aa1be8"/>
        <function-ref name="captured" scoped="" ref="0x40aa0130"/>
        <function-ref name="reset" scoped="" ref="0x40aa03d0"/>
        <function-ref name="isOn" scoped="" ref="0x40aa0db0"/>
        <function-ref name="set" scoped="" ref="0x40aa1e60"/>
        <function-ref name="start" scoped="" ref="0x40aa0648"/>
        <function-ref name="stop" scoped="" ref="0x40aa08c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40ab8c40" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40ab8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ab8e18"/>
        <function-ref name="fired" scoped="" ref="0x40ab8ef8"/>
        <function-ref name="disable" scoped="" ref="0x40ab7010"/>
        <function-ref name="edge" scoped="" ref="0x40ab70f0"/>
        <function-ref name="enable" scoped="" ref="0x40ab71d0"/>
        <function-ref name="getValue" scoped="" ref="0x40ab72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40ab8648" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40ab8648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ab8820"/>
        <function-ref name="disable" scoped="" ref="0x40ab8900"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40ab89e0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40ab8ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x40ab20a0" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x40ab20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ab2278"/>
        <function-ref name="isInput" scoped="" ref="0x40ab2358"/>
        <function-ref name="toggle" scoped="" ref="0x40ab2438"/>
        <function-ref name="isOutput" scoped="" ref="0x40ab2518"/>
        <function-ref name="get" scoped="" ref="0x40ab25f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ab26d8"/>
        <function-ref name="set" scoped="" ref="0x40ab27b8"/>
        <function-ref name="clr" scoped="" ref="0x40ab2898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x40ab69b0" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40ab69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ab6b88"/>
        <function-ref name="disable" scoped="" ref="0x40ab6c68"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40ab6d48"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40ab6e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x40ab18a8" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x40ab18a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ab1a80"/>
        <function-ref name="runTask" scoped="" ref="0x40ab1b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40bf6880" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40bf6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf6b58"/>
        <function-ref name="write" scoped="" ref="0x40bf6c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40bfcbd8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40bfcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfcdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40bf8e50" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40bf8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf7050"/>
        <function-ref name="write" scoped="" ref="0x40bf7130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40bf56a8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40bf56a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf5880"/>
        <function-ref name="write" scoped="" ref="0x40bf5960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40bf5ae0" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40bf5ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf5cb8"/>
        <function-ref name="write" scoped="" ref="0x40bf5d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40befcb8" loc="94:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40befcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40befe90"/>
        <function-ref name="write" scoped="" ref="0x40bee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40bf0b20" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40bf0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf0cf8"/>
        <function-ref name="write" scoped="" ref="0x40bf0dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40bfb6c0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40bfb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfb898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40bf02b0" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bf02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf0488"/>
        <function-ref name="write" scoped="" ref="0x40bf0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40bf76e8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40bf76e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf78c0"/>
        <function-ref name="write" scoped="" ref="0x40bf79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40bf6010" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40bf6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf61e8"/>
        <function-ref name="write" scoped="" ref="0x40bf62c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40bf2468" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40bf2468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf2640"/>
        <function-ref name="write" scoped="" ref="0x40bf2720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40bf5f18" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40bf5f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf4108"/>
        <function-ref name="write" scoped="" ref="0x40bf41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40bfc010" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40bfc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40bfc1e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40bfc2c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40bfc3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40bfa4e8" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40bfa4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfa6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40bfa840" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40bfa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfaa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40bfac18" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40bfac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40bf06e8" loc="89:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40bf06e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf08c0"/>
        <function-ref name="write" scoped="" ref="0x40bf09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40bfbd70" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40bfbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40bf7b20" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40bf7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf7cf8"/>
        <function-ref name="write" scoped="" ref="0x40bf7dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40bf72b0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40bf72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf7488"/>
        <function-ref name="write" scoped="" ref="0x40bf7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40bfc880" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40bfc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40bef880" loc="93:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40bef880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40befa58"/>
        <function-ref name="write" scoped="" ref="0x40befb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40bef010" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40bef010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bef1e8"/>
        <function-ref name="write" scoped="" ref="0x40bef2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40bf28a0" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40bf28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf2a78"/>
        <function-ref name="write" scoped="" ref="0x40bf2b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40bf1e38" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40bf1e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf0050"/>
        <function-ref name="write" scoped="" ref="0x40bf0130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40bf47a0" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40bf47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf4978"/>
        <function-ref name="write" scoped="" ref="0x40bf4a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40bee190" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40bee190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bee568"/>
        <function-ref name="writeDone" scoped="" ref="0x40bee648"/>
        <function-ref name="write" scoped="" ref="0x40bee728"/>
        <function-ref name="beginRead" scoped="" ref="0x40bee808"/>
        <function-ref name="readDone" scoped="" ref="0x40bee8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40bfc528" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40bfc528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfc700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40bf8a18" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40bf8a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf8bf0"/>
        <function-ref name="write" scoped="" ref="0x40bf8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40bf6448" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40bf6448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf6620"/>
        <function-ref name="write" scoped="" ref="0x40bf6700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40bf4368" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40bf4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf4540"/>
        <function-ref name="write" scoped="" ref="0x40bf4620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40bf6db8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40bf6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf5010"/>
        <function-ref name="write" scoped="" ref="0x40bf50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40bfb010" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40bfb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40bf5270" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40bf5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf5448"/>
        <function-ref name="write" scoped="" ref="0x40bf5528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40bfd918" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40bfd918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bfdaf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bfdbd0"/>
        <function-ref name="request" scoped="" ref="0x40bfdcb0"/>
        <function-ref name="granted" scoped="" ref="0x40bfdd90"/>
        <function-ref name="isOwner" scoped="" ref="0x40bfde70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40bf8010" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40bf8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bf81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40bf86c0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40bf86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bf8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40bf1a00" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40bf1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf1bd8"/>
        <function-ref name="write" scoped="" ref="0x40bf1cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40bf15c8" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40bf15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf17a0"/>
        <function-ref name="write" scoped="" ref="0x40bf1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40bfa190" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40bfa190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfa368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40bf1190" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40bf1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf1368"/>
        <function-ref name="write" scoped="" ref="0x40bf1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40bef448" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40bef448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bef620"/>
        <function-ref name="write" scoped="" ref="0x40bef700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40bf2cd8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40bf2cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf2eb0"/>
        <function-ref name="write" scoped="" ref="0x40bf1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40bfb368" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40bfb368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfb540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40bf2030" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40bf2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf2208"/>
        <function-ref name="write" scoped="" ref="0x40bf22e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40bfba18" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40bfba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bfbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40bf4bd8" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40bf4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bf4db0"/>
        <function-ref name="write" scoped="" ref="0x40bf4e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40bf8368" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40bf8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bf8540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40beea68" loc="98:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40beea68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40beec40"/>
        <function-ref name="writeDone" scoped="" ref="0x40beed20"/>
        <function-ref name="write" scoped="" ref="0x40beee00"/>
        <function-ref name="beginRead" scoped="" ref="0x40beeee0"/>
        <function-ref name="readDone" scoped="" ref="0x40bed010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40ad3340" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40ad3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40ad3518"/>
        <function-ref name="writeDone" scoped="" ref="0x40ad35f8"/>
        <function-ref name="write" scoped="" ref="0x40ad36d8"/>
        <function-ref name="beginRead" scoped="" ref="0x40ad37b8"/>
        <function-ref name="readDone" scoped="" ref="0x40ad3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40ad4a90" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40ad4c68"/>
        <function-ref name="abortRelease" scoped="" ref="0x40ad4d48"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40ad4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40ad3d88" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40ad3d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad2010"/>
        <function-ref name="write" scoped="" ref="0x40ad20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40ad2600" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40ad2600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad27d8"/>
        <function-ref name="write" scoped="" ref="0x40ad28b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ad4340" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ad4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad4518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ad45f8"/>
        <function-ref name="request" scoped="" ref="0x40ad46d8"/>
        <function-ref name="granted" scoped="" ref="0x40ad47b8"/>
        <function-ref name="isOwner" scoped="" ref="0x40ad4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x40ad2dd8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x40ad2dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x40aeadc8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40aeadc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aed010"/>
        <function-ref name="sendDone" scoped="" ref="0x40aed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40acec28" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40acec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40acee00"/>
        <function-ref name="writeDone" scoped="" ref="0x40aceee0"/>
        <function-ref name="write" scoped="" ref="0x40acc010"/>
        <function-ref name="beginRead" scoped="" ref="0x40acc0f0"/>
        <function-ref name="readDone" scoped="" ref="0x40acc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40ad19a8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad19a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40ad1b80"/>
        <function-ref name="abortRelease" scoped="" ref="0x40ad1c60"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40ad1d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x40aeea80" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40aeea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40aeec58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x40aed308" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x40aed308"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40aed4e0"/>
        <function-ref name="toIdle" scoped="" ref="0x40aed5c0"/>
        <function-ref name="isState" scoped="" ref="0x40aed6a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40aed780"/>
        <function-ref name="requestState" scoped="" ref="0x40aed860"/>
        <function-ref name="forceState" scoped="" ref="0x40aed940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40aefa70" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40aefa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aefc48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aefd28"/>
        <function-ref name="request" scoped="" ref="0x40aefe08"/>
        <function-ref name="granted" scoped="" ref="0x40aefee8"/>
        <function-ref name="isOwner" scoped="" ref="0x40aee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40acc6a0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40acc6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acc878"/>
        <function-ref name="write" scoped="" ref="0x40acc958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40acce48" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40acce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aef050"/>
        <function-ref name="write" scoped="" ref="0x40aef130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40aedab0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40aedab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40aedc88"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40aedd68"/>
        <function-ref name="led1On" scoped="" ref="0x40aede48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40aedf28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40aec018"/>
        <function-ref name="get" scoped="" ref="0x40aec0f8"/>
        <function-ref name="led1Off" scoped="" ref="0x40aec1d8"/>
        <function-ref name="led2Off" scoped="" ref="0x40aec558"/>
        <function-ref name="set" scoped="" ref="0x40aec2b8"/>
        <function-ref name="led0On" scoped="" ref="0x40aec398"/>
        <function-ref name="led2On" scoped="" ref="0x40aec478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ace1f8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ace1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ace3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ace4b0"/>
        <function-ref name="request" scoped="" ref="0x40ace590"/>
        <function-ref name="granted" scoped="" ref="0x40ace670"/>
        <function-ref name="isOwner" scoped="" ref="0x40ace750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x40ae6818" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x40ae6818"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ae69f0"/>
        <function-ref name="runTask" scoped="" ref="0x40ae6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x40aef630" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x40aef630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aef808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40b20e40" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b20e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b23050"/>
        <function-ref name="toIdle" scoped="" ref="0x40b23130"/>
        <function-ref name="isState" scoped="" ref="0x40b23210"/>
        <function-ref name="isIdle" scoped="" ref="0x40b232f0"/>
        <function-ref name="requestState" scoped="" ref="0x40b233d0"/>
        <function-ref name="forceState" scoped="" ref="0x40b234b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40b1e100" loc="66:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b1e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b1e2d8"/>
        <function-ref name="toIdle" scoped="" ref="0x40b1e3b8"/>
        <function-ref name="isState" scoped="" ref="0x40b1e498"/>
        <function-ref name="isIdle" scoped="" ref="0x40b1e578"/>
        <function-ref name="requestState" scoped="" ref="0x40b1e658"/>
        <function-ref name="forceState" scoped="" ref="0x40b1e738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b1b128" loc="66:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b1b128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b1b300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40b1b758" loc="67:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b1b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b1b930"/>
        <function-ref name="toIdle" scoped="" ref="0x40b1ba10"/>
        <function-ref name="isState" scoped="" ref="0x40b1baf0"/>
        <function-ref name="isIdle" scoped="" ref="0x40b1bbd0"/>
        <function-ref name="requestState" scoped="" ref="0x40b1bcb0"/>
        <function-ref name="forceState" scoped="" ref="0x40b1bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40bc5668" loc="43:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40bc5668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bc5840"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc5920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40bc5330" loc="42:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40bc5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40bc5508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b1f8b0" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b1f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b1fa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b1fbe8" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b1fbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b1fdc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b1fea0"/>
        <function-ref name="request" scoped="" ref="0x40bc5010"/>
        <function-ref name="granted" scoped="" ref="0x40bc50f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40bc51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40b2e648" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40b2e648"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b2e820"/>
        <function-ref name="sendDone" scoped="" ref="0x40b2e900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40b32d48" loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40b32d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40b32f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b329c8" loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b329c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b32ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40b2e010" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40b2e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40b2e1e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40b2e2c8"/>
        <function-ref name="splitRead" scoped="" ref="0x40b2e3a8"/>
        <function-ref name="write" scoped="" ref="0x40b2e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b2ed98" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b2ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b2d010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b2d0f0"/>
        <function-ref name="request" scoped="" ref="0x40b2d1d0"/>
        <function-ref name="granted" scoped="" ref="0x40b2d2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b2d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40b4e1e0" loc="255:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40b4e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b4e3b8"/>
        <function-ref name="runTask" scoped="" ref="0x40b4e498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40b29d10" loc="94:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40b29d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b29ee8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b28010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40b4b158" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40b4b158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b4b330"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b4b410"/>
        <function-ref name="request" scoped="" ref="0x40b4b4f0"/>
        <function-ref name="granted" scoped="" ref="0x40b4b5d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b4b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40b29370" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40b29370"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40b29548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b29010" loc="91:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b29010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b291e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40b3d4d0" loc="98:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40b3d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b3d6a8"/>
        <function-ref name="sleep" scoped="" ref="0x40b4cb10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b3d868"/>
        <function-ref name="dataReady" scoped="" ref="0x40b4cbf0"/>
        <function-ref name="initMaster" scoped="" ref="0x40b3da28"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b3db08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b3dbe8"/>
        <function-ref name="read" scoped="" ref="0x40b3dcc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b3dda8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b3de88"/>
        <function-ref name="setClock" scoped="" ref="0x40b4c010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b4c0f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b4c1d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b4c330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b4c410"/>
        <function-ref name="write" scoped="" ref="0x40b4c4f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b4c5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b4c6b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b4c790"/>
        <function-ref name="getClock" scoped="" ref="0x40b4c870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b4c950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b3d788"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b3d948"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b4ca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40b296f8" loc="93:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40b296f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40b298d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40b299b0"/>
        <function-ref name="splitRead" scoped="" ref="0x40b29a90"/>
        <function-ref name="write" scoped="" ref="0x40b29b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b28488" loc="95:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b28488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b28660"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b28740"/>
        <function-ref name="request" scoped="" ref="0x40b28820"/>
        <function-ref name="granted" scoped="" ref="0x40b28900"/>
        <function-ref name="isOwner" scoped="" ref="0x40b289e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40b4b860" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b4b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b4ba38"/>
        <function-ref name="userId" scoped="" ref="0x40b4bb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40b4bce0" loc="101:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40b4bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40b4beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40b2ae40" loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40b2ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b81050"/>
        <function-ref name="sleep" scoped="" ref="0x40b80470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b81210"/>
        <function-ref name="dataReady" scoped="" ref="0x40b80550"/>
        <function-ref name="initMaster" scoped="" ref="0x40b813d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b814b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b81590"/>
        <function-ref name="read" scoped="" ref="0x40b81670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b81750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b81830"/>
        <function-ref name="setClock" scoped="" ref="0x40b81910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b819f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b81ad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b81c30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b81d10"/>
        <function-ref name="write" scoped="" ref="0x40b81df0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b81ed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b80010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b800f0"/>
        <function-ref name="getClock" scoped="" ref="0x40b801d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b802b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b81130"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b812f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b80390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40b7ae88" loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40b7ae88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b78070"/>
        <function-ref name="isInput" scoped="" ref="0x40b78150"/>
        <function-ref name="toggle" scoped="" ref="0x40b78230"/>
        <function-ref name="isOutput" scoped="" ref="0x40b78310"/>
        <function-ref name="get" scoped="" ref="0x40b783f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b784d0"/>
        <function-ref name="set" scoped="" ref="0x40b785b0"/>
        <function-ref name="clr" scoped="" ref="0x40b78690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40b7b9e8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40b7b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7bbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40b7bca0"/>
        <function-ref name="toggle" scoped="" ref="0x40b7bd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7be60"/>
        <function-ref name="get" scoped="" ref="0x40b7a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7a0f0"/>
        <function-ref name="set" scoped="" ref="0x40b7a1d0"/>
        <function-ref name="clr" scoped="" ref="0x40b7a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40b7b010" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40b7b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40b7b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40b7b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7b488"/>
        <function-ref name="get" scoped="" ref="0x40b7b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7b648"/>
        <function-ref name="set" scoped="" ref="0x40b7b728"/>
        <function-ref name="clr" scoped="" ref="0x40b7b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40b7cac8" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40b7cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b7cca0"/>
        <function-ref name="stop" scoped="" ref="0x40b7cd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40b78898" loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40b78898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40b78a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40b7d1c8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40b7d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b7d3a0"/>
        <function-ref name="sleep" scoped="" ref="0x40b7c7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b7d560"/>
        <function-ref name="dataReady" scoped="" ref="0x40b7c8d0"/>
        <function-ref name="initMaster" scoped="" ref="0x40b7d720"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b7d800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b7d8e0"/>
        <function-ref name="read" scoped="" ref="0x40b7d9c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b7daa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b7db80"/>
        <function-ref name="setClock" scoped="" ref="0x40b7dc60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b7dd40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b7de20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b7c010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b7c0f0"/>
        <function-ref name="write" scoped="" ref="0x40b7c1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b7c2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b7c390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b7c470"/>
        <function-ref name="getClock" scoped="" ref="0x40b7c550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b7c630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b7d480"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b7d640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b7c710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40b7a4a0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40b7a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7a678"/>
        <function-ref name="isInput" scoped="" ref="0x40b7a758"/>
        <function-ref name="toggle" scoped="" ref="0x40b7a838"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7a918"/>
        <function-ref name="get" scoped="" ref="0x40b7a9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7aad8"/>
        <function-ref name="set" scoped="" ref="0x40b7abb8"/>
        <function-ref name="clr" scoped="" ref="0x40b7ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40bcb490" loc="86:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40bcb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40bcb678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40bcb758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40bcbd48" loc="89:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40bcbd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40bca010"/>
        <function-ref name="configure" scoped="" ref="0x40bca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b9fd40" loc="85:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b9fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b9ff28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bcb018"/>
        <function-ref name="request" scoped="" ref="0x40bcb0f8"/>
        <function-ref name="granted" scoped="" ref="0x40bcb1d8"/>
        <function-ref name="isOwner" scoped="" ref="0x40bcb2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40bcb898" loc="87:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40bcb898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40bcba70"/>
        <function-ref name="userId" scoped="" ref="0x40bcbb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411ef2c8" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411ef2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411ef4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x411ef600" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x411ef600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411ef7d8"/>
        <function-ref name="isEmpty" scoped="" ref="0x411ef8b8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411ef998"/>
        <function-ref name="dequeue" scoped="" ref="0x411efa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411eed70" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411eed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411ed010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411ed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411ed6f0" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411ed6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411ed8d8"/>
        <function-ref name="configure" scoped="" ref="0x411ed9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x411edb18" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x411edb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411edcf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x411eddd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411edeb0"/>
        <function-ref name="dequeue" scoped="" ref="0x411ec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411ee630" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411ee630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411ee818"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411ee8f8"/>
        <function-ref name="request" scoped="" ref="0x411ee9d8"/>
        <function-ref name="granted" scoped="" ref="0x411eeab8"/>
        <function-ref name="isOwner" scoped="" ref="0x411eeb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411ed230" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411ed230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411ed408"/>
        <function-ref name="userId" scoped="" ref="0x411ed4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x411ec190" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x411ec190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411ec368"/>
        <function-ref name="runTask" scoped="" ref="0x411ec448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40bc4488" loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40bc4488"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc4660"/>
        <function-ref name="isInput" scoped="" ref="0x40bc4740"/>
        <function-ref name="toggle" scoped="" ref="0x40bc4820"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc4900"/>
        <function-ref name="get" scoped="" ref="0x40bc49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc4ac0"/>
        <function-ref name="set" scoped="" ref="0x40bc4ba0"/>
        <function-ref name="clr" scoped="" ref="0x40bc4c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40bc7570" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40bc7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bc7748"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bc7828"/>
        <function-ref name="request" scoped="" ref="0x40bc7908"/>
        <function-ref name="granted" scoped="" ref="0x40bc79e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40bc7ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40bc7d30" loc="44:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40bc7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bc7f08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bc4010"/>
        <function-ref name="request" scoped="" ref="0x40bc40f0"/>
        <function-ref name="granted" scoped="" ref="0x40bc41d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40bc42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40c0ae38" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40c0ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c09208"/>
        <function-ref name="write" scoped="" ref="0x40c092e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40c0f368" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40c0f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0f540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40c0c4b8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40c0c4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c0c690"/>
        <function-ref name="write" scoped="" ref="0x40c0c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40c09cd8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40c09cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c09eb0"/>
        <function-ref name="write" scoped="" ref="0x40c08010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40c08190" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40c08190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c08368"/>
        <function-ref name="write" scoped="" ref="0x40c08448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40c02448" loc="94:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40c02448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c02620"/>
        <function-ref name="write" scoped="" ref="0x40c02700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40c032b0" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40c032b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c03488"/>
        <function-ref name="write" scoped="" ref="0x40c03568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40c0fd70" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40c0fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40c05a00" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c05a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c05bd8"/>
        <function-ref name="write" scoped="" ref="0x40c05cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40c0cd28" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40c0cd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c0cf00"/>
        <function-ref name="write" scoped="" ref="0x40c0a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40c0a5c8" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40c0a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c0a7a0"/>
        <function-ref name="write" scoped="" ref="0x40c0a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40c07b20" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40c07b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c07cf8"/>
        <function-ref name="write" scoped="" ref="0x40c07dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40c085c8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40c085c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c087a0"/>
        <function-ref name="write" scoped="" ref="0x40c08880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40c11718" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40c11718"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40c118f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x40c119d0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40c11ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40c0eb98" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40c0eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40c0eef0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40c0eef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0d188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40c0d308" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40c0d308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40c05e38" loc="89:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c05e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c03050"/>
        <function-ref name="write" scoped="" ref="0x40c03130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40c0e4e8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40c0e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40c0a190" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40c0a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c0a368"/>
        <function-ref name="write" scoped="" ref="0x40c0a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40c0c8f0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40c0c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c0cac8"/>
        <function-ref name="write" scoped="" ref="0x40c0cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40c0f010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40c0f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40c02010" loc="93:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40c02010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c021e8"/>
        <function-ref name="write" scoped="" ref="0x40c022c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40c036e8" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40c036e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c038c0"/>
        <function-ref name="write" scoped="" ref="0x40c039a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40c06010" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40c06010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c061e8"/>
        <function-ref name="write" scoped="" ref="0x40c062c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40c055c8" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40c055c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c057a0"/>
        <function-ref name="write" scoped="" ref="0x40c05880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40c08e38" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40c08e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c07050"/>
        <function-ref name="write" scoped="" ref="0x40c07130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40c02880" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40c02880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c02c58"/>
        <function-ref name="writeDone" scoped="" ref="0x40c02d38"/>
        <function-ref name="write" scoped="" ref="0x40c02e18"/>
        <function-ref name="beginRead" scoped="" ref="0x40c02ef8"/>
        <function-ref name="readDone" scoped="" ref="0x40c01010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40c11c30" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40c11c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c11e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40c0c080" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40c0c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c0c258"/>
        <function-ref name="write" scoped="" ref="0x40c0c338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40c0aa00" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40c0aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c0abd8"/>
        <function-ref name="write" scoped="" ref="0x40c0acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40c08a00" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40c08a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c08bd8"/>
        <function-ref name="write" scoped="" ref="0x40c08cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40c09468" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40c09468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c09640"/>
        <function-ref name="write" scoped="" ref="0x40c09720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40c0f6c0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40c0f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0f898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40c098a0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40c098a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c09a78"/>
        <function-ref name="write" scoped="" ref="0x40c09b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c11060" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c11060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c11238"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c11318"/>
        <function-ref name="request" scoped="" ref="0x40c113f8"/>
        <function-ref name="granted" scoped="" ref="0x40c114d8"/>
        <function-ref name="isOwner" scoped="" ref="0x40c115b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40c0d660" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40c0d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0d838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40c0dd10" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40c0dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0dee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40c05190" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40c05190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c05368"/>
        <function-ref name="write" scoped="" ref="0x40c05448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40c06cb8" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40c06cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c06e90"/>
        <function-ref name="write" scoped="" ref="0x40c05010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40c0e840" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40c0e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0ea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40c06880" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c06880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c06a58"/>
        <function-ref name="write" scoped="" ref="0x40c06b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40c03b20" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40c03b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c03cf8"/>
        <function-ref name="write" scoped="" ref="0x40c03dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40c06448" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40c06448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c06620"/>
        <function-ref name="write" scoped="" ref="0x40c06700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40c0fa18" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40c0fa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40c076e8" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40c076e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c078c0"/>
        <function-ref name="write" scoped="" ref="0x40c079a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40c0e190" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40c0e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0e368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40c072b0" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40c072b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c07488"/>
        <function-ref name="write" scoped="" ref="0x40c07568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40c0d9b8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40c0d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c0db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40c01190" loc="98:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40c01190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c01368"/>
        <function-ref name="writeDone" scoped="" ref="0x40c01448"/>
        <function-ref name="write" scoped="" ref="0x40c01528"/>
        <function-ref name="beginRead" scoped="" ref="0x40c01608"/>
        <function-ref name="readDone" scoped="" ref="0x40c016e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40c215c8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40c215c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c218a0"/>
        <function-ref name="write" scoped="" ref="0x40c21980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40c27a40" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40c27a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c27c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40c23b68" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40c23b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c23d40"/>
        <function-ref name="write" scoped="" ref="0x40c23e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40c20448" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40c20448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c20620"/>
        <function-ref name="write" scoped="" ref="0x40c20700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40c20880" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40c20880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c20a58"/>
        <function-ref name="write" scoped="" ref="0x40c20b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40c1ab20" loc="94:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40c1ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1acf8"/>
        <function-ref name="write" scoped="" ref="0x40c1add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40c1ba00" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40c1ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1bbd8"/>
        <function-ref name="write" scoped="" ref="0x40c1bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40c264e8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40c264e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c266c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40c1b190" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c1b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1b368"/>
        <function-ref name="write" scoped="" ref="0x40c1b448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40c22448" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40c22448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c22620"/>
        <function-ref name="write" scoped="" ref="0x40c22700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40c22cb8" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40c22cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c22e90"/>
        <function-ref name="write" scoped="" ref="0x40c21010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40c1d2b0" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40c1d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1d488"/>
        <function-ref name="write" scoped="" ref="0x40c1d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40c20cb8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40c20cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c20e90"/>
        <function-ref name="write" scoped="" ref="0x40c1e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40c28e50" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40c28e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40c27050"/>
        <function-ref name="abortRelease" scoped="" ref="0x40c27130"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40c27210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40c24260" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40c24260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c24438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40c245b8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40c245b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c24810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40c24990" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40c24990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c24b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40c1b5c8" loc="89:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c1b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1b7a0"/>
        <function-ref name="write" scoped="" ref="0x40c1b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40c26b98" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40c26b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c26d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40c22880" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40c22880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c22a58"/>
        <function-ref name="write" scoped="" ref="0x40c22b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40c22010" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40c22010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c221e8"/>
        <function-ref name="write" scoped="" ref="0x40c222c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40c276e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40c276e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c278c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40c1a6e8" loc="93:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40c1a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1a8c0"/>
        <function-ref name="write" scoped="" ref="0x40c1a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40c1be38" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40c1be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1a050"/>
        <function-ref name="write" scoped="" ref="0x40c1a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40c1d6e8" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40c1d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1d8c0"/>
        <function-ref name="write" scoped="" ref="0x40c1d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40c1ccb8" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40c1ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1ce90"/>
        <function-ref name="write" scoped="" ref="0x40c1b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40c1e5c8" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40c1e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1e7a0"/>
        <function-ref name="write" scoped="" ref="0x40c1e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40c19010" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40c19010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c193e8"/>
        <function-ref name="writeDone" scoped="" ref="0x40c194c8"/>
        <function-ref name="write" scoped="" ref="0x40c195a8"/>
        <function-ref name="beginRead" scoped="" ref="0x40c19688"/>
        <function-ref name="readDone" scoped="" ref="0x40c19768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40c27390" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40c27390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c27568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40c23730" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40c23730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c23908"/>
        <function-ref name="write" scoped="" ref="0x40c239e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40c21190" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40c21190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c21368"/>
        <function-ref name="write" scoped="" ref="0x40c21448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40c1e190" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40c1e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1e368"/>
        <function-ref name="write" scoped="" ref="0x40c1e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40c21b00" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40c21b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c21cd8"/>
        <function-ref name="write" scoped="" ref="0x40c21db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40c27d98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40c27d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c26010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40c20010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40c20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c201e8"/>
        <function-ref name="write" scoped="" ref="0x40c202c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c28798" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c28798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c28970"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c28a50"/>
        <function-ref name="request" scoped="" ref="0x40c28b30"/>
        <function-ref name="granted" scoped="" ref="0x40c28c10"/>
        <function-ref name="isOwner" scoped="" ref="0x40c28cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40c24ce8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40c24ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c24ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40c233d8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40c233d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c235b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40c1c880" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40c1c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1ca58"/>
        <function-ref name="write" scoped="" ref="0x40c1cb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40c1c448" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40c1c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1c620"/>
        <function-ref name="write" scoped="" ref="0x40c1c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40c26ef0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40c26ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c240e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40c1c010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c1c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1c1e8"/>
        <function-ref name="write" scoped="" ref="0x40c1c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40c1a2b0" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40c1a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1a488"/>
        <function-ref name="write" scoped="" ref="0x40c1a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40c1db20" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40c1db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1dcf8"/>
        <function-ref name="write" scoped="" ref="0x40c1ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40c26190" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40c26190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c26368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40c1ee38" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40c1ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1d050"/>
        <function-ref name="write" scoped="" ref="0x40c1d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40c26840" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40c26840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c26a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40c1ea00" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40c1ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1ebd8"/>
        <function-ref name="write" scoped="" ref="0x40c1ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40c23080" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40c23080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c23258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40c198e8" loc="98:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40c198e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c19ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x40c19ba0"/>
        <function-ref name="write" scoped="" ref="0x40c19c80"/>
        <function-ref name="beginRead" scoped="" ref="0x40c19d60"/>
        <function-ref name="readDone" scoped="" ref="0x40c19e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40c3c140" loc="54:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c3c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40c3c318"/>
        <function-ref name="changed" scoped="" ref="0x40c3c3f8"/>
        <function-ref name="amGroup" scoped="" ref="0x40c3c4d8"/>
        <function-ref name="setAddress" scoped="" ref="0x40c3c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40c2e728" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40c2e728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40c2e900"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40c2e9e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40c2eac0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40c2eba0"/>
        <function-ref name="setCca" scoped="" ref="0x40c2ec80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40c2ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40c2d7f8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40c2d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40c2d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x40c2e010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x40c2e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c2e1e8"/>
        <function-ref name="cancel" scoped="" ref="0x40c2e2c8"/>
        <function-ref name="modify" scoped="" ref="0x40c2e3a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c2e488"/>
        <function-ref name="resend" scoped="" ref="0x40c2e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40c31af8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40c31af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c31cd0"/>
        <function-ref name="stop" scoped="" ref="0x40c31db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40c2dc60" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40c2dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40c2de38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40c413b0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40c413b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40c41588"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40c41668"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40c41748"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40c41828"/>
        <function-ref name="setCca" scoped="" ref="0x40c41908"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40c419e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40c67088" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c67088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c67b88"/>
        <function-ref name="clear" scoped="" ref="0x40c65010"/>
        <function-ref name="isValid" scoped="" ref="0x40c677d8"/>
        <function-ref name="set" scoped="" ref="0x40c653c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40c5bcd0" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40c5bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c5bea8"/>
        <function-ref name="write" scoped="" ref="0x40c5a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40c5a220" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40c5a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c5a3f8"/>
        <function-ref name="write" scoped="" ref="0x40c5a4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40c41ca8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40c41ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40c41e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x40c5c4c8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40c5c4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c5c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x40c646e0" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40c646e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40c648b8"/>
        <function-ref name="disable" scoped="" ref="0x40c64998"/>
        <function-ref name="captured" scoped="" ref="0x40c64a78"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40c64b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x40c40778" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x40c40778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c3fc38"/>
        <function-ref name="fired" scoped="" ref="0x40c3f408"/>
        <function-ref name="startAt" scoped="" ref="0x40c3f8f8"/>
        <function-ref name="isRunning" scoped="" ref="0x40c3f680"/>
        <function-ref name="getAlarm" scoped="" ref="0x40c3feb0"/>
        <function-ref name="start" scoped="" ref="0x40c40ec8"/>
        <function-ref name="stop" scoped="" ref="0x40c3f190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40c3e188" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c3e188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c3e360"/>
        <function-ref name="setNetwork" scoped="" ref="0x40c3e440"/>
        <function-ref name="getRssi" scoped="" ref="0x40c3e520"/>
        <function-ref name="getNetwork" scoped="" ref="0x40c3e600"/>
        <function-ref name="getPower" scoped="" ref="0x40c3e6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x40c3e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x40c5d258" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c5d258"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c5d430"/>
        <function-ref name="write" scoped="" ref="0x40c5d510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40c5d760" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40c5d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c5d938"/>
        <function-ref name="write" scoped="" ref="0x40c5da18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x40c55970" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40c55970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c55b48"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40c55c28"/>
        <function-ref name="sfd" scoped="" ref="0x40c55d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c42c18" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c42c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c42df0"/>
        <function-ref name="cancel" scoped="" ref="0x40c42ed0"/>
        <function-ref name="modify" scoped="" ref="0x40c41010"/>
        <function-ref name="sendDone" scoped="" ref="0x40c410f0"/>
        <function-ref name="resend" scoped="" ref="0x40c411d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x40c5e4a8" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40c5e4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40c5e680"/>
        <function-ref name="abortRelease" scoped="" ref="0x40c5e760"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40c5e840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x40c5c8f8" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40c5c8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c5cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40c63830" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40c63830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c63a08"/>
        <function-ref name="isInput" scoped="" ref="0x40c63ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40c63bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c63ca8"/>
        <function-ref name="get" scoped="" ref="0x40c63d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c63e68"/>
        <function-ref name="set" scoped="" ref="0x40c5f010"/>
        <function-ref name="clr" scoped="" ref="0x40c5f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c42380" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c42380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c42558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c3e9c8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c3e9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40c3eba0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c3ec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40c64010" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c64010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c641e8"/>
        <function-ref name="isSet" scoped="" ref="0x40c642c8"/>
        <function-ref name="cancel" scoped="" ref="0x40c643a8"/>
        <function-ref name="set" scoped="" ref="0x40c64488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40c5cd38" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40c5cd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c5b050"/>
        <function-ref name="write" scoped="" ref="0x40c5b130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40c5fd30" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40c5fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c5ff08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c5e010"/>
        <function-ref name="request" scoped="" ref="0x40c5e0f0"/>
        <function-ref name="granted" scoped="" ref="0x40c5e1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c5e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x40c64d58" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40c64d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c63010"/>
        <function-ref name="isInput" scoped="" ref="0x40c630f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c631d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c632b0"/>
        <function-ref name="get" scoped="" ref="0x40c63390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c63470"/>
        <function-ref name="set" scoped="" ref="0x40c63550"/>
        <function-ref name="clr" scoped="" ref="0x40c63630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40c5a6e8" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40c5a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c5a8c0"/>
        <function-ref name="write" scoped="" ref="0x40c5a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x40c5abc8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40c5abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c5ada0"/>
        <function-ref name="write" scoped="" ref="0x40c5ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40c5dc48" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40c5dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c5de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x40c5f2f0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40c5f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c5f4c8"/>
        <function-ref name="isInput" scoped="" ref="0x40c5f5a8"/>
        <function-ref name="toggle" scoped="" ref="0x40c5f688"/>
        <function-ref name="isOutput" scoped="" ref="0x40c5f768"/>
        <function-ref name="get" scoped="" ref="0x40c5f848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c5f928"/>
        <function-ref name="set" scoped="" ref="0x40c5fa08"/>
        <function-ref name="clr" scoped="" ref="0x40c5fae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c55e98" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c55e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c580c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c581a0"/>
        <function-ref name="led1On" scoped="" ref="0x40c58280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c58360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c58440"/>
        <function-ref name="get" scoped="" ref="0x40c58520"/>
        <function-ref name="led1Off" scoped="" ref="0x40c58600"/>
        <function-ref name="led2Off" scoped="" ref="0x40c58980"/>
        <function-ref name="set" scoped="" ref="0x40c586e0"/>
        <function-ref name="led0On" scoped="" ref="0x40c587c0"/>
        <function-ref name="led2On" scoped="" ref="0x40c588a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40c5b7b0" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40c5b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c5b988"/>
        <function-ref name="write" scoped="" ref="0x40c5ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40c42720" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40c42720"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c428f8"/>
        <function-ref name="stop" scoped="" ref="0x40c429d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x40c5ea68" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40c5ea68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c5ec40"/>
        <function-ref name="writeDone" scoped="" ref="0x40c5ed20"/>
        <function-ref name="write" scoped="" ref="0x40c5ee00"/>
        <function-ref name="beginRead" scoped="" ref="0x40c5eee0"/>
        <function-ref name="readDone" scoped="" ref="0x40c5d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x40c5c098" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40c5c098"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c5c270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x40c5b370" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40c5b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c5b548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40c401b0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40c401b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40c40388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40cab5c8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40cab5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cab8a0"/>
        <function-ref name="write" scoped="" ref="0x40cab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40cb1a00" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40cb1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb1bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40cadb68" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40cadb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cadd40"/>
        <function-ref name="write" scoped="" ref="0x40cade20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40caa448" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40caa448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40caa620"/>
        <function-ref name="write" scoped="" ref="0x40caa700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40caa880" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40caa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40caaa58"/>
        <function-ref name="write" scoped="" ref="0x40caab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40cd0b20" loc="94:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40cd0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd0cf8"/>
        <function-ref name="write" scoped="" ref="0x40cd0dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40cd1a00" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40cd1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd1bd8"/>
        <function-ref name="write" scoped="" ref="0x40cd1cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40cb04e8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40cb04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40cd1190" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40cd1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd1368"/>
        <function-ref name="write" scoped="" ref="0x40cd1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40cac448" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40cac448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cac620"/>
        <function-ref name="write" scoped="" ref="0x40cac700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40caccb8" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40caccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cace90"/>
        <function-ref name="write" scoped="" ref="0x40cab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40cd32b0" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40cd32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd3488"/>
        <function-ref name="write" scoped="" ref="0x40cd3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40caacb8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40caacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40caae90"/>
        <function-ref name="write" scoped="" ref="0x40ca9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40cb2d98" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40cb2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40cb1010"/>
        <function-ref name="abortRelease" scoped="" ref="0x40cb10f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40cb11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40caf260" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40caf260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40caf438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40caf5b8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40caf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40caf810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40caf990" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40caf990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cafb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40cd15c8" loc="89:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40cd15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd17a0"/>
        <function-ref name="write" scoped="" ref="0x40cd1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40cb0b98" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40cb0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb0d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40cac880" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40cac880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40caca58"/>
        <function-ref name="write" scoped="" ref="0x40cacb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40cac010" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40cac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cac1e8"/>
        <function-ref name="write" scoped="" ref="0x40cac2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40cb16a8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40cb16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40cd06e8" loc="93:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40cd06e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd08c0"/>
        <function-ref name="write" scoped="" ref="0x40cd09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40cd1e38" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40cd1e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd0050"/>
        <function-ref name="write" scoped="" ref="0x40cd0130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40cd36e8" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40cd36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd38c0"/>
        <function-ref name="write" scoped="" ref="0x40cd39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40cd2cb8" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40cd2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd2e90"/>
        <function-ref name="write" scoped="" ref="0x40cd1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40ca95c8" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40ca95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca97a0"/>
        <function-ref name="write" scoped="" ref="0x40ca9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40ccf010" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40ccf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40ccf3e8"/>
        <function-ref name="writeDone" scoped="" ref="0x40ccf4c8"/>
        <function-ref name="write" scoped="" ref="0x40ccf5a8"/>
        <function-ref name="beginRead" scoped="" ref="0x40ccf688"/>
        <function-ref name="readDone" scoped="" ref="0x40ccf768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40cb1350" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40cb1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb1528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40cad730" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40cad730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cad908"/>
        <function-ref name="write" scoped="" ref="0x40cad9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40cab190" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40cab190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cab368"/>
        <function-ref name="write" scoped="" ref="0x40cab448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40ca9190" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40ca9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca9368"/>
        <function-ref name="write" scoped="" ref="0x40ca9448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40cabb00" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40cabb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cabcd8"/>
        <function-ref name="write" scoped="" ref="0x40cabdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40cb1d58" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40cb1d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40caa010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40caa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40caa1e8"/>
        <function-ref name="write" scoped="" ref="0x40caa2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40cb26e0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cb26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cb28b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cb2998"/>
        <function-ref name="request" scoped="" ref="0x40cb2a78"/>
        <function-ref name="granted" scoped="" ref="0x40cb2b58"/>
        <function-ref name="isOwner" scoped="" ref="0x40cb2c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40cafce8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40cafce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cafec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40cad3d8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40cad3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cad5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40cd2880" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40cd2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd2a58"/>
        <function-ref name="write" scoped="" ref="0x40cd2b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40cd2448" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40cd2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd2620"/>
        <function-ref name="write" scoped="" ref="0x40cd2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40cb0ef0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40cb0ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40caf0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40cd2010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40cd2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd21e8"/>
        <function-ref name="write" scoped="" ref="0x40cd22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40cd02b0" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40cd02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd0488"/>
        <function-ref name="write" scoped="" ref="0x40cd0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40cd3b20" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40cd3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd3cf8"/>
        <function-ref name="write" scoped="" ref="0x40cd3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40cb0190" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40cb0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb0368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40ca9e38" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40ca9e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd3050"/>
        <function-ref name="write" scoped="" ref="0x40cd3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40cb0840" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40cb0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb0a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40ca9a00" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40ca9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca9bd8"/>
        <function-ref name="write" scoped="" ref="0x40ca9cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40cad080" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40cad080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cad258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40ccf8e8" loc="98:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40ccf8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40ccfac0"/>
        <function-ref name="writeDone" scoped="" ref="0x40ccfba0"/>
        <function-ref name="write" scoped="" ref="0x40ccfc80"/>
        <function-ref name="beginRead" scoped="" ref="0x40ccfd60"/>
        <function-ref name="readDone" scoped="" ref="0x40ccfe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40cc9b60" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40cc9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cc9d38"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40cc9e18"/>
        <function-ref name="sfd" scoped="" ref="0x40cc9ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cc60b8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cc60b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cc6290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40cc6550" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40cc6550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40cc6728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40cc96c0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40cc96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cc9898"/>
        <function-ref name="stop" scoped="" ref="0x40cc9978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40cc0300" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40cc0300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc04d8"/>
        <function-ref name="isInput" scoped="" ref="0x40cc05b8"/>
        <function-ref name="toggle" scoped="" ref="0x40cc0698"/>
        <function-ref name="isOutput" scoped="" ref="0x40cc0778"/>
        <function-ref name="get" scoped="" ref="0x40cc0858"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cc0938"/>
        <function-ref name="set" scoped="" ref="0x40cc0a18"/>
        <function-ref name="clr" scoped="" ref="0x40cc0af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40ce83a0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40ce83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40ce8578"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40ce8658"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40ce8738"/>
        <function-ref name="syncDone" scoped="" ref="0x40ce8818"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40ce88f8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40ce89d8"/>
        <function-ref name="setChannel" scoped="" ref="0x40ce8ab8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40ce8b98"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40ce8c78"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40ce8d58"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40ce8e38"/>
        <function-ref name="sync" scoped="" ref="0x40ce8f18"/>
        <function-ref name="getChannel" scoped="" ref="0x40ce7010"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40ce7170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40cdb570" loc="148:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40cdb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cdb748"/>
        <function-ref name="runTask" scoped="" ref="0x40cdb828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40ce7520" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40ce7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ce6048"/>
        <function-ref name="clear" scoped="" ref="0x40ce63f8"/>
        <function-ref name="isValid" scoped="" ref="0x40ce7c70"/>
        <function-ref name="set" scoped="" ref="0x40ce67a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40cc0d10" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40cc0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc0ee8"/>
        <function-ref name="isInput" scoped="" ref="0x40cbf010"/>
        <function-ref name="toggle" scoped="" ref="0x40cbf0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cbf1d0"/>
        <function-ref name="get" scoped="" ref="0x40cbf2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cbf390"/>
        <function-ref name="set" scoped="" ref="0x40cbf470"/>
        <function-ref name="clr" scoped="" ref="0x40cbf550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40ce4688" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40ce4688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ce4860"/>
        <function-ref name="write" scoped="" ref="0x40ce4940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40ce4b50" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40ce4b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ce4d28"/>
        <function-ref name="write" scoped="" ref="0x40ce4e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x40ce3510" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40ce3510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ce36e8"/>
        <function-ref name="write" scoped="" ref="0x40ce37c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40ce96a0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40ce96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40ce9878"/>
        <function-ref name="setNetwork" scoped="" ref="0x40ce9958"/>
        <function-ref name="getRssi" scoped="" ref="0x40ce9a38"/>
        <function-ref name="getNetwork" scoped="" ref="0x40ce9b18"/>
        <function-ref name="getPower" scoped="" ref="0x40ce9bf8"/>
        <function-ref name="getLqi" scoped="" ref="0x40ce9cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40cc2a28" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40cc2a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cc2c00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40cc2ce0"/>
        <function-ref name="sfd" scoped="" ref="0x40cc2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40ceadf0" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40ceadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ce9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40cc1880" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40cc1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc1a58"/>
        <function-ref name="isInput" scoped="" ref="0x40cc1b38"/>
        <function-ref name="toggle" scoped="" ref="0x40cc1c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40cc1cf8"/>
        <function-ref name="get" scoped="" ref="0x40cc1dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cc1eb8"/>
        <function-ref name="set" scoped="" ref="0x40cc0010"/>
        <function-ref name="clr" scoped="" ref="0x40cc00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x40ce3a10" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40ce3a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ce3be8"/>
        <function-ref name="write" scoped="" ref="0x40ce3cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cc21e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cc21e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cc23c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40ce9ee0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ce9ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40ce80e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40ce81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cc1010" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cc1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cc11e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40cbfea8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40cbfea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cea0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cea1a0"/>
        <function-ref name="request" scoped="" ref="0x40cea280"/>
        <function-ref name="granted" scoped="" ref="0x40cea360"/>
        <function-ref name="isOwner" scoped="" ref="0x40cea440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40ce3030" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40ce3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ce3208"/>
        <function-ref name="write" scoped="" ref="0x40ce32e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40cea668" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40cea668"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40cea840"/>
        <function-ref name="writeDone" scoped="" ref="0x40cea920"/>
        <function-ref name="write" scoped="" ref="0x40ceaa00"/>
        <function-ref name="beginRead" scoped="" ref="0x40ceaae0"/>
        <function-ref name="readDone" scoped="" ref="0x40ceabc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40ce3ef8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40ce3ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ce2208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40cc14a8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40cc14a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40cc1680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ce2398" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ce2398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ce2570"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ce2650"/>
        <function-ref name="led1On" scoped="" ref="0x40ce2730"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ce2810"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ce28f0"/>
        <function-ref name="get" scoped="" ref="0x40ce29d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40ce2ab0"/>
        <function-ref name="led2Off" scoped="" ref="0x40ce2e30"/>
        <function-ref name="set" scoped="" ref="0x40ce2b90"/>
        <function-ref name="led0On" scoped="" ref="0x40ce2c70"/>
        <function-ref name="led2On" scoped="" ref="0x40ce2d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40ce4168" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40ce4168"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ce4340"/>
        <function-ref name="write" scoped="" ref="0x40ce4420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x40ce6ca0" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40ce6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ce6e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40cbf7e8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40cbf7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40cbf9c0"/>
        <function-ref name="disable" scoped="" ref="0x40cbfaa0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40cbfb80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40cbfc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40ce9268" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40ce9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ce94c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40cc2588" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40cc2588"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cc2760"/>
        <function-ref name="stop" scoped="" ref="0x40cc2840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40d2e918" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d2e918"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40d2eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40d03620" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40d03620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40d037f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x40d038d8"/>
        <function-ref name="getRssi" scoped="" ref="0x40d039b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x40d03a98"/>
        <function-ref name="getPower" scoped="" ref="0x40d03b78"/>
        <function-ref name="getLqi" scoped="" ref="0x40d03c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40d2d010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d2d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d2db10"/>
        <function-ref name="clear" scoped="" ref="0x40d2dec0"/>
        <function-ref name="isValid" scoped="" ref="0x40d2d760"/>
        <function-ref name="set" scoped="" ref="0x40d2b2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40d2e468" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d2e468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40d2e640"/>
        <function-ref name="getMetadata" scoped="" ref="0x40d2e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40d28218" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d28218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d283f0"/>
        <function-ref name="isSet" scoped="" ref="0x40d284d0"/>
        <function-ref name="cancel" scoped="" ref="0x40d285b0"/>
        <function-ref name="set" scoped="" ref="0x40d28690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40d2b9d8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d2b9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d2a5b0"/>
        <function-ref name="clear" scoped="" ref="0x40d2a960"/>
        <function-ref name="isValid" scoped="" ref="0x40d2a200"/>
        <function-ref name="set" scoped="" ref="0x40d2ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d03ec8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d03ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d2e0c0"/>
        <function-ref name="noAck" scoped="" ref="0x40d2e1a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d2e280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40d24328" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d24328"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40d24500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40d25010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40d25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40d251e8"/>
        <function-ref name="setNetwork" scoped="" ref="0x40d252c8"/>
        <function-ref name="getRssi" scoped="" ref="0x40d253a8"/>
        <function-ref name="getNetwork" scoped="" ref="0x40d25488"/>
        <function-ref name="getPower" scoped="" ref="0x40d25568"/>
        <function-ref name="getLqi" scoped="" ref="0x40d25648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40d1f1c0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d1f1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d1f398"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d1f478"/>
        <function-ref name="getPayload" scoped="" ref="0x40d1f558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d1f638"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d1f718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40d24980" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d24980"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d234a8"/>
        <function-ref name="clear" scoped="" ref="0x40d23858"/>
        <function-ref name="isValid" scoped="" ref="0x40d230f8"/>
        <function-ref name="set" scoped="" ref="0x40d23c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40d25e38" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d25e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40d24050"/>
        <function-ref name="getMetadata" scoped="" ref="0x40d24130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40d20af8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d20af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d20cd0"/>
        <function-ref name="isSet" scoped="" ref="0x40d20db0"/>
        <function-ref name="cancel" scoped="" ref="0x40d20e90"/>
        <function-ref name="set" scoped="" ref="0x40d1f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40d1fa58" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40d1fa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d1e0b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40d1e4c8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40d1e4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d1eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40d223a0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d223a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d22ea0"/>
        <function-ref name="clear" scoped="" ref="0x40d20280"/>
        <function-ref name="isValid" scoped="" ref="0x40d22af0"/>
        <function-ref name="set" scoped="" ref="0x40d20630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d258b8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d258b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d25a90"/>
        <function-ref name="noAck" scoped="" ref="0x40d25b70"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d25c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40d26a60" loc="48:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40d26a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d540d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d54428" loc="49:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d54428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e8e8"/>
            <typename><typedef-ref name="T32khz" ref="0x4039eab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d54b78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d53088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d54df0"/>
        <function-ref name="overflow" scoped="" ref="0x40d53300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d527d0" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d527d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d4f330"/>
        <function-ref name="fired" scoped="" ref="0x40d51570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d51c78"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d51a20"/>
        <function-ref name="getdt" scoped="" ref="0x40d4f7e0"/>
        <function-ref name="gett0" scoped="" ref="0x40d4f588"/>
        <function-ref name="isRunning" scoped="" ref="0x40d517c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d52df8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d4f010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d51098"/>
        <function-ref name="stop" scoped="" ref="0x40d51318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40d47190" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40d47190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d47468"/>
        <function-ref name="write" scoped="" ref="0x40d47548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40d4d5b8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40d4d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40d497a0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40d497a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d49978"/>
        <function-ref name="write" scoped="" ref="0x40d49a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40d46010" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40d46010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d461e8"/>
        <function-ref name="write" scoped="" ref="0x40d462c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40d46448" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40d46448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d46620"/>
        <function-ref name="write" scoped="" ref="0x40d46700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40d6e6e8" loc="94:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40d6e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d6e8c0"/>
        <function-ref name="write" scoped="" ref="0x40d6e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40d6f5c8" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40d6f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d6f7a0"/>
        <function-ref name="write" scoped="" ref="0x40d6f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40d4c010" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40d4c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40d70cb8" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40d70cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d70e90"/>
        <function-ref name="write" scoped="" ref="0x40d6f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40d48030" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40d48030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d48208"/>
        <function-ref name="write" scoped="" ref="0x40d482e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40d488a0" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40d488a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d48a78"/>
        <function-ref name="write" scoped="" ref="0x40d48b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40d73e38" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40d73e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d71050"/>
        <function-ref name="write" scoped="" ref="0x40d71130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40d46880" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40d46880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d46a58"/>
        <function-ref name="write" scoped="" ref="0x40d46b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40d019e0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40d019e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40d01bb8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40d01c98"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40d01d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40d4cd70" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40d4cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40d4b190" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40d4b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4b3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40d4b568" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40d4b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40d6f190" loc="89:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40d6f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d6f368"/>
        <function-ref name="write" scoped="" ref="0x40d6f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40d4c6c0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40d4c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40d48468" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40d48468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d48640"/>
        <function-ref name="write" scoped="" ref="0x40d48720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40d49bd8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40d49bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d49db0"/>
        <function-ref name="write" scoped="" ref="0x40d49e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40d4d260" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40d4d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4d438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40d6e2b0" loc="93:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40d6e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d6e488"/>
        <function-ref name="write" scoped="" ref="0x40d6e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40d6fa00" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40d6fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d6fbd8"/>
        <function-ref name="write" scoped="" ref="0x40d6fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40d712b0" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40d712b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d71488"/>
        <function-ref name="write" scoped="" ref="0x40d71568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40d70880" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40d70880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d70a58"/>
        <function-ref name="write" scoped="" ref="0x40d70b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40d73190" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40d73190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d73368"/>
        <function-ref name="write" scoped="" ref="0x40d73448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40d6eb20" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40d6eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40d6eef8"/>
        <function-ref name="writeDone" scoped="" ref="0x40d6d010"/>
        <function-ref name="write" scoped="" ref="0x40d6d0f0"/>
        <function-ref name="beginRead" scoped="" ref="0x40d6d1d0"/>
        <function-ref name="readDone" scoped="" ref="0x40d6d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40d01ef8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40d01ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40d49368" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40d49368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d49540"/>
        <function-ref name="write" scoped="" ref="0x40d49620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40d48cd8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40d48cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d48eb0"/>
        <function-ref name="write" scoped="" ref="0x40d47010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40d46cb8" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40d46cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d46e90"/>
        <function-ref name="write" scoped="" ref="0x40d73010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40d476c8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40d476c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d478a0"/>
        <function-ref name="write" scoped="" ref="0x40d47980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40d4d910" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40d4d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40d47b00" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40d47b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d47cd8"/>
        <function-ref name="write" scoped="" ref="0x40d47db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d01328" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d01328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d01500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d015e0"/>
        <function-ref name="request" scoped="" ref="0x40d016c0"/>
        <function-ref name="granted" scoped="" ref="0x40d017a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d01880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40d4b8c0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40d4b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40d49010" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40d49010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d491e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40d70448" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40d70448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d70620"/>
        <function-ref name="write" scoped="" ref="0x40d70700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40d70010" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40d70010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d701e8"/>
        <function-ref name="write" scoped="" ref="0x40d702c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40d4ca18" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40d4ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40d71b20" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40d71b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d71cf8"/>
        <function-ref name="write" scoped="" ref="0x40d71dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40d6fe38" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40d6fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d6e050"/>
        <function-ref name="write" scoped="" ref="0x40d6e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40d716e8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40d716e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d718c0"/>
        <function-ref name="write" scoped="" ref="0x40d719a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40d4dc68" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40d4dc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40d73a00" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40d73a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d73bd8"/>
        <function-ref name="write" scoped="" ref="0x40d73cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40d4c368" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40d4c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40d735c8" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40d735c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d737a0"/>
        <function-ref name="write" scoped="" ref="0x40d73880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40d4bc18" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40d4bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40d4bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40d6d430" loc="98:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40d6d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40d6d608"/>
        <function-ref name="writeDone" scoped="" ref="0x40d6d6e8"/>
        <function-ref name="write" scoped="" ref="0x40d6d7c8"/>
        <function-ref name="beginRead" scoped="" ref="0x40d6d8a8"/>
        <function-ref name="readDone" scoped="" ref="0x40d6d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40d84948" loc="46:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40d84948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40d84b20"/>
        <function-ref name="rand32" scoped="" ref="0x40d84c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40d84088" loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40d84088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d846b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d88da8" loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d88da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d85010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40d80478" loc="48:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40d80478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40d80650"/>
        <function-ref name="rand32" scoped="" ref="0x40d80730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40d83b10" loc="47:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40d83b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d801e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d835f0" loc="46:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d835f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d837c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40d87608" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40d87608"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d877e0"/>
        <function-ref name="toIdle" scoped="" ref="0x40d878c0"/>
        <function-ref name="isState" scoped="" ref="0x40d879a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40d87a80"/>
        <function-ref name="requestState" scoped="" ref="0x40d87b60"/>
        <function-ref name="forceState" scoped="" ref="0x40d87c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d78a70" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d78a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d78c48"/>
        <function-ref name="getPayload" scoped="" ref="0x40d78d28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d78e08"/>
        <function-ref name="cancel" scoped="" ref="0x40d78ee8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d75010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d78300" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d78300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d784d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d785b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d78698"/>
        <function-ref name="cancel" scoped="" ref="0x40d78778"/>
        <function-ref name="sendDone" scoped="" ref="0x40d78858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40da1430" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40da1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40da1608"/>
        <function-ref name="getPayload" scoped="" ref="0x40da16e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40da17c8"/>
        <function-ref name="cancel" scoped="" ref="0x40da18a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40da1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d75938" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d75938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d75b10"/>
        <function-ref name="getPayload" scoped="" ref="0x40d75bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d75cd0"/>
        <function-ref name="cancel" scoped="" ref="0x40d75db0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d75e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40da0350" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40da0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40da0528"/>
        <function-ref name="rand32" scoped="" ref="0x40da0608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40da1040" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40da1040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40da1218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40da07f0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40da07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40da09c8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40da0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40da1b00" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40da1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40da1cd8"/>
        <function-ref name="toIdle" scoped="" ref="0x40da1db8"/>
        <function-ref name="isState" scoped="" ref="0x40da1e98"/>
        <function-ref name="isIdle" scoped="" ref="0x40da0010"/>
        <function-ref name="requestState" scoped="" ref="0x40da00f0"/>
        <function-ref name="forceState" scoped="" ref="0x40da01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40d74738" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40d74738"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d74910"/>
        <function-ref name="toIdle" scoped="" ref="0x40d749f0"/>
        <function-ref name="isState" scoped="" ref="0x40d74ad0"/>
        <function-ref name="isIdle" scoped="" ref="0x40d74bb0"/>
        <function-ref name="requestState" scoped="" ref="0x40d74c90"/>
        <function-ref name="forceState" scoped="" ref="0x40d74d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d93688" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d93688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d93860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d77d68" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d77d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d93010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40d93260" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40d93260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d93438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d8f010" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d8f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d8f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d90b48" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d90b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d90d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d903d8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d903d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d905b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40d8f3d0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d8f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40d8f5a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40d8f688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40d90800" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40d90800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d909d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40dac748" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40dac748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dac920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40dacaf8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40dacaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40daccd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40dacdb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dace90"/>
        <function-ref name="cancel" scoped="" ref="0x40dab010"/>
        <function-ref name="sendDone" scoped="" ref="0x40dab0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40dad090" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40dad090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dad268"/>
        <function-ref name="getPayload" scoped="" ref="0x40dad348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dad428"/>
        <function-ref name="cancel" scoped="" ref="0x40dad508"/>
        <function-ref name="sendDone" scoped="" ref="0x40dad5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40dadb40" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40dadb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dadd18"/>
        <function-ref name="getPayload" scoped="" ref="0x40daddf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40daded8"/>
        <function-ref name="cancel" scoped="" ref="0x40dac010"/>
        <function-ref name="sendDone" scoped="" ref="0x40dac0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40dad770" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40dad770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dad948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40dae9a0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40dae9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40daeb78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40daec58"/>
        <function-ref name="request" scoped="" ref="0x40daed38"/>
        <function-ref name="granted" scoped="" ref="0x40daee18"/>
        <function-ref name="isOwner" scoped="" ref="0x40daeef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40dac320" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40dac320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dac4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40da5550" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40da5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40da5728"/>
        <function-ref name="getPayload" scoped="" ref="0x40da5808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40da58e8"/>
        <function-ref name="cancel" scoped="" ref="0x40da59c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40da5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40da5cb8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40da5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40da5e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x40dc23c0" loc="148:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x40dc23c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40dc2598"/>
        <function-ref name="runTask" scoped="" ref="0x40dc2678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40da4060" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40da4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40da4238"/>
        <function-ref name="setNetwork" scoped="" ref="0x40da4318"/>
        <function-ref name="getRssi" scoped="" ref="0x40da43f8"/>
        <function-ref name="getNetwork" scoped="" ref="0x40da44d8"/>
        <function-ref name="getPower" scoped="" ref="0x40da45b8"/>
        <function-ref name="getLqi" scoped="" ref="0x40da4698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40da69b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40da69b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40da6b90"/>
        <function-ref name="getPayload" scoped="" ref="0x40da6c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40da6d50"/>
        <function-ref name="cancel" scoped="" ref="0x40da6e30"/>
        <function-ref name="sendDone" scoped="" ref="0x40da6f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40da4d58" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40da4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40da3010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40da30f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40da31d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40da32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40da4880" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40da4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40da4a58"/>
        <function-ref name="getMetadata" scoped="" ref="0x40da4b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40da65e8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40da65e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40da67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40da7718" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40da7718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40da78f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40da79d0"/>
        <function-ref name="request" scoped="" ref="0x40da7ab0"/>
        <function-ref name="granted" scoped="" ref="0x40da7b90"/>
        <function-ref name="isOwner" scoped="" ref="0x40da7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40da7e58" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40da7e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40da6050"/>
        <function-ref name="getPayload" scoped="" ref="0x40da6130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40da6210"/>
        <function-ref name="cancel" scoped="" ref="0x40da62f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40da63d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40da5160" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40da5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40da5338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40da89a0" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40da89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40da8b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40da8cd8" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40da8cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40da8eb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40de0010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40de00f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40de01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ddaf18" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ddaf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40dd9108"/>
        <function-ref name="stopDone" scoped="" ref="0x40dd91e8"/>
        <function-ref name="start" scoped="" ref="0x40dd92c8"/>
        <function-ref name="stop" scoped="" ref="0x40dd93a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40dd9df0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40dd9df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dd7010"/>
        <function-ref name="getPayload" scoped="" ref="0x40dd70f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dd71d0"/>
        <function-ref name="cancel" scoped="" ref="0x40dd72b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40dd7390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40dd75a0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40dd75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dd7778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d94d98" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d94d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dda010"/>
        <function-ref name="getPayload" scoped="" ref="0x40dda0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dda1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40dda2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40dda390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40dda8e0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40dda8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40ddaab8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40ddab98"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40ddac78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40ddad58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40dd95a0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40dd95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40dd9778"/>
        <function-ref name="toIdle" scoped="" ref="0x40dd9858"/>
        <function-ref name="isState" scoped="" ref="0x40dd9938"/>
        <function-ref name="isIdle" scoped="" ref="0x40dd9a18"/>
        <function-ref name="requestState" scoped="" ref="0x40dd9af8"/>
        <function-ref name="forceState" scoped="" ref="0x40dd9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40dd79c0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40dd79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40dd7b98"/>
        <function-ref name="stopDone" scoped="" ref="0x40dd7c78"/>
        <function-ref name="start" scoped="" ref="0x40dd7d58"/>
        <function-ref name="stop" scoped="" ref="0x40dd7e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40dda518" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40dda518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dda6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40dd6600" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40dd6600"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40dd67d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40dd68b8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40dd6998"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40dd6a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40dd56a8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40dd56a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40dd5880"/>
        <function-ref name="toIdle" scoped="" ref="0x40dd5960"/>
        <function-ref name="isState" scoped="" ref="0x40dd5a40"/>
        <function-ref name="isIdle" scoped="" ref="0x40dd5b20"/>
        <function-ref name="requestState" scoped="" ref="0x40dd5c00"/>
        <function-ref name="forceState" scoped="" ref="0x40dd5ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40dfd010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40dfd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dfd1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40dfd2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dfd3a8"/>
        <function-ref name="cancel" scoped="" ref="0x40dfd488"/>
        <function-ref name="sendDone" scoped="" ref="0x40dfd568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40dfe158" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40dfe158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dfe330"/>
        <function-ref name="getPayload" scoped="" ref="0x40dfe410"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dfe4f0"/>
        <function-ref name="cancel" scoped="" ref="0x40dfe5d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40dfe6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40dfe858" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40dfe858"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40dfea30"/>
        <function-ref name="setRetries" scoped="" ref="0x40dfeb10"/>
        <function-ref name="getRetries" scoped="" ref="0x40dfebf0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40dfecd0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40dfedb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40dfa510" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40dfa510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40dfa6e8"/>
        <function-ref name="noAck" scoped="" ref="0x40dfa7c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40dfa8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40dfdcb0" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40dfdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40dfde88"/>
        <function-ref name="setRetries" scoped="" ref="0x40dfa010"/>
        <function-ref name="getRetries" scoped="" ref="0x40dfa0f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40dfa1d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40dfa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e1b5a0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e1b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e1b778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40debdf8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40debdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e1b010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e1b0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e1b1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40e1b2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e1b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40e1a670" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40e1a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40e1a848"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40e1a928"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40e1aa08"/>
        <function-ref name="syncDone" scoped="" ref="0x40e1aae8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40e1abc8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40e1aca8"/>
        <function-ref name="setChannel" scoped="" ref="0x40e1ad88"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40e1ae68"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40e19010"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40e190f0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40e191d0"/>
        <function-ref name="sync" scoped="" ref="0x40e192b0"/>
        <function-ref name="getChannel" scoped="" ref="0x40e19390"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40e194f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40deb5a8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40deb5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40deb780"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40deb860"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40deb940"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40deba20"/>
        <function-ref name="setCca" scoped="" ref="0x40debb00"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40debbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40dedf10" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40dedf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40deb108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x40e19e40" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x40e19e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40e18050"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40e18130"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40e18210"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40e182f0"/>
        <function-ref name="setCca" scoped="" ref="0x40e183d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40e184b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ded518" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ded518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ded6f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ded7d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ded8b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ded990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40deda70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40def4e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40def4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40def6c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40def7a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40def880"/>
        <function-ref name="cancel" scoped="" ref="0x40def960"/>
        <function-ref name="sendDone" scoped="" ref="0x40defa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40dee580" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40dee580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dee758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40e1b938" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40e1b938"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40e1bb10"/>
        <function-ref name="setNetwork" scoped="" ref="0x40e1bbf0"/>
        <function-ref name="getRssi" scoped="" ref="0x40e1bcd0"/>
        <function-ref name="getNetwork" scoped="" ref="0x40e1bdb0"/>
        <function-ref name="getPower" scoped="" ref="0x40e1be90"/>
        <function-ref name="getLqi" scoped="" ref="0x40e1a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40e19700" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40e19700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40e19958"/>
        <function-ref name="changed" scoped="" ref="0x40e19a38"/>
        <function-ref name="amGroup" scoped="" ref="0x40e19b18"/>
        <function-ref name="setAddress" scoped="" ref="0x40e19bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40e1a1f8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e1a1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40e1a3d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40e1a4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40defea8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40defea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dee0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e18db8" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e18db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e17010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e170f0"/>
        <function-ref name="led1On" scoped="" ref="0x40e171d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e172b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e17390"/>
        <function-ref name="get" scoped="" ref="0x40e17470"/>
        <function-ref name="led1Off" scoped="" ref="0x40e17550"/>
        <function-ref name="led2Off" scoped="" ref="0x40e178d0"/>
        <function-ref name="set" scoped="" ref="0x40e17630"/>
        <function-ref name="led0On" scoped="" ref="0x40e17710"/>
        <function-ref name="led2On" scoped="" ref="0x40e177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40dee8f0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40dee8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40deeac8"/>
        <function-ref name="source" scoped="" ref="0x40deeba8"/>
        <function-ref name="address" scoped="" ref="0x40deec88"/>
        <function-ref name="destination" scoped="" ref="0x40deed68"/>
        <function-ref name="setSource" scoped="" ref="0x40deee48"/>
        <function-ref name="setDestination" scoped="" ref="0x40deef28"/>
        <function-ref name="type" scoped="" ref="0x40ded018"/>
        <function-ref name="setType" scoped="" ref="0x40ded0f8"/>
        <function-ref name="isForMe" scoped="" ref="0x40ded1d8"/>
        <function-ref name="setGroup" scoped="" ref="0x40ded2b8"/>
        <function-ref name="localGroup" scoped="" ref="0x40ded398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x40e186f0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x40e186f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e188c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e189a8"/>
        <function-ref name="request" scoped="" ref="0x40e18a88"/>
        <function-ref name="granted" scoped="" ref="0x40e18b68"/>
        <function-ref name="isOwner" scoped="" ref="0x40e18c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e62e08" loc="49:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="PrintfC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e62e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e61010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e610f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e611d0"/>
        <function-ref name="cancel" scoped="" ref="0x40e612b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e61390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e614d0" loc="50:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="PrintfC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e614d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e616a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e61788"/>
        <function-ref name="getPayload" scoped="" ref="0x40e61868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e61948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e61a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e61b68" loc="51:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="PrintfC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e61b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e61d40"/>
        <function-ref name="source" scoped="" ref="0x40e61e20"/>
        <function-ref name="address" scoped="" ref="0x40e61f00"/>
        <function-ref name="destination" scoped="" ref="0x40eaf010"/>
        <function-ref name="setSource" scoped="" ref="0x40eaf0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40eaf1d0"/>
        <function-ref name="type" scoped="" ref="0x40eaf2b0"/>
        <function-ref name="setType" scoped="" ref="0x40eaf390"/>
        <function-ref name="isForMe" scoped="" ref="0x40eaf470"/>
        <function-ref name="setGroup" scoped="" ref="0x40eaf550"/>
        <function-ref name="localGroup" scoped="" ref="0x40eaf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40eaf790" loc="52:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="PrintfC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40eaf790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40eaf968"/>
        <function-ref name="noAck" scoped="" ref="0x40eafa48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40eafb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4126b2c8" loc="49:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="PrintfC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4126b2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4126b4a0"/>
        <function-ref name="getPayload" scoped="" ref="0x4126b580"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4126b660"/>
        <function-ref name="cancel" scoped="" ref="0x4126b740"/>
        <function-ref name="sendDone" scoped="" ref="0x4126b820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4126b960" loc="50:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="PrintfC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4126b960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4126bb38"/>
        <function-ref name="payloadLength" scoped="" ref="0x4126bc18"/>
        <function-ref name="getPayload" scoped="" ref="0x4126bcf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4126bdd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4126beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4126a010" loc="51:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="PrintfC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4126a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4126a1e8"/>
        <function-ref name="source" scoped="" ref="0x4126a2c8"/>
        <function-ref name="address" scoped="" ref="0x4126a3a8"/>
        <function-ref name="destination" scoped="" ref="0x4126a488"/>
        <function-ref name="setSource" scoped="" ref="0x4126a568"/>
        <function-ref name="setDestination" scoped="" ref="0x4126a648"/>
        <function-ref name="type" scoped="" ref="0x4126a728"/>
        <function-ref name="setType" scoped="" ref="0x4126a808"/>
        <function-ref name="isForMe" scoped="" ref="0x4126a8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x4126a9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x4126aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4126ac08" loc="52:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="PrintfC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4126ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4126ade0"/>
        <function-ref name="noAck" scoped="" ref="0x4126aec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41269010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41267c20" loc="44:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41267c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41267df8"/>
        <function-ref name="getPayload" scoped="" ref="0x41267ed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41264010"/>
        <function-ref name="cancel" scoped="" ref="0x412640f0"/>
        <function-ref name="sendDone" scoped="" ref="0x412641d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41264340" loc="46:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41264340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41264518"/>
        <function-ref name="getPayload" scoped="" ref="0x412645f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412646d8"/>
        <function-ref name="cancel" scoped="" ref="0x412647b8"/>
        <function-ref name="sendDone" scoped="" ref="0x41264898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x412649d8" loc="47:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412649d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41264bb0"/>
        <function-ref name="source" scoped="" ref="0x41264c90"/>
        <function-ref name="address" scoped="" ref="0x41264d70"/>
        <function-ref name="destination" scoped="" ref="0x41264e50"/>
        <function-ref name="setSource" scoped="" ref="0x41263010"/>
        <function-ref name="setDestination" scoped="" ref="0x412630f0"/>
        <function-ref name="type" scoped="" ref="0x412631d0"/>
        <function-ref name="setType" scoped="" ref="0x412632b0"/>
        <function-ref name="isForMe" scoped="" ref="0x41263390"/>
        <function-ref name="setGroup" scoped="" ref="0x41263470"/>
        <function-ref name="localGroup" scoped="" ref="0x41263550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e7fda8" loc="43:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e7fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e7c010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e7c0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e7c1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40e7c2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e7c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40e85598" loc="48:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e85598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e85780"/>
        <function-ref name="getPayload" scoped="" ref="0x40e85860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e85940"/>
        <function-ref name="cancel" scoped="" ref="0x40e85a20"/>
        <function-ref name="sendDone" scoped="" ref="0x40e85b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e79da0" loc="46:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e79da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e85010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e850f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e851d0"/>
        <function-ref name="cancel" scoped="" ref="0x40e852b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e85390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40e84850" loc="50:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e84850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e84a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e84b08"/>
        <function-ref name="getPayload" scoped="" ref="0x40e84be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e84cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e84da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40e84f28" loc="169:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40e84f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e83110"/>
        <function-ref name="runTask" scoped="" ref="0x40e831f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40e83370" loc="126:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40e83370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e83548"/>
        <function-ref name="runTask" scoped="" ref="0x40e83628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40e85c40" loc="49:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e85c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e85e18"/>
        <function-ref name="source" scoped="" ref="0x40e85ef8"/>
        <function-ref name="address" scoped="" ref="0x40e84010"/>
        <function-ref name="destination" scoped="" ref="0x40e840f0"/>
        <function-ref name="setSource" scoped="" ref="0x40e841d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40e842b0"/>
        <function-ref name="type" scoped="" ref="0x40e84390"/>
        <function-ref name="setType" scoped="" ref="0x40e84470"/>
        <function-ref name="isForMe" scoped="" ref="0x40e84550"/>
        <function-ref name="setGroup" scoped="" ref="0x40e84630"/>
        <function-ref name="localGroup" scoped="" ref="0x40e84710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40eaab48" loc="60:./radioprintf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40eaab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eaad20"/>
        <function-ref name="getPayload" scoped="" ref="0x40eaae00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eaaee0"/>
        <function-ref name="cancel" scoped="" ref="0x40ea9010"/>
        <function-ref name="sendDone" scoped="" ref="0x40ea90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40ea9270" loc="61:./radioprintf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ea9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ea9448"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ea9528"/>
        <function-ref name="getPayload" scoped="" ref="0x40ea9608"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ea96e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ea97c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x40ea4990" loc="80:./radioprintf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x40ea4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ea4b68"/>
        <function-ref name="runTask" scoped="" ref="0x40ea4c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40eabf10" loc="59:./radioprintf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40eabf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40eaa108"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40eaa1e8"/>
        <function-ref name="led1On" scoped="" ref="0x40eaa2c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40eaa3a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40eaa488"/>
        <function-ref name="get" scoped="" ref="0x40eaa568"/>
        <function-ref name="led1Off" scoped="" ref="0x40eaa648"/>
        <function-ref name="led2Off" scoped="" ref="0x40eaa9c8"/>
        <function-ref name="set" scoped="" ref="0x40eaa728"/>
        <function-ref name="led0On" scoped="" ref="0x40eaa808"/>
        <function-ref name="led2On" scoped="" ref="0x40eaa8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PrintfControl" ref="0x40eabaa8" loc="56:./radioprintf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PrintfControl" scoped="" ref="0x40eabaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40eabc80"/>
        <function-ref name="stop" scoped="" ref="0x40eabd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlushTimer" ref="0x40ea9a98" loc="62:./radioprintf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushTimer" scoped="" ref="0x40ea9a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ea6650"/>
        <function-ref name="fired" scoped="" ref="0x40ea8830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ea6010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ea8ce0"/>
        <function-ref name="getdt" scoped="" ref="0x40ea6b00"/>
        <function-ref name="gett0" scoped="" ref="0x40ea68a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40ea8a88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ea80d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ea6330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ea8358"/>
        <function-ref name="stop" scoped="" ref="0x40ea85d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40eac238" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PrintfC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40eac238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4039e4a8"/>
            <typename><typedef-ref name="TMilli" ref="0x4039e670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ec4d58"/>
        <function-ref name="fired" scoped="" ref="0x40ec4010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ec4718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ec44c0"/>
        <function-ref name="getdt" scoped="" ref="0x40ec2268"/>
        <function-ref name="gett0" scoped="" ref="0x40ec2010"/>
        <function-ref name="isRunning" scoped="" ref="0x40ec4268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40eac860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ec4a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40eacae0"/>
        <function-ref name="stop" scoped="" ref="0x40eacd60"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40441ec8" loc="62:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40441360" loc="60:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40451168" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40451010" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4044b7b0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4044bde8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4044bc90" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404484c8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40448370" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40448a20" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40457138" loc="44:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40457520" loc="45:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40459990" loc="42:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40457cf0" loc="47:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40459d50" loc="43:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404578f8" loc="46:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40459250" loc="40:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404595e0" loc="41:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4034e390" loc="57:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4034ec98" loc="72:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4034e7d0" loc="65:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4034fb68" loc="67:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40354090" loc="75:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403c61c8" loc="76:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010/06/29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403dc330" loc="62:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4038e340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403d8630" loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40548010" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40548458" loc="67:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x405488d8" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40546158" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40546e48" loc="100:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40545318" loc="117:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40548d00" loc="77:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40545a58" loc="134:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40545900" loc="134:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40549ba0" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x405465d8" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40546a00" loc="94:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x405668e0" loc="68:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40566480" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x40566070" loc="54:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x4056aad0" loc="53:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x40572d48" loc="20:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4057eb80" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4057dae8" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4057e788" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x4057d620" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x4057d4c8" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x4057e380" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x4057d010" loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x405843d8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x405dda90" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x405dd5d0" loc="59:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x405e0070" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x405e1860" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x405e1a88" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x405e1cb0" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x405e1ed0" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x405de3f0" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405e0990" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x405e0b80" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x405e0d88" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x405de010" loc="120:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x405de278" loc="120:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x405d4cf8" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x405d4518" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x405d4740" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x405d4968" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x405d4b88" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405e2010" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x405d39a8" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405d3658" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x405d3848" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010/06/29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x405d79e8" loc="120:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x405d70c8" loc="97:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x405cca90" loc="88:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x405d7578" loc="102:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x405d50f8" loc="128:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x405f2010" loc="114:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x405e96c8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403996b0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x40399938"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x405f04b8" loc="140:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x405f0360" loc="140:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x405f24d0" loc="122:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x405e4138" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x405e9ce0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403996b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40399938"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x405e9b88" loc="58:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403996b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40399938"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x405e4988" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x405f2de8" loc="133:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405f0960" loc="150:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x405e4538" loc="86:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x405e32a0" loc="99:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x405e4de0" loc="95:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x405e36d8" loc="106:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x405f2940" loc="127:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x405e5808" loc="69:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4039f900"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4039fca8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x405e56b0" loc="69:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4039f900"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4039fca8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x405e3ba0" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x405e51d8" loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4039f900"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4039fca8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x405e5cb8" loc="75:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x405ef168" loc="156:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405ef010" loc="156:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x405db7e8" loc="95:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405dbcd0" loc="105:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010/06/29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40637458" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40637a30" loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x406351a8" loc="56:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40635b90" loc="73:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40639c40" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x406356b8" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x406341a8" loc="81:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x406334e8" loc="90:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x406339e8" loc="98:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010/06/29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4063e840" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406421f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4063e6e8" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406421f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x4063f4c8" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x4063fb88" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406421f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4063fa30" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406421f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4063e158" loc="70:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x406421f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x406804d8" loc="62:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x406959a8" loc="59:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x406959a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x406946b0" loc="76:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40695048"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40695ed0" loc="76:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40695048"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40694130" loc="76:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40694330" loc="76:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40694540" loc="76:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x4068fc80" loc="112:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4068f500" loc="112:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4068f700" loc="112:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x4068f900" loc="112:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4068fb10" loc="112:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40692980" loc="92:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40695048"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40692200" loc="92:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40695048"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40692400" loc="92:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40692600" loc="92:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40692810" loc="92:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40690b70" loc="102:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x406903f0" loc="102:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x406905f0" loc="102:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x406907f0" loc="102:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40690a00" loc="102:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x406c4cb0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010/06/29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x406f0f28" loc="54:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x406ee318" loc="55:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x406eec48" loc="60:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x406eeaf0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x406f0b48" loc="52:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x406ec2a8" loc="65:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x406e9568" loc="84:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x406ec828" loc="67:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x406ec6d0" loc="67:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x406e82e8" loc="89:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x406f03c0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x406f0268" loc="49:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x406edea8" loc="64:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x406edd50" loc="64:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x406ecd00" loc="68:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x406ed070" loc="61:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x406eb630" loc="75:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x406ee720" loc="56:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x406e9168" loc="83:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x406e9010" loc="83:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x406e9ee8" loc="88:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406e9d90" loc="88:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x406eb1c8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x406f0750" loc="50:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x406ed578" loc="62:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x406ed420" loc="62:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x406ebbf0" loc="81:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x406eba98" loc="81:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x406e99b0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x406ed960" loc="63:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40758850" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x407586f8" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40757730" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x407575d8" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40758010" loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40758d60" loc="130:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40759518" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40759518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40768f00" loc="136:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40754ab0" loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40753cc0" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40753978" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40753b60" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x407534d0" loc="98:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40767888" loc="151:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40767358" loc="144:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40753010" loc="92:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40759b70" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40759a18" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x407688e0" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40768598" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40768780" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40754218" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407540c0" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407546e8" loc="78:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40783a88" loc="53:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40783a88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40780010" loc="61:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4078d3c8" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4078d3c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4078d530" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078d530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4078da18" loc="64:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078d530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4078c510" loc="76:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4078c010" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4078c910" loc="82:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407943b8" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407943b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40794520" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40794520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40791810" loc="109:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40794520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407934d0" loc="78:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x407911c8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40794520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40794520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40793e48" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40794520"/></type-var>
          </variable>
          <variable name="dt" ref="0x40791068" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40794520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40793940" loc="88:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40791ca0" loc="116:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40794520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40794b50" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40794520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407949f8" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40794520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40793070" loc="73:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x407a6bb8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a67a8"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403a69d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x407ba1a8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b0840"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403b0a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x407a36e0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1130"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403b1358"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x407a3ce8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1130"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403b1358"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x407a3b90" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1130"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403b1358"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x407ba7b0" loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b0840"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403b0a68"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x407ba658" loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b0840"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403b0a68"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x407a3228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a67a8"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403a69d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407a30d0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a67a8"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403a69d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x407b2ce8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x407b11c8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x407b28d0" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x407b1688" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x407b5dd0" loc="21:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ac9c0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x403acbe8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x407b23f0" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ac9c0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403acbe8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x407b2298" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ac9c0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403acbe8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x407a55b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a55b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x407b64f0" loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407b7498" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407a5aa8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a55b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407b78a0" loc="62:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x407b6950" loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407b7058" loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a55b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x407a5ed8" loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a55b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407b7ca8" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407b60c8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x407aebd8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407aebd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x407a8438" loc="98:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x407a9b08" loc="87:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407aa0f8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407aebd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x407a89c8" loc="104:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x407a8870" loc="104:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x407a8e58" loc="110:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407aaec0" loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x407aaaa0" loc="70:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x407a8010" loc="93:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407aa670" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407aebd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x407aa518" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407aebd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407a92e8" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407a96e0" loc="81:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4087e070" loc="95:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4087e538" loc="105:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4088acb8" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4088a758" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4088a970" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4088ab50" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40886a88" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40886728" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40886908" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408861c8" loc="123:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40887b80" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40887a28" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408a1898" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a1540" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408a1738" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40889e40" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
              <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408898f8" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40889ad8" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40889cb8" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4089a2a0" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089a148" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4089ac70" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089ab18" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40899c00" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408998a0" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40899a80" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408992b8" loc="106:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x408988f8" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408985b8" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40898798" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40895328" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40895328"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40895490" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40895490"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x408bd6a8" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40895490"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bd550" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x408a2168" loc="70:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a2010" loc="70:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40895b18" loc="49:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408959c0" loc="49:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408a2c28" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40895490"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a28b8" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x408a2ac8" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40895490"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x408b6bd8" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b6840" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x408b6a78" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x408b36c8" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b3570" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x408b6368" loc="57:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x408b9cd0" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x408b9b78" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4089cd68" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089cc10" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x408a69c8" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a6870" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x408a5460" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a5308" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x408a9088" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40430a50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408abf08" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40894930" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408947d8" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4089f858" loc="68:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4089fef0" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4089fd98" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x408ad238" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408afeb0" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408ad0d8" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x408af530" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408af1c8" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408af3d0" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x408aca28" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408ac8d0" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x408ab580" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408ab250" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x408ab420" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404307f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408addd8" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408adc80" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x408a9d08" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40430a50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408a99a8" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x408a9ba8" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40430a50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x408a75a0" loc="195:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40430a50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x408bf550" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bf3f8" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x408c0458" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c0300" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x408c15d8" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x408c1480" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x408c9ed0" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x408c9d78" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x408c1bd0" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x408c1a78" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x408c0d08" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c0bb0" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x408d2060" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x408becc8" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x408beee0" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x408c74f8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408c71a0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x408c7398" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x408c5170" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408c6d80" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x408c5010" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x408c7b80" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x40039630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408c7a28" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x408c6940" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408c67e8" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x408cbcc8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408cbb70" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x408c6258" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408c6100" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x408d5010" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d6e80" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x408d73a8" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d7010" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x408d7248" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x408d6688" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d6530" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x408d6010" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d7be8" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x408d7e20" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x408d5930" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d57d8" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x408ca938" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ca7e0" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408cd3c8" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cd088" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408cd268" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408e5eb0" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e5b50" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408e5d30" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408e55f0" loc="112:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408cc020" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cdeb0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408cccb8" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cc960" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408ccb58" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408ec010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408f3c30" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x408f3e18" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408ecb38" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x408ea278" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x408eba48" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x408ebef0" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408ea110" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408eb558" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x408eb200" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408eb3f8" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x408ec660" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x408ec508" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40903010" loc="52:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x408edaf0" loc="46:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x40901838" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x40410ca8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x4040eca8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409016a0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x409002f8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x4040d3c8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x4040c310"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40900160" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x408f0010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x408ee2d0" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x408f0e58" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x408f11a8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x408f1b08" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x408f0528" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x408f09e8" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x408f16b0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x408fda48" loc="71:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x408ffb48" loc="56:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x408fd5e0" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x408fd488" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x408fd010" loc="61:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x408ff058" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x40900ed0" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x408ff6c0" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x408ff568" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x40922060" loc="99:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x40923cb8" loc="99:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x40923ec0" loc="99:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x40923320" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x40924d20" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x40924930" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x40924bc0" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40927618" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x409274c0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x40923838" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x40925a40" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x409258e8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40925010" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40927e58" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x40922b48" loc="110:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x40924420" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x409242c8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x40922600" loc="105:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x40925468" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40927010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40927a28" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x40925e80" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40928b78" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40928b78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4093c038" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4093c7e8" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40928b78"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4093c4b8" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4093c688" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40928b78"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010/06/29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x409482a8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40408998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40948150" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40948940" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40408998"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409487e8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x4094d340" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x4094dbb0" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x4094d7b0" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40430a50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40932e38" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40430a50"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40932ad0" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40430a50"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40932cd8" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40430cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010/06/29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x40947698" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40408998"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x4094a378" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40408998"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40931b08" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4094a010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4094a210" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40949178" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40408998"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4094a920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4094adf8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40949010" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x409ba010" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403be330"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403be558"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x4099d988" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b86a0"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403b88c8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4099d830" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b86a0"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403b88c8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x4099c4d0" loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c0d70"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403bf010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x4099e2a0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b5668"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403b5890"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x4099cae0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c0d70"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403bf010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x4099c988" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c0d70"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403bf010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x409ba620" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403be330"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403be558"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x409ba4c8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403be330"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403be558"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x4099ec90" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b7d58"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403b6010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x4099e7c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b86a0"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403b88c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x4099d340" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b5668"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403b5890"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4099d1e8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b5668"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403b5890"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x4099c010" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b7d58"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403b6010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4099de50" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b7d58"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403b6010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x409a0858" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a0858"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x409b6360" loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x409b6208" loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x409b7950" loc="76:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x409a0d50" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a0858"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x409b88b8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a0858"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x409b8760" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a0858"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x409b8cf8" loc="64:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x409b7db0" loc="82:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409b82e0" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a0858"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x409b8188" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a0858"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x409b7138" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409b7530" loc="70:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40aa7e20" loc="54:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40aa27e8" loc="66:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40aa23a0" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40aa2248" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40aa7918" loc="53:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x40acbc90" loc="24:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x40ac81a8" loc="31:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x40ac8688" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x40ada7a8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ada448" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40ada648" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40ad8ef0" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ad8990" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40ad8b90" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40ad8d88" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40ad8170" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40408998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ad9db8" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40ad8010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x40adcb88" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40408998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40adc828" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40adca28" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40ad9570" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ad9010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40ad9210" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40ad9408" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40aebc08" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40aeb698" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40aeb8b0" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40aebaa0" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40aea298" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40ae9ae0" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40ae9cf8" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ae9ee8" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40aea128" loc="83:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40aee848" loc="45:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40aee6f0" loc="45:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="50:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40b2fa68" loc="57:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b2f910" loc="57:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40b2c6e8" loc="69:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b2c590" loc="69:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40b2c010" loc="63:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40b2cd30" loc="76:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b2cbd8" loc="76:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40b46548" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40b40c38" loc="126:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40b43dd8" loc="117:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40b3f288" loc="128:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40b3f130" loc="128:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40b460f8" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40b42d48" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40b42bf0" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40b43010" loc="113:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40b44e48" loc="113:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40b46dd8" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40b3d318" loc="142:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40b3d1c0" loc="142:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40b43468" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40b3fc10" loc="131:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40b3fab8" loc="131:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40b3e4b0" loc="137:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40b407f0" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40b40698" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40b3ed78" loc="141:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40b42380" loc="119:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40b42228" loc="119:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40b44390" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b44238" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40b439b8" loc="116:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40b43860" loc="116:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40b40210" loc="123:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40b3f6b0" loc="129:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40b3e038" loc="132:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40b3e908" loc="139:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40b427b8" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40b46970" loc="89:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40b44958" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b44800" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x40c2d568" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40c55750" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40c551d0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x40c555f0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x40c59cf8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x40c59878" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40c59720" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40c62918" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c627c0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40c62010" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c65e70" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c61b08" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c619b0" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c61220" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c610c8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4043ff20"/>
                <typename><typedef-ref name="message_t" ref="0x4043ecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40d85578" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40d85578"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40d85bc8" loc="64:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40d85578"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40d85a70" loc="64:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40d85578"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
